def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def mat223(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b21, b22, b23 = div2x3(b)


	m1 =strassenIt( a21,-b11+b13)
	m2 =strassenIt( a12,b21)
	m3 =strassenIt( -a11+a21+a12-a22,b12)
	m4 =strassenIt( a12-a22,-b21+b23)
	m5 =strassenIt( -2*a11+a21+2*a12-a22,b22+b23)
	m6 =strassenIt( a11,b13)
	m7 =strassenIt( a12,b23)
	m8 =strassenIt( a12-a22,b12+b22)
	m9 =strassenIt( -2*a11+a21,b12+b22+b13+b23)
	m10 =strassenIt( 2*a11-a21-a12+a22,b12+b22+b23)
	m11 =strassenIt( a11,b11+b13)
	
c11 = m2-m6+m11
	c12 = m3+m5-m7+m10
	c13 = m6+m7
	c21 = -m1+m2+m4+2*m6+m8+m9+m10
	c22 = 2*m3+m5-m7-m8+m10
	c23 = 2*m6+m7+m8+m9+m10)

	result = np.concatenate((np.concatenate(c11, c21, c31), axis=0), np.concatenate(c12, c22, c32), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def mat224(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b14, b21, b22, b23, b24 = div2x4(b)


	m1 =strassenIt( -a11+a21+2*a12-2*a22,b12+b13+b14)
	m2 =strassenIt( a11-a12,b12+2*b13)
	m3 =strassenIt( a11-a12,-b11-b13+b14)
	m4 =strassenIt( a12,-2*b11-2*b21+b12+b22+2*b14+2*b24)
	m5 =strassenIt( a21+a12-2*a22,-b21-b12+b24)
	m6 =strassenIt( a21-a22,2*b14+b24)
	m7 =strassenIt( a11-a21-2*a12+2*a22,b11+b13)
	m8 =strassenIt( a12,-b11-b21+b12+b22+b13+b23+b14+b24)
	m9 =strassenIt( -a21+a22,2*b11+b21+2*b14+b24)
	m10 =strassenIt( -a12+a22,-4*b11-2*b21+2*b12+b22-2*b13-b23+2*b14+b24)
	m11 =strassenIt( -a12+a22,2*b11+b21+2*b13+b23)
	m12 =strassenIt( -a21+2*a22,-b11-b21+b14+b24)
	m13 =strassenIt( -a21+2*a22,b11+b21)
	m14 =strassenIt( a21+a12-2*a22,b11+b21+b12+b13+b14)
	
c11 = -m1-m2-m3+m13+m14
	c12 = -2*m1-m2-2*m3+m4-2*m5-2*m7-2*m12
	c13 = m1+m2+m3-m4+m5+m7+m8+m12
	c14 = m3+m5+m7+m12+m13+m14
	c21 = -m6-m9+m13
	c22 = m4-m5-2*m6-m9+m10+m11-2*m12
	c23 = -m4+m5+m6+m8+m9+m11+m12+m14
	c24 = m6+m12+m13)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x5(a):

	col = len(a)/2
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25)

def mat225(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25 = div2x5(b)


	m1 =strassenIt( a11+a21+a12,-2*b12+b13-2*b14+b15)
	m2 =strassenIt( -a11-a12,-b11-b14+b15)
	m3 =strassenIt( -a12-a22,-b24+b25)
	m4 =strassenIt( a12,2*b12+b22-b13+b23+2*b14+b24-b15+b25)
	m5 =strassenIt( a22,b22+b23+b24+b25)
	m6 =strassenIt( a12,b11-b21-b12+b22+b14-b24-b15+b25)
	m7 =strassenIt( a21-a12,-b11+b21+b12-b14+b24+b15)
	m8 =strassenIt( -a11-a12,b12)
	m9 =strassenIt( -a21+a12,b12+b22+b24+b25)
	m10 =strassenIt( -a11-a21,-b14+b15)
	m11 =strassenIt( a12,-b11+b21+2*b12+b22-b13+b23+b14+2*b24)
	m12 =strassenIt( a21,b22+b13+b24+b25)
	m13 =strassenIt( a21,-2*b11+2*b21+b12+b22+2*b13-b14+3*b24+b15+b25)
	m14 =strassenIt( a21+a22,b22+b24+b25)
	m15 =strassenIt( -a12-a22,b22+b24)
	m16 =strassenIt( a21,-b11+b21+b12+b13+b24+b15)
	m17 =strassenIt( a21+a22,b21+b24)
	m18 =strassenIt( a11+a21,b12+b15)
	
c11 = m2+m6-2*m7-m9-m10-2*m12+m13
	c12 = -m4+m6-m8+m11
	c13 = m1+m4-m8-m9+2*m10-m12+m18
	c14 = -m6+m7+m8+m9+m10+m12-m16+m18
	c15 = m4-m7+m8-m11-m12+m13-m16+m18
	c21 = -m3-m6+m7+2*m12-m13-m14-m15+m17
	c22 = -m3+m4-m6-m9-m11-m14-2*m15
	c23 = m5+m12-m14
	c24 = m3+m6-m7-m12+m14+m15+m16
	c25 = -m4+m7+m9+m11+m12-m13+m14+m15+m16)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x6(a):

	col = len(a)/2
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26)

def mat226mod2(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26 = div2x6(b)


	m1 =strassenItmod2( a21,b15^b25^b16^b26)
	m2 =strassenItmod2( a12^a22,b22)
	m3 =strassenItmod2( a21,b11^b21^b13^b23^b14^b24^b15^b25^b16^b26)
	m4 =strassenItmod2( a21^a12,b11^b21^b12^b14^b24)
	m5 =strassenItmod2( a12,b11^b21^b13^b23^b14^b24^b16^b26)
	m6 =strassenItmod2( a12,b14^b24^b16^b26)
	m7 =strassenItmod2( a11^a12,b14^b16)
	m8 =strassenItmod2( a11^a21,b11)
	m9 =strassenItmod2( a12^a22,b21^b25)
	m10 =strassenItmod2( a12,b12^b22^b13^b23^b16^b26)
	m11 =strassenItmod2( a11^a21,b11^b12^b15)
	m12 =strassenItmod2( a21^a22,b21^b24^b25^b26)
	m13 =strassenItmod2( a21^a22,b21^b24)
	m14 =strassenItmod2( a21,b11^b21^b14^b24)
	m15 =strassenItmod2( a12^a22,b21^b22)
	m16 =strassenItmod2( a11^a21,b11^b15)
	m17 =strassenItmod2( a11^a12,b11^b13)
	m18 =strassenItmod2( a21^a12,b21^b14^b24^b25^b16^b26)
	m19 =strassenItmod2( a11^a12,b12^b13^b16)
	m20 =strassenItmod2( a21^a12,b12^b13^b23^b25^b16^b26)
	m21 =strassenItmod2( a21^a22,b21^b23^b24^b25^b26)
	
c11 = m1^m3^m4^m5^m6^m8^m14^m18^m20
	c12 = m4^m5^m10^m11^m14^m16
	c13 = m1^m3^m4^m8^m14^m17^m18^m20
	c14 = m1^m3^m5^m6^m7^m8^m11^m16^m17^m18^m19^m20
	c15 = m3^m4^m5^m8^m16^m20
	c16 = m1^m3^m5^m8^m11^m16^m17^m18^m19^m20
	c21 = m1^m2^m3^m4^m5^m6^m14^m15^m18^m20
	c22 = m2^m4^m5^m10^m14
	c23 = m1^m3^m12^m14^m21
	c24 = m1^m2^m3^m4^m5^m6^m13^m15^m18^m20
	c25 = m2^m3^m4^m5^m9^m15^m20
	c26 = m1^m2^m3^m4^m5^m9^m12^m13^m15^m20)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def mat233(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b21, b22, b23, b31, b32, b33 = div3x3(b)


	m1 =strassenIt( a11+a12,b13)
	m2 =strassenIt( -a11+a21+a22+a13-a23,-b11+b21+b12)
	m3 =strassenIt( a11-a21+a12-a22-a13+a23,b21+b13)
	m4 =strassenIt( a12-a22-a13+a23,-b13+b23)
	m5 =strassenIt( a11-a21-a13+a23,-b11+b21)
	m6 =strassenIt( a22,b11-b21+b22+b32)
	m7 =strassenIt( a12,b22-b13+b23)
	m8 =strassenIt( a22-a23,b12+b32)
	m9 =strassenIt( a11-a13,b12)
	m10 =strassenIt( -a22-a13+a23,b12+b32+b13-b23)
	m11 =strassenIt( -a13+a23,b11+b31+b23+b33)
	m12 =strassenIt( -a21-a22,b11+b31)
	m13 =strassenIt( a13,b12+b32+b33)
	m14 =strassenIt( -a21-a22+a23,b31+b12)
	m15 =strassenIt( a21+a22+a13-a23,b11+b31+b13)
	
c11 = -m1+m2+m3+m9+m14+m15
	c12 = -m4+m7-m8+m9-m10
	c13 = m1+m4+m8+m10+m13
	c21 = m2+m5+m9-m12+m14
	c22 = m2+m5+m6-m8+m9
	c23 = m8+m10+m11+m12+m13+m15)

	result = np.concatenate((np.concatenate(c11, c21, c31), axis=0), np.concatenate(c12, c22, c32), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def mat234(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34 = div3x4(b)


	m1 =strassenIt( a11-a13,-b12+b13)
	m2 =strassenIt( a11-a21,-b11-b12+b13)
	m3 =strassenIt( -a12-2*a13,-b22+b23)
	m4 =strassenIt( -a22-a13-a23,b11-b21+b31+b22-b23)
	m5 =strassenIt( a13,b22+b13-2*b23+b33)
	m6 =strassenIt( -a11-a22+a13-a23,b11+b22-b13)
	m7 =strassenIt( -a11+a13,-b12+b22)
	m8 =strassenIt( a11-a21-a13+a23,-2*b11+b21-b22+b13-b14+b24)
	m9 =strassenIt( -a13+a23,b21-b31+b22-b32-b23+b33)
	m10 =strassenIt( a11-a21+a12-a22+a13-a23,b21-b22+b24)
	m11 =strassenIt( a13,b12+b32+b13-2*b23+b33)
	m12 =strassenIt( -a21-a22+a13-a23,b11-2*b21+b31+b22+b14-2*b24+b34)
	m13 =strassenIt( -a22-2*a23,2*b11-2*b21+b31+b22-b13+b14-b24)
	m14 =strassenIt( a21+a22+a23,2*b11-2*b21+b31+b22-b13+2*b14-2*b24+b34)
	m15 =strassenIt( a12-a22+a13-a23,-b21-b22+b23)
	m16 =strassenIt( a13-a23,2*b11-b21+3*b22-2*b32-b13-b23+b33+b14-2*b24+b34)
	m17 =strassenIt( -a21-a22,2*b11-2*b21+b31+b22-b13+b14-2*b24+b34)
	m18 =strassenIt( a22+a23,2*b11-2*b21+b31+b22-b13)
	m19 =strassenIt( -a11+a21+a22+a13+a23,-b11+b21-b22+b13-b14+b24)
	m20 =strassenIt( a11+a12,b22)
	
c11 = m1-m3-m4-m6+m7-m15-m18
	c12 = -m5+m7+m11+m20
	c13 = m1-m3+m5+m7+m20
	c14 = m3+m4+m6+m10+m12+m14+m15+m18+m19+m20
	c21 = m1-m6+m7+m8-m13-m18+m19
	c22 = m2-m5-m6+m7+m9+m11-m12+m16+m17
	c23 = m1+m4+m5-m6+m7+m8+2*m9-m12-m13+m16+m17+m19
	c24 = m13+m14+m17+m18)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def mat235(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35 = div3x5(b)


	m1 =strassenIt( -a11-a13,-b12-b22+b14+b24)
	m2 =strassenIt( a11-a12-a13,-b21-b12-b22+b24+b25)
	m3 =strassenIt( -a11+a22+a13,-b11-b21-b13+b15+b25)
	m4 =strassenIt( a12-a22,b23)
	m5 =strassenIt( -a12-a13,b12+b22)
	m6 =strassenIt( a11-a13,-b11-b21+b15+b25)
	m7 =strassenIt( a13,-b11-b31+b12+b32-b14-2*b24+b34+b15+b35)
	m8 =strassenIt( a21+a23,-b22+b32-b25+b35)
	m9 =strassenIt( a21,-b22+b32-b15-b25+b35)
	m10 =strassenIt( a11-a21-a12+a22-a13+a23,b22+b25)
	m11 =strassenIt( a13,-b11-b31+b12+b22-b14-2*b24+b34+b15+b35)
	m12 =strassenIt( -a11+a21+a12-a22,-b22+b24)
	m13 =strassenIt( a13-a23,-b22-b13-b33+b34-b25+b35)
	m14 =strassenIt( a22,-b11-b21-b22+b32-b23+b33+b15+b25)
	m15 =strassenIt( a11-a12-a13,b12)
	m16 =strassenIt( -a11+a21+a13-a23,b13)
	m17 =strassenIt( a21-a22-a13,-b11-b31+b22-b24+b15+b35)
	m18 =strassenIt( -a21+a22,-b11-b31+b15+b35)
	m19 =strassenIt( -a22-a23,-b22+b32+b13+b33-b25)
	m20 =strassenIt( -a13+a23,-b22+b34-b25+b35)
	m21 =strassenIt( a21+a13,-b12-2*b22+b32+b14+b24-b25+b35)
	m22 =strassenIt( a21-a22-a23,-b31+b13+b35)
	m23 =strassenIt( a22+a13,-b22+b32+b13+b33)
	m24 =strassenIt( a11-a21,b14+b24+b15+b25)
	m25 =strassenIt( -a11+a21+a12+a13,b12+b22+b25)
	
c11 = m1+m2+m5-m6-m7-m9+m11+m12+m15+m17+m18+m21+m24+m25
	c12 = -m5+m7-m11+m15
	c13 = m3+m4+m6-m7+m11-m14+m23
	c14 = -m1-m5+m11+m12+m15+m17+m18
	c15 = m1+m5-m7-m9+m11+m21+m24+m25
	c21 = -m3-m6-m7+m8-m9+m11+m13-m16+m18+m19+m20+m22+m23
	c22 = m7+m10-m11-m13+m15-m19-m20-m23+m25
	c23 = m3+m6-m7+m11+m13-m14+m16+m20+m23
	c24 = -m8+m10+m11-m13+m15+m17+m18-m19+m21-m23+m25
	c25 = -m7+m8-m9+m11+m13+m19+m20+m23)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x6(a):

	col = len(a)/3
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36)

def mat236mod2(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36 = div3x6(b)


	m1 =strassenItmod2( a11^a21,b15^b25^b35)
	m2 =strassenItmod2( a13,b21^b31^b22^b32^b23^b33^b24^b34^b25^b35^b26^b36)
	m3 =strassenItmod2( a13^a23,b11^b21^b31^b12^b22^b32^b14^b24^b34^b15^b25^b35^b16^b26^b36)
	m4 =strassenItmod2( a11^a13,b25^b35)
	m5 =strassenItmod2( a21^a22^a23,b31^b32^b13^b23^b15^b25^b35^b16^b26)
	m6 =strassenItmod2( a12^a13,b11^b21^b22^b32^b23^b33^b26^b36)
	m7 =strassenItmod2( a21^a12^a22^a13,b11^b21^b12^b22^b14^b24^b15^b35^b16^b26)
	m8 =strassenItmod2( a21^a23,b11^b21^b12^b22^b13^b23^b14^b24)
	m9 =strassenItmod2( a13,b21^b31^b22^b32^b23^b33^b26^b36)
	m10 =strassenItmod2( a21^a22^a13,b11^b12^b23^b33^b14^b15^b16)
	m11 =strassenItmod2( a21^a22,b21^b31^b22^b32^b13^b23^b15^b35^b16^b26)
	m12 =strassenItmod2( a21^a22^a13,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b25^b35)
	m13 =strassenItmod2( a11^a21,b12^b22^b32^b13^b23^b33^b16^b26^b36)
	m14 =strassenItmod2( a13^a23,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34)
	m15 =strassenItmod2( a11^a21^a12^a22,b22^b32^b13^b23^b33^b15^b25^b35^b16^b26^b36)
	m16 =strassenItmod2( a12^a22^a13^a23,b32^b13^b23^b33^b15^b25^b35^b16^b26^b36)
	m17 =strassenItmod2( a11^a13,b22^b32^b23^b33^b26^b36)
	m18 =strassenItmod2( a21,b11^b21^b12^b22^b13^b23^b16^b26)
	m19 =strassenItmod2( a11^a21^a12^a22,b11^b12^b14^b15^b25^b35^b16)
	m20 =strassenItmod2( a21^a22,b11^b21^b12^b22^b23^b33^b14^b24^b15^b25^b16^b26)
	m21 =strassenItmod2( a21^a12^a22^a13,b11^b21^b12^b32^b13^b33^b14^b24^b26^b36)
	m22 =strassenItmod2( a21^a23,b11^b21^b12^b22^b14^b24^b15^b25^b16^b26)
	m23 =strassenItmod2( a21^a12^a13,b12^b22^b32^b13^b23^b33^b14^b24^b35^b16^b26^b36)
	m24 =strassenItmod2( a21,b14^b24^b15^b25)
	m25 =strassenItmod2( a12^a13,b12^b32^b13^b33^b14^b24^b25^b35^b16^b36)
	m26 =strassenItmod2( a11^a12^a13,b12^b22^b32^b13^b23^b33^b14^b25^b35^b16^b26^b36)
	m27 =strassenItmod2( a12^a22^a13^a23,b11^b21^b12^b22^b14^b24^b15^b25^b35^b16^b26)
	m28 =strassenItmod2( a21^a12^a13,b11^b21^b32^b33^b36)
	m29 =strassenItmod2( a11^a12^a13,b11^b22^b32^b23^b33^b26^b36)
	m30 =strassenItmod2( a21^a22^a23,b11^b21^b12^b22^b33^b14^b24^b15^b25^b16^b26)
	
c11 = m6^m9^m17^m29
	c12 = m1^m7^m9^m10^m11^m12^m13^m15^m21^m23^m24^m25
	c13 = m1^m4^m7^m10^m18^m19^m20^m23^m24^m26^m28^m29
	c14 = m2^m4^m6^m9^m13^m18^m25^m26^m28
	c15 = m1^m4^m6^m18^m23^m24^m25^m28
	c16 = m4^m6^m9^m11^m12^m15^m17^m19^m20^m21^m25^m26^m29
	c21 = m3^m5^m6^m8^m9^m10^m12^m14^m16^m21^m27^m28
	c22 = m3^m7^m9^m10^m11^m12^m14^m16^m21^m23^m24^m25
	c23 = m18^m20^m22^m24^m30
	c24 = m2^m5^m6^m7^m9^m12^m14^m18^m22^m23^m25^m27^m28^m30
	c25 = m6^m7^m18^m22^m23^m24^m25^m27^m28
	c26 = m3^m6^m7^m8^m9^m10^m11^m12^m14^m20^m22^m23^m25^m27^m28^m30)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def mat244(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24 = div2x4(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44 = div4x4(b)


	m1 =strassenIt( -a11-a21+a12+a22-a13-a23+a14+a24,b21+b22)
	m2 =strassenIt( a21+a12+2*a22+2*a23-a14-3*a24,-3*b12-b22+2*b32-b13+b33+3*b14+b24-2*b34)
	m3 =strassenIt( 2*a11+a21-a22+3*a13+a23-3*a14-a24,b11-b31+3*b12-2*b32-2*b14+b34)
	m4 =strassenIt( -a21-2*a22-2*a23+3*a24,-3*b12-b22+2*b32+3*b14+b24-2*b34)
	m5 =strassenIt( -a21-a23+a24,3*b11+b21-2*b31+3*b12+b22-2*b32+b13+b23+b43-3*b14-b24+2*b34)
	m6 =strassenIt( -a11-a13,3*b11+b21-2*b31+3*b12+b22-2*b32)
	m7 =strassenIt( a11-a12+a13,-3*b11-b21+2*b31-3*b12-b22+2*b32-2*b13+b33+3*b14-2*b34)
	m8 =strassenIt( a21+a22+2*a23-3*a24,-3*b12-b22+b32-b42+2*b14+b24+b44)
	m9 =strassenIt( -a12+a14,3*b11+b21-2*b31+3*b13+b23-2*b33)
	m10 =strassenIt( a21+a23-a14-a24,3*b11+b21-2*b31+3*b12+b22-2*b32+b13+b23+b43)
	m11 =strassenIt( a21+a12+a23-a14-a24,-3*b11-b21+2*b31-3*b12-b22+2*b32-2*b13+b33+3*b14+b24-2*b34)
	m12 =strassenIt( 2*a11+a21+a22+3*a13+2*a23-3*a14-3*a24,-b14+b34)
	m13 =strassenIt( 2*a11+2*a21+3*a13+3*a23-3*a14-3*a24,-b11+b31-b12+b32)
	m14 =strassenIt( -a21-a22-2*a23+a14+3*a24,-3*b12-b22+b32-b42+3*b14+b24-b34+b44)
	m15 =strassenIt( -a11-a12-2*a13+2*a14,3*b12-2*b32-b13+b33-3*b14+2*b34)
	m16 =strassenIt( -a11-a21-a13-a23+a14+a24,-3*b11-b21+2*b31-3*b12-b22+2*b32-2*b13+b33)
	m17 =strassenIt( a11+a21+2*a12+2*a22+2*a13+2*a23-3*a14-3*a24,-b13+b33)
	m18 =strassenIt( a21-a22+a23,-b31-b41-b32-b42-b13-b23-b43-b14+2*b34+b44)
	m19 =strassenIt( a21-a22+a23-a24,-b11-b21-b41-3*b12-b22+b32-b42-b13-b23-b43+2*b14+b24+b44)
	m20 =strassenIt( a14,3*b11+b21-2*b31+6*b12+2*b22-3*b32+b42+b13+b23+b43-3*b14-2*b24-2*b44)
	m21 =strassenIt( a12+a22-a14-a24,2*b13+b23-2*b33)
	m22 =strassenIt( -a21+a22-a23+a14+a24,-b31-b41-b32-b42-b13-b23-b43+b24+b34+b44)
	m23 =strassenIt( -a21-a22-2*a23+2*a24,-b11+b31-b32-b42-b14+2*b34+b44)
	m24 =strassenIt( 2*a11+3*a13-3*a14,-2*b12+b32+b14)
	m25 =strassenIt( a21+a23,b13+b23+b43)
	m26 =strassenIt( a14+a24,b31+b41+b32+b42+b13+b23+b43)
	
c11 = m1+m2-m3+m4+m5-m6-m7+m8+m10-m11-m12+m14-m15-m16-m17-m19-m22
	c12 = -m2-m4-m5+m7-2*m8-m10+m11+2*m12-2*m14+m15+m16+m17-m20-m24
	c13 = -m2-m4-m5+m6-m9-m10+m11+m16+m17
	c14 = -m5+m7-m8-m10+m11+m12-m14+m16-m20
	c21 = -m4-m5-m8-m18+m19-m23-m25
	c22 = m3+m4+m5+2*m8+m10-m12+m13+m14+m18+m20+m22+m23+m24+m26
	c23 = m2+m4+m5+m9-m11+m21+m25
	c24 = m5+m8+m10+m14+m18+m20+m22+m26)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0)), axis=1)

	return result



def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def mat245(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24 = div2x4(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45 = div4x5(b)


	m1 =strassenIt( -a12+a13,-b11+b31+2*b13-2*b33-2*b14+2*b34)
	m2 =strassenIt( -a21-a12+a22-a23+a14,b24+b34+b25)
	m3 =strassenIt( a22,-b22+b23+b25)
	m4 =strassenIt( a12-a13,-b11-b21+b31+2*b13+b23-2*b33-2*b14+2*b34)
	m5 =strassenIt( a13-a23,b11-b41+b22+b32+b42-2*b13+b43+2*b14+b24+b34+b44-b35)
	m6 =strassenIt( -a11-a13,-b21-b31+b23+b33+b35)
	m7 =strassenIt( a11-a21-a12+a22+a13-a23,-b21+b23+b34)
	m8 =strassenIt( -a11+a21-a22+a23,-b21+b23-b14+b34)
	m9 =strassenIt( -a12+a22,b24+b34+b44)
	m10 =strassenIt( -a11+a21-a14+a24,b11-b41-2*b13+b43+2*b14-b35)
	m11 =strassenIt( a11+a13,b11-2*b13+2*b14)
	m12 =strassenIt( -a21-a23,b12-b13+b24+b34+b25)
	m13 =strassenIt( -a12+a22+a14-a24,b11-b41+b42-2*b13+b43+2*b14+b44-b35)
	m14 =strassenIt( a11,b11-b21-b31-b13+b23+b33-b15+b35)
	m15 =strassenIt( a24,b42-b43+b44)
	m16 =strassenIt( a21+a13-a14+a24,-b11+2*b13-2*b14+b35)
	m17 =strassenIt( a23,b12-b32-b13+b33)
	m18 =strassenIt( a14,-b11+b21+b31+2*b13-2*b23-2*b33-b43-2*b14+b25+b45)
	m19 =strassenIt( a12-a14,-b11+b21+b31-b22+2*b13-b23-2*b33-2*b14+2*b24+2*b34+3*b25)
	m20 =strassenIt( -a21+a22-a23,-b14+b24+b34+b25)
	m21 =strassenIt( -a12+a22+a13-a23,b11-b21-b41+b22+b42-2*b13+b23+b43+2*b14+b24+3*b34+b44-b35)
	m22 =strassenIt( -a11-a23,-b21-b31-b12+b13+b23+b33+b35)
	m23 =strassenIt( -a11+a21,b11+b21-b41+b12-2*b13-b23+b43+b14-b34-b35)
	m24 =strassenIt( a24,-b42+b43-b15+b35+b45)
	m25 =strassenIt( a11-a21-a24,-b41+b43+b15-b35)
	m26 =strassenIt( a12-a22-a14+a24,b11-b41+b42-2*b13+b43+2*b14-b35)
	m27 =strassenIt( a14,-b41+b43+b24+b34+b44+b25+b45)
	m28 =strassenIt( -a21-a24,-b15+b35)
	m29 =strassenIt( -a12+a14,-b11+b21+b31-2*b22+2*b13-2*b33-2*b14+2*b24+2*b34+3*b25)
	m30 =strassenIt( -a13+a23+a14,b11-b21-b31-b41+b22+b42-2*b13+b23+2*b33+b43+2*b14+b24+b34+b44)
	m31 =strassenIt( a12-a22-a14,-b22+b23+b24+b34+b44+b25)
	m32 =strassenIt( -a22+a23,-b14+b34)
	m33 =strassenIt( a21+a23,b24+b34+b25+b35)
	
c11 = -m1-2*m2+m3+2*m6+2*m7+2*m8+m9+2*m10+m11+2*m14+2*m16-m18-m19+2*m20+2*m25+m27+2*m28+m31
	c12 = -2*m2+m3+m4+m5+2*m7+2*m8+m9+m10+m14+m16-m17+2*m20+m22+m25+m28+m29+m30+m31
	c13 = -2*m2+m3+m4+m6+2*m7+2*m8+m9+m10+m14+m16-m18-m19+2*m20+m25+m27+m28+m31
	c14 = m1-m2-m3+m4+m7+m8-m9-m19+m20-m29-m31
	c15 = m3+m9+m10+m11+m16+m19+m25+m27+m28+m29+m31
	c21 = -m1-3*m2+m3+2*m8+2*m12-m13+2*m14-m15+m16-m19+2*m20+m21+2*m22+2*m23+2*m25+2*m28+m30+m33
	c22 = -m1-2*m2+m3+m8+m14+m16-m17+2*m20+m21+m22+m23+m25+m26+m28+m29+m30+m31+m32
	c23 = -m1-3*m2+m3+m8+m12-m13+m14-m15+m16-m19+2*m20+m21+m22+m23+m25+m28+m30+m32
	c24 = -m2-m3-m13-m19+m20-m26-m29-m31+m32
	c25 = m2+m3+m13+m15+m19+m24+m26+m28+m29+m31+m33)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def div4x6(a):

	col = len(a)/4
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46)

def mat246mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24 = div2x4(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46 = div4x6(b)


	m1 =strassenItmod2( a21^a24,b21^b31^b41^b22^b32^b42^b24^b34^b44^b25^b36^b46)
	m2 =strassenItmod2( a21^a12^a13,b31^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b44^b35)
	m3 =strassenItmod2( a22^a24,b11^b21^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b44^b25^b35^b16^b26^b36^b46)
	m4 =strassenItmod2( a11^a21^a13^a23,b11^b31^b12^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m5 =strassenItmod2( a23^a24,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24^b44^b16^b26^b46)
	m6 =strassenItmod2( a11^a21^a13^a23^a14^a24,b21^b41^b22^b42)
	m7 =strassenItmod2( a11^a21,b11^b21^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b15^b25^b35^b45)
	m8 =strassenItmod2( a23,b21^b31^b41^b22^b32^b42)
	m9 =strassenItmod2( a13,b11^b31^b41)
	m10 =strassenItmod2( a11^a21^a13,b21^b31^b41^b12^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m11 =strassenItmod2( a21^a12^a13^a24,b22^b32^b42^b24^b34^b44^b25^b26)
	m12 =strassenItmod2( a12^a22^a13^a23,b11^b21^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b44^b35^b16^b26^b46)
	m13 =strassenItmod2( a21^a24,b21^b31^b41^b23^b33^b43^b24^b34^b44^b35^b45^b26)
	m14 =strassenItmod2( a12^a22^a13^a14^a24,b11^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m15 =strassenItmod2( a12^a13^a14,b11^b21^b12^b22^b32^b42^b13^b23^b33^b43^b14^b25^b35^b45^b16^b26^b36^b46)
	m16 =strassenItmod2( a21^a22^a23,b11^b21^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b44^b35^b16^b26^b36^b46)
	m17 =strassenItmod2( a13^a14,b11^b31^b41^b12^b22^b32^b13^b23^b33^b14^b25^b35^b16)
	m18 =strassenItmod2( a11^a21,b21^b41^b12^b32^b14^b24^b34^b44^b15^b25^b35^b45^b16^b26^b36^b46)
	m19 =strassenItmod2( a21,b11^b21^b41^b14^b24^b44^b15^b25^b45)
	m20 =strassenItmod2( a11^a12^a13,b11^b21^b31^b22^b44^b45^b16^b26^b36^b46)
	m21 =strassenItmod2( a12^a22^a14^a24,b24^b34^b25^b35^b26^b36)
	m22 =strassenItmod2( a12^a22^a14^a24,b11^b21^b31^b41^b12^b32^b42^b13^b23^b33^b43^b14^b44^b25^b35^b16^b46)
	m23 =strassenItmod2( a22^a24,b11^b21^b41^b12^b32^b42^b13^b33^b43^b14^b24^b44^b25^b35^b16^b36^b46)
	m24 =strassenItmod2( a13^a14,b12^b22^b42^b15^b45^b16^b46)
	m25 =strassenItmod2( a11^a13^a14,b21^b31^b12^b32^b42^b24^b34^b15^b45^b16^b26^b36^b46)
	m26 =strassenItmod2( a11^a21^a13^a24,b11^b21^b41^b12^b13^b14^b16)
	m27 =strassenItmod2( a11^a22^a13^a14^a24,b11^b41^b12^b32^b42^b13^b23^b33^b43^b14^b44^b25^b35^b16^b26^b36^b46)
	m28 =strassenItmod2( a12^a22^a13^a23^a14^a24,b11^b21^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m29 =strassenItmod2( a12^a13,b21^b31^b12^b22^b13^b33^b43^b14^b34^b35^b26)
	m30 =strassenItmod2( a21^a12^a13^a14^a24,b11^b12^b22^b32^b42^b13^b23^b33^b43^b14^b25^b35^b45^b16^b26^b36^b46)
	m31 =strassenItmod2( a11^a21^a14^a24,b21^b41)
	m32 =strassenItmod2( a21^a22,b21^b31^b41^b22^b42^b33^b34^b25^b35^b26)
	m33 =strassenItmod2( a12^a22^a13^a24,b11^b31^b41^b12^b32^b42^b13^b33^b43^b14^b24^b44^b25^b35^b16^b26^b46)
	m34 =strassenItmod2( a11^a21^a13^a14,b11^b31^b22^b42^b13^b23^b33^b43^b14^b24^b34^b44^b15^b25^b35^b45)
	m35 =strassenItmod2( a11^a13,b12^b13^b14^b16)
	m36 =strassenItmod2( a21^a22^a23^a24,b21^b31^b41^b22^b42^b33^b34^b35)
	m37 =strassenItmod2( a11^a12^a13^a14,b22^b32^b42^b24^b34^b44)
	m38 =strassenItmod2( a21,b21^b31^b41^b12^b13^b23^b33^b43^b14^b24^b34^b44^b15^b25^b35^b45)
	m39 =strassenItmod2( a11^a21^a14^a24,b11^b31^b12^b22^b32^b42^b13^b23^b33^b43^b14^b25^b35^b45^b16)
	
c11 = m1^m9^m13^m15^m26^m30^m31^m35
	c12 = m1^m3^m7^m10^m13^m14^m15^m18^m21^m22^m25^m26^m27^m30^m31^m34^m35^m38
	c13 = m2^m3^m7^m11^m13^m14^m15^m17^m19^m20^m21^m23^m24^m25^m26^m33^m37^m39
	c14 = m1^m2^m3^m10^m13^m14^m15^m18^m19^m21^m23^m24^m26^m29^m30^m31^m33^m34^m35^m37^m38
	c15 = m7^m9^m10^m15^m18^m20^m22^m23^m24^m27^m29^m33^m34^m37^m38
	c16 = m9^m11^m13^m15^m20^m22^m23^m26^m27^m29^m33^m35^m39
	c21 = m1^m4^m8^m10^m13^m14^m15^m26^m28^m30^m35
	c22 = m1^m3^m4^m6^m10^m13^m14^m15^m25^m26^m27^m28^m30^m34^m35^m38
	c23 = m3^m6^m13^m14^m15^m16^m19^m23^m25^m27^m28^m30^m32^m34^m36
	c24 = m1^m2^m3^m4^m5^m10^m11^m12^m13^m14^m15^m19^m23^m26^m28^m29^m30^m32^m33^m35^m36^m38
	c25 = m2^m5^m8^m11^m12^m14^m15^m16^m23^m28^m29^m30^m32^m33^m36^m38
	c26 = m2^m4^m8^m10^m11^m12^m13^m14^m15^m16^m23^m26^m28^m29^m30^m33^m35)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x5(a):

	col = len(a)/2
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25)

def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)

def mat255(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25 = div2x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenIt( -a11+a21+a15-a25,-b12-b22-b32+b14+b24+b34)
	m2 =strassenIt( -a21+a23+a24,b21-b41-2*b12-2*b22-2*b32+2*b42-b52-b24+2*b15+2*b25+2*b35-b45+b55)
	m3 =strassenIt( -a11-a21+a13+a23+a25,-2*b11-b21-2*b31-b51+2*b12+b22+2*b32+b52+2*b13+b23+2*b33+b53)
	m4 =strassenIt( -a21+2*a25,b11+b21+b41+b51-b12-b22-b42-b52-b14-b24-b44-b54+b15+b25+b45+b55)
	m5 =strassenIt( -a11+a21+a13-a23+a15-a25,-2*b11-b21-2*b31-b51+2*b12+b22+2*b32+b52+2*b13+b23+2*b33+b53+2*b14+2*b24+b34+b44+2*b54)
	m6 =strassenIt( -2*a11+a13+2*a15,2*b11+b21+2*b31-b41+b51-2*b12-2*b22-b32-b52-b13-b23-b33+b43-b14-b34-b54+b15+b25+b45+b55)
	m7 =strassenIt( 2*a21-a22-a23-a25,-b12-2*b22-b42-b52+b14+2*b24+b44+b54)
	m8 =strassenIt( 3*a11-a21-a12-2*a13+a23-a14+a24-a15,b21-b41+b42-b24)
	m9 =strassenIt( -a21+a22+a23+a24-a25,b21-b22-b24+b25)
	m10 =strassenIt( a11-a13,-2*b11-b21-2*b31-b41-b51+b12+2*b32+3*b13+2*b23+2*b33+2*b43+2*b53+b15+b25+b45+b55)
	m11 =strassenIt( -3*a21+a22+2*a23+a25,-b12-b22-b42-b52+b14+b24+b44+b54)
	m12 =strassenIt( a11-a21+a23+a24-a15,b21-b41-2*b12-2*b22-2*b32+b42-b52-b24+b44+2*b15+2*b25+2*b35-b45+b55)
	m13 =strassenIt( -a11+a21+a12-a22,-b12-b32-b52-b14-2*b24-b44-b54+2*b15+b25+2*b35+b55)
	m14 =strassenIt( -a11+a15,2*b11+2*b21+2*b31-b41+b51-2*b12-2*b22-2*b32+b42-b52-2*b14-2*b24-2*b34+b44-b54+2*b15+2*b25+2*b35-b45+b55)
	m15 =strassenIt( a13+a14-a15,b21-b41-b12-b22-b32+b42-b52-b24+b44+2*b15+2*b25+2*b35-b45+b55)
	m16 =strassenIt( a11-a21-a13+a23-a14+a24,b21-b41-b24+b44)
	m17 =strassenIt( a11-2*a21-a12+a22+a23-a24+a25,b21-b41-b12-b22-b32+b42-b52-b24+2*b15+2*b25+2*b35-b45+b55)
	m18 =strassenIt( -a11+3*a21-a22+a13-2*a23-a25,b21-b41-b12-2*b22-b52-b23+b43+b14+b24+b44+b54)
	m19 =strassenIt( -3*a11+3*a21+a12-a22+2*a13-2*a23+a14-a24+a15-a25,b32-b42-b35+b45)
	m20 =strassenIt( -a23-a24+a25,-2*b12-b22-2*b32-b52+2*b15+b25+2*b35+b55)
	m21 =strassenIt( 3*a11-a21-a12+a22-2*a13+a23-a14+a24-a15-a25,-b21+b32-b42+b24-b35+b45)
	m22 =strassenIt( -a11-a21+a13+2*a25,2*b11+2*b21+b31+b51-2*b12-2*b22-b32-b52-b13-b23-b33+b43-b14-b24-b44-b54+b15+b25+b45+b55)
	m23 =strassenIt( 2*a11-2*a13-a15,-2*b11-2*b31-b41-b51+b12+b32+b42+2*b13+b23+2*b33+b53+b14+b44+b54+2*b15+2*b25+2*b35-b45+b55)
	m24 =strassenIt( 3*a11-3*a21-a12+a22-2*a13+2*a23-a15+a25,2*b21-2*b41-b12-2*b22-b32+2*b42-b52-b23+b43+b14+b44+b54+2*b15+2*b25+2*b35-b45+b55)
	m25 =strassenIt( -3*a11+a12+2*a13+a14+a15,-b41-b12-b22-b52+b15+b25+b45+b55)
	m26 =strassenIt( -a11+a13-a14+a15,b21-b41-b12-b22-b32+b42-b52-b24+2*b15+2*b25+2*b35-b45+b55)
	m27 =strassenIt( a11-a21-2*a15+2*a25,b11+b21+b31-b41-2*b12-2*b22-b32-b52-b13-b23-b33+b43+b15+b25+b45+b55)
	m28 =strassenIt( -a11+3*a21+a12-a22-2*a23-a25,b21-b41-b12-b22-b32+b42-b52+b14+b44+b54+2*b15+2*b25+2*b35-b45+b55)
	m29 =strassenIt( -a11-a21+a12+a23+a25,b12+b32+b52+b14+2*b24+b44+b54)
	m30 =strassenIt( -a11+a21+a13-a23,-2*b11-3*b21-b31+b41-b51+2*b12+3*b22+b32-b42+b52+2*b13+3*b23+b33-b43+b53)
	m31 =strassenIt( -a11+a21+a12-a22+a13-a23+a14-a24-a15+a25,-b41-b12-b22-b52+b43+2*b15+2*b25+b35+b45+b55)
	m32 =strassenIt( a21-a23-a25,-2*b11-b21-2*b31-b51+2*b12+b22+2*b32+b52)
	m33 =strassenIt( -2*a21+a23+2*a25,-2*b11-b21-b31-b41-b51+b12+b22+b42+b14+b44+b54+b35-b45)
	m34 =strassenIt( 2*a11-a12-2*a13-a14+a15,-b41-b12-b22-b52+b43+b15+b25+b45+b55)
	m35 =strassenIt( 3*a11-a21-a12-2*a13-a14-a15+2*a25,-b12-b22-b42-b52+b15+b25+b45+b55)
	m36 =strassenIt( -a11-a21+a22+a13+a23+a24-a25,-b41+b42+b43)
	m37 =strassenIt( a11-a21-a12+a22+a23+a24-a25,-b12-b32-b52+2*b15+b25+2*b35+b55)
	m38 =strassenIt( -2*a11+a12+a13+a15,b12+b32+b52-b23+b43+b14+2*b24+b44+b54)
	m39 =strassenIt( -a11-a21+a23+a15+a25,-2*b11-b21-2*b31-b51+b12+b22+b32+b14+b34+b54)
	m40 =strassenIt( a11-a12,b12+b32+b52+b14+b24+b44+b54)
	
c11 = m2+m3+m4+m5+m6-m8-m12+m15+m16-m22+m23-m25+m26+m27+m29+m32-m35+m39+m40
	c12 = m2-m8+m11-m12+m15+m16+m18+m24+m26+m28+m38+m40
	c13 = m3+m5+m6+m10-m25+m29+m32-m34-m38+m39
	c14 = m3+m5+m14+m15+m23+m26+m29+m32+m39+m40
	c15 = m9+m11+m18+m21+m24+m25+m26+m28+m31+m34+m36+m37+m38+m40
	c21 = m2+m4-m8+m13+m17-m19+m20-m21-m25+m28+m29+m32+m33-m35+m37+m40
	c22 = m2+m7+m11+m13+m17+m20+m28+m29+m37+m40
	c23 = m3-m7-m8+m10+m18-m19-m21+m22-m25+m30+m32+m33-m35+m36
	c24 = m1+m12+m13+m14+m17+m20+m28+m29+m32+m37+m39+m40
	c25 = m7+m8+m9+m11+m13+m17+m19+m21+m25+m28+m29+m35+m37+m40)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x5(a):

	col = len(a)/2
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25)

def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def mat256mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25 = div2x5(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56 = div5x6(b)


	m1 =strassenItmod2( a11^a12^a15,b11^b21^b31^b51^b16^b26^b36^b56)
	m2 =strassenItmod2( a21^a24,b13^b23^b33^b53^b14^b24^b34^b54^b15^b25^b35^b55)
	m3 =strassenItmod2( a11^a21^a13^a24^a15,b42^b13^b23^b33^b53^b14^b24^b34^b54^b15^b25^b35^b55)
	m4 =strassenItmod2( a11^a21^a14^a24,b42)
	m5 =strassenItmod2( a11^a21^a13^a23^a15^a25,b21^b31^b41^b51^b12^b22^b42^b13^b43^b14^b44^b16^b46^b56)
	m6 =strassenItmod2( a21^a22^a24,b13^b23^b43^b53^b24^b15^b25^b45^b55)
	m7 =strassenItmod2( a11^a21,b11^b41^b13^b43^b14^b44)
	m8 =strassenItmod2( a12^a15,b11^b31^b51^b23^b16^b46^b56)
	m9 =strassenItmod2( a11^a13^a23^a15,b21^b31^b41^b51^b12^b22^b13^b43^b24^b34^b44^b54^b16^b46^b56)
	m10 =strassenItmod2( a11^a12^a22^a13^a23^a15,b21^b31^b41^b51^b26^b46^b56)
	m11 =strassenItmod2( a15^a25,b21^b31^b41^b51^b12^b42^b52^b13^b43^b14^b44^b16^b46^b56)
	m12 =strassenItmod2( a21^a12^a22^a24^a15,b41^b43^b24^b44)
	m13 =strassenItmod2( a11^a21^a12^a22^a13^a23^a14^a24^a15^a25,b42^b13^b33^b14^b34^b44^b15^b35^b45)
	m14 =strassenItmod2( a12^a22^a13^a23,b21^b41^b51^b42^b43^b26^b46^b56)
	m15 =strassenItmod2( a22^a23^a24,b13^b43^b53^b15^b45^b55)
	m16 =strassenItmod2( a11^a21^a12^a22^a13^a14^a24^a15,b42^b14^b24^b54)
	m17 =strassenItmod2( a11^a12^a22^a13^a23^a14^a24^a15,b42^b13^b33^b43^b24^b34^b44^b54^b15^b35^b45)
	m18 =strassenItmod2( a23^a25,b12^b42^b52^b13^b53^b14^b24^b54^b16^b46^b56)
	m19 =strassenItmod2( a12^a22^a13^a23^a14^a24,b42^b33^b53^b24^b34^b44^b54^b35^b55)
	m20 =strassenItmod2( a21^a25,b21^b31^b41^b51)
	m21 =strassenItmod2( a21^a24^a25,b43^b24^b44)
	m22 =strassenItmod2( a21^a22^a25,b22)
	m23 =strassenItmod2( a13^a14^a15,b13^b53^b15^b55^b46)
	m24 =strassenItmod2( a21^a15,b21^b31^b41^b51^b13^b43^b14^b44)
	m25 =strassenItmod2( a21^a22^a24,b24)
	m26 =strassenItmod2( a11^a12^a13^a23^a15,b22^b26^b36^b46)
	m27 =strassenItmod2( a13^a23,b21^b31^b41^b51^b12^b32^b42^b13^b43^b14^b44^b16^b26^b36^b56)
	m28 =strassenItmod2( a23,b12^b32^b52^b13^b23^b33^b53^b16^b46^b56)
	m29 =strassenItmod2( a21^a12^a15,b11^b21^b31^b51^b16^b46^b56)
	m30 =strassenItmod2( a11^a21^a12^a22^a14^a24,b46)
	m31 =strassenItmod2( a13^a15,b31^b42^b33^b14^b24^b34^b54)
	m32 =strassenItmod2( a11^a12^a22^a13^a23^a14^a15,b42^b43)
	m33 =strassenItmod2( a11^a12^a13^a15,b13^b23^b43^b53^b15^b25^b45^b55^b36^b46)
	m34 =strassenItmod2( a11^a21^a12^a22^a14^a24,b41^b42^b43^b14^b24^b44^b54)
	m35 =strassenItmod2( a22^a23,b23)
	m36 =strassenItmod2( a11^a21^a12^a22^a13^a24^a15,b13^b23^b43^b53^b15^b25^b45^b55^b46)
	m37 =strassenItmod2( a11^a15,b42^b24^b34^b44^b54)
	m38 =strassenItmod2( a12^a22^a15^a25,b21^b31^b41^b43^b24^b44)
	m39 =strassenItmod2( a15,b13^b23^b33^b53^b14^b24^b34^b54)
	m40 =strassenItmod2( a21,b16^b46^b56)
	m41 =strassenItmod2( a11^a21^a12^a22^a13^a23^a15^a25,b21^b31^b41^b51^b22^b56)
	m42 =strassenItmod2( a11^a15,b21^b31^b41^b51^b13^b43^b14^b44^b26^b46^b56)
	m43 =strassenItmod2( a12^a22^a23^a15,b31^b23)
	m44 =strassenItmod2( a23^a15,b12^b42^b52^b13^b23^b33^b53^b14^b24^b34^b54^b16^b46^b56)
	m45 =strassenItmod2( a23^a24^a25,b42^b13^b33^b43^b53^b14^b24^b34^b54^b15^b35^b45^b55)
	m46 =strassenItmod2( a21^a25,b21^b31^b41^b51^b12^b22^b33^b24^b34^b44^b54^b15^b35^b45^b16^b46^b56)
	m47 =strassenItmod2( a11^a13^a15,b13^b23^b33^b53^b15^b25^b35^b55)
	m48 =strassenItmod2( a11^a14^a15,b41^b42^b43)
	
c11 = m7^m8^m10^m14^m24^m29^m32^m35^m40^m42^m43^m48
	c12 = m1^m2^m3^m4^m7^m9^m24^m26^m27^m28^m29^m39^m40^m44^m47
	c13 = m2^m3^m4^m10^m14^m31^m32^m35^m37^m39^m42^m43^m47
	c14 = m2^m3^m4^m12^m16^m25^m34^m37^m47^m48
	c15 = m2^m3^m4^m6^m10^m14^m15^m17^m19^m23^m25^m30^m31^m32^m35^m36^m39^m42^m43
	c16 = m1^m6^m7^m24^m25^m29^m30^m33^m36^m40^m42
	c21 = m8^m12^m20^m21^m29^m35^m38^m40^m43
	c22 = m2^m3^m5^m9^m11^m22^m24^m28^m39^m40^m44^m47
	c23 = m2^m3^m5^m9^m11^m13^m16^m17^m18^m20^m24^m32^m35^m39^m44^m46^m47
	c24 = m2^m3^m5^m9^m13^m16^m17^m21^m25^m32^m46^m47
	c25 = m2^m6^m11^m13^m15^m16^m17^m18^m20^m24^m25^m32^m35^m39^m44^m45
	c26 = m6^m10^m20^m22^m25^m26^m33^m36^m40^m41)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x6(a):

	col = len(a)/2
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26)

def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)

def mat266mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26 = div2x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a23^a26,b12^b22^b62^b14^b24^b64^b16^b26^b66)
	m2 =strassenItmod2( a22^a23,b31^b41^b51^b14^b24^b34^b44^b54^b64^b35^b45^b55)
	m3 =strassenItmod2( a12^a14^a15^a16,b31^b41^b51^b32^b42^b62^b13^b33^b53^b24^b44^b64^b35^b45^b55^b16^b26^b66)
	m4 =strassenItmod2( a11^a12,b12^b42^b16^b46)
	m5 =strassenItmod2( a11^a21^a16,b32^b42^b62^b15^b25^b65)
	m6 =strassenItmod2( a23^a25,b11^b21^b31^b41)
	m7 =strassenItmod2( a11^a13^a14^a16,b21^b31^b51^b24^b34^b54^b25^b35^b55)
	m8 =strassenItmod2( a11^a21,b11^b21^b31^b41^b51^b61^b13^b23^b33^b43^b53^b63^b15^b25^b35^b45^b55^b65)
	m9 =strassenItmod2( a12^a13^a15^a16,b62^b23^b33^b53^b14^b44^b54^b64^b66)
	m10 =strassenItmod2( a21^a23^a24^a26,b32^b42^b62^b34^b44^b64^b36^b46^b66)
	m11 =strassenItmod2( a21^a12^a13^a24^a16^a26,b22^b32^b42^b52^b14^b24^b34^b44^b64)
	m12 =strassenItmod2( a23^a24,b22^b32^b52^b14^b44^b54)
	m13 =strassenItmod2( a21^a22^a23^a24,b21^b31^b41^b51^b14^b24^b34^b44^b64^b25^b35^b45^b55)
	m14 =strassenItmod2( a11^a23^a14^a26,b32^b42^b62^b14^b24^b64^b36^b46^b66)
	m15 =strassenItmod2( a21^a22^a23^a24,b21^b31^b51^b12^b32^b24^b54^b25^b35^b45^b55^b16^b26^b46^b56)
	m16 =strassenItmod2( a11^a23^a24^a16,b21^b31^b51^b14^b44^b54^b25^b35^b55)
	m17 =strassenItmod2( a21^a23^a25^a26,b11^b41^b12^b32^b54^b35^b45^b55^b16^b46)
	m18 =strassenItmod2( a11^a16,b11^b41^b14^b44^b15^b45)
	m19 =strassenItmod2( a12^a22^a13^a23^a16,b11^b21^b31^b41^b51^b61^b14^b24^b34^b44^b54^b64^b35^b45^b55)
	m20 =strassenItmod2( a11^a22^a23^a14,b21^b31^b41^b51^b14^b34^b44^b54^b64^b25^b35^b45^b55)
	m21 =strassenItmod2( a11^a12^a15,b11^b21^b31^b41^b51^b61^b12^b32^b62^b13^b23^b33^b43^b53^b63^b35^b45^b55)
	m22 =strassenItmod2( a11^a21^a12^a13^a14^a24^a15^a26,b12^b22^b32^b42^b52^b62^b14^b24^b34^b44^b64^b16^b26^b36^b46^b56^b66)
	m23 =strassenItmod2( a12^a13^a16,b32^b42^b14^b24^b34^b44^b64)
	m24 =strassenItmod2( a11^a21^a12^a23^a25^a26,b21^b31^b51^b12^b42^b16^b46)
	m25 =strassenItmod2( a12^a22^a23^a15,b11^b21^b61^b33^b43^b63^b34^b44^b64^b36^b46^b66)
	m26 =strassenItmod2( a21^a24^a26,b12^b22^b32^b42^b52^b62^b16^b26^b36^b46^b56^b66)
	m27 =strassenItmod2( a14^a16,b11^b21^b61^b13^b23^b63^b14^b24^b64^b16^b26^b66)
	m28 =strassenItmod2( a11^a21^a14^a24,b21^b31^b41^b51^b32^b42^b62^b14^b34^b44^b54^b64^b25^b35^b45^b55^b36^b46^b66)
	m29 =strassenItmod2( a12^a23^a15^a26,b12^b22^b32^b42^b23^b33^b53^b24^b34^b54^b16^b26^b36^b46)
	m30 =strassenItmod2( a21^a12^a23^a14^a15^a25^a16^a26,b11^b21^b31^b51^b61^b12^b32^b23^b33^b43^b53^b63^b24^b34^b44^b64^b35^b45^b55^b16^b26^b36^b56^b66)
	m31 =strassenItmod2( a12^a22^a14^a24^a15^a25^a16^a26,b11^b21^b31^b51^b61^b12^b32^b23^b33^b43^b63^b24^b34^b44^b54^b64^b35^b45^b55^b16^b26^b36^b56^b66)
	m32 =strassenItmod2( a21^a22^a25,b32^b42^b52^b35^b45^b55)
	m33 =strassenItmod2( a21,b12^b22^b32^b42)
	m34 =strassenItmod2( a16,b15^b25^b65)
	m35 =strassenItmod2( a11^a21^a12^a22^a13^a23^a14^a24^a15^a25,b54)
	m36 =strassenItmod2( a26,b11^b21^b31^b41^b51^b61^b32^b42^b62^b14^b24^b34^b44^b54^b64^b35^b45^b55)
	m37 =strassenItmod2( a21^a12^a15,b11^b21^b31^b41^b51^b61^b12^b22^b62^b13^b23^b33^b43^b53^b63^b35^b45^b55)
	m38 =strassenItmod2( a11^a21^a23^a25^a16^a26,b11^b21^b31^b41^b51^b54^b55)
	m39 =strassenItmod2( a13^a23^a14^a24,b21^b31^b51^b12^b22^b42^b52^b24^b25^b35^b55^b16^b26^b46^b56)
	m40 =strassenItmod2( a13^a23^a16^a26,b23^b33^b53^b24^b34^b54)
	m41 =strassenItmod2( a11^a12^a13^a14,b11^b61^b23^b33^b43^b53^b63^b34^b44^b54^b64^b25^b36^b46^b66)
	m42 =strassenItmod2( a11^a21^a12^a22,b21^b31^b51^b12^b22^b42^b52^b24^b54^b16^b26^b46^b56)
	m43 =strassenItmod2( a11^a21^a13^a23^a15^a25^a16^a26,b11^b21^b31^b51^b61^b12^b32^b23^b33^b43^b53^b63^b24^b34^b44^b54^b64^b35^b45^b16^b26^b36^b56^b66)
	m44 =strassenItmod2( a11^a21^a14^a24^a16^a26,b22^b32^b42^b52)
	m45 =strassenItmod2( a14^a24^a16^a26,b11^b21^b31^b41^b51^b61^b32^b42^b62^b23^b33^b63^b14^b44^b54^b35^b45^b55)
	m46 =strassenItmod2( a21^a12^a13^a23^a25^a16^a26,b32^b42^b54^b35^b45^b55)
	m47 =strassenItmod2( a11^a12^a13^a23^a14^a24^a15,b22^b32^b52^b54)
	m48 =strassenItmod2( a13^a15,b11^b21^b51^b61^b33^b43^b63^b34^b44^b54^b64^b55^b36^b46^b66)
	m49 =strassenItmod2( a11^a12^a13^a14^a15,b12^b42^b62^b14^b24^b34^b44^b64^b16^b26^b36^b46^b56^b66)
	m50 =strassenItmod2( a22^a23^a25^a26,b21^b31^b51^b12^b42^b52^b16^b46^b56)
	m51 =strassenItmod2( a11^a12^a13^a14,b12^b32^b14^b24^b34^b44^b64^b16^b26^b46^b56)
	m52 =strassenItmod2( a12^a22^a13^a23^a16^a26,b11^b21^b31^b41^b51^b61^b22^b32^b42^b52^b14^b24^b34^b44^b64)
	m53 =strassenItmod2( a11^a21^a16^a26,b32^b42^b62^b35^b45^b65)
	m54 =strassenItmod2( a11^a12^a23^a24,b12^b22^b42^b52^b24^b54^b16^b26^b46^b56)
	m55 =strassenItmod2( a12^a22^a13^a23,b21^b31^b41^b51^b33^b43^b63^b14^b54^b25^b35^b45^b55^b36^b46^b66)
	m56 =strassenItmod2( a11^a14,b14^b24^b64)
	
c11 = m2^m4^m17^m19^m20^m23^m24^m25^m30^m38^m41^m43^m46^m48^m51^m55
	c12 = m5^m8^m11^m21^m22^m23^m26^m33^m34^m37^m44^m49
	c13 = m49^m51^m54^m55^m19^m20^m16^m12^m14^m1^m2^m3^m5^m7^m8^m11^m41^m44^m47^m40^m34^m37^m39^m33^m26^m27^m29^m22^m25
	c14 = m7^m11^m12^m16^m22^m26^m39^m44^m47^m49^m51^m54^m56
	c15 = m4^m11^m12^m16^m17^m18^m22^m23^m24^m26^m30^m34^m38^m39^m41^m43^m44^m46^m47^m49^m54
	c16 = m1^m4^m5^m8^m9^m14^m21^m23^m29^m33^m34^m37^m40^m49^m51^m56
	c21 = m2^m4^m6^m11^m13^m15^m17^m19^m23^m24^m42^m46^m52^m54
	c22 = m11^m19^m22^m23^m26^m32^m33^m35^m36^m46^m47^m49^m52
	c23 = m1^m2^m3^m10^m12^m13^m15^m22^m25^m26^m27^m29^m30^m31^m33^m35^m36^m37^m45^m47^m49
	c24 = m10^m12^m13^m14^m20^m22^m26^m28^m35^m47^m49^m56
	c25 = m4^m5^m11^m12^m15^m16^m17^m18^m19^m22^m23^m24^m26^m35^m36^m38^m42^m46^m47^m49^m52^m53^m54
	c26 = m1^m4^m11^m13^m14^m19^m20^m22^m23^m24^m28^m32^m33^m35^m36^m42^m46^m47^m49^m50^m52^m54^m56)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def mat334(a,b):

	a11, a12, a13, a21, a22, a23, a31, a32, a33 = div3x3(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34 = div3x4(b)


	m1 =strassenIt( -a11-a31+a22,b22-b13+b23)
	m2 =strassenIt( -a12-a22-a32,b22-b14+b24)
	m3 =strassenIt( a11+a31,-b12+b22-b13+b23)
	m4 =strassenIt( -a13-a23,-b21-b31+b22+2*b32+b13+b33)
	m5 =strassenIt( a12,b11-b21-b12+b22-b13+b23)
	m6 =strassenIt( a11+a31+a12+a32,b22+b23-b14)
	m7 =strassenIt( a32-a13-a33,b31-b14+b24+b34)
	m8 =strassenIt( a21+a22-a23,b32+b33)
	m9 =strassenIt( a31,b11+b14)
	m10 =strassenIt( a22,b32+b13-b23)
	m11 =strassenIt( a12+a32-a13-a33,-b14+b24)
	m12 =strassenIt( -a11-a12,b14)
	m13 =strassenIt( -a11-a31-a12,b11-b12+b22-b13+b23+b14)
	m14 =strassenIt( a13+a23+a33,b32+b14+b34)
	m15 =strassenIt( a13+a33,-b32-b33-b14+b24+b34)
	m16 =strassenIt( -a21-a22+a13+a23+a33,b32+b33+b14)
	m17 =strassenIt( -a11+a22-a13-a23,b11-b21-b12+b22)
	m18 =strassenIt( a13,b31)
	m19 =strassenIt( a11+a21+a31+a12+a22+a32-a13-a23-a33,b14)
	m20 =strassenIt( -a11-a21-a12-a22+a13+a23,-b11+b12+b13)
	m21 =strassenIt( a21+a22-a13-a23,-b11+b12+b32+b13+b33)
	m22 =strassenIt( a22-a23,b32)
	m23 =strassenIt( -a32+a33,b31+b34)
	m24 =strassenIt( -a22-a13-a33,b32+b14-b24)
	m25 =strassenIt( -a22+a13+a23,b11-b21-b12+b22+b32)
	m26 =strassenIt( a11+a12,-b21+b22)
	m27 =strassenIt( a32,b21+b31+b24+b34)
	m28 =strassenIt( a11+a21+a31,b12)
	m29 =strassenIt( a21+a22,b32+b13+b33)
	
c11 = -m3-m5-m9+m12-m13+m18
	c12 = -m3-m5-m9+m12-m13+m17+m22+m25+m26
	c13 = m5+m8-m17-m20-m21-m22-m25-m26
	c14 = -m7+m11-m12-m18-m23
	c21 = m1+m3+m4+m10-m18-m21+m25+m28+m29
	c22 = m1+m3+m10-m22+m28
	c23 = -m8-m10+m22+m29
	c24 = -m8+m14-m15-m16+m22+m24
	c31 = -m7-m8+m9-m12-m15-m16-m18-m19+m27
	c32 = -m1-m2+m5+m9-m10-m11-m12+m13-m17-m22-m24-m25-m26
	c33 = m1+m2-m5+m6+m10+m11+m16+m17+m19+m20+m21+m22+m24+m25+m26
	c34 = m7+m8+m12+m15+m16+m18+m19+m23)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0), np.concatenate(c13, c23, c33, c43), axis=0)), axis=1)

	return result



def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def mat335(a,b):

	a11, a12, a13, a21, a22, a23, a31, a32, a33 = div3x3(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35 = div3x5(b)


	m1 =strassenIt( a11+a31+a12+a32,b24+b25)
	m2 =strassenIt( -a22+a32+a23-a33,b21+b22+b23+b24)
	m3 =strassenIt( -a21+a31-a22+a32,b22+b24+b25)
	m4 =strassenIt( -a11-a31+a12+a32-a13-a33,b21+b22)
	m5 =strassenIt( -a12-a22+a13+a23,b22-b23+b24+b25)
	m6 =strassenIt( a13,b34+b35)
	m7 =strassenIt( a33,-b11+b31-b12+2*b32-b13-b14+b34)
	m8 =strassenIt( -a11-a31+2*a12-2*a13,b32-b13-b14+b34)
	m9 =strassenIt( a21-a31,-b11-2*b12+b22-b13-2*b14+b24-b15+b25)
	m10 =strassenIt( -a11-a31,-b11+b31-b12+b13+b24-b15+b25+b35)
	m11 =strassenIt( -a11-a31+a12-a13-a33,-b21-b22+b32+b34)
	m12 =strassenIt( -a13-a23,b12-b22-2*b13+b23+b33-b24-b25)
	m13 =strassenIt( a11,b12-b13+b14+b15)
	m14 =strassenIt( a11-a12+a13,b13+b14)
	m15 =strassenIt( a22-a23+a33,b21+b22-b32+b23+b33+b24)
	m16 =strassenIt( a11+a31+a32,b12-b13+b24+b25)
	m17 =strassenIt( a31+a32,-b12+b13)
	m18 =strassenIt( -a21+a31+a32,-b12+b22+b13+b24+b25)
	m19 =strassenIt( a21+a13+a23,b12+b32-2*b13+b34+b35)
	m20 =strassenIt( a22,-b32+b23+b33+b24+b25)
	m21 =strassenIt( a32,b21-b12+2*b22+b13+b24)
	m22 =strassenIt( -a11-a21+a12-a13-a23,b32+b34-b25)
	m23 =strassenIt( a21+a23,b32+b34+b35)
	m24 =strassenIt( -a22+a23,-b32+b33)
	m25 =strassenIt( -a22+a13+a23,-b22-b32+b23+b33-b24-b25)
	m26 =strassenIt( -a11-a21-a13-a23,b12+b32-2*b13+b34-b25)
	m27 =strassenIt( a11+a21-a12+a13,2*b32-b13-b33-b14+b34-2*b25)
	m28 =strassenIt( a11+a31-a12+a13,b32-b13-b14+b34)
	m29 =strassenIt( a11+a21-a12+a22+a13-a23,-b32+b33+b25)
	m30 =strassenIt( a23-a33,b21+b31+b22+2*b32+b23+b33+b24+2*b34+b35)
	m31 =strassenIt( a11+a31+a33,-b11+b31-b12+2*b32-b13-b14+2*b34+b35)
	m32 =strassenIt( a21,b32-b13-b14+b34-b15+b35)
	m33 =strassenIt( -a31-a33,b11+b12+b13+b14)
	m34 =strassenIt( a21+a33,b11+b12+b32+b13+b14+b34+b35)
	m35 =strassenIt( a12,b22+b32+2*b24+b34+b25)
	m36 =strassenIt( a11+a31+a13+a33,b21+b31+b22+b32+b34+b35)
	
c11 = 2*m1+m8-m11-m14-2*m16-2*m17-m19+m22+m23-m26+m28-m31+m33-m35+m36
	c12 = -2*m1-m6+2*m16+2*m17+m19-m22-m23+m26+m35
	c13 = -m1+m5-m6+m16+m17+m19-m22-m23-m24+m25+m26+m35
	c14 = m1+m6-m8+m14-m16-m17-m19+m22+m23-m26-m28
	c15 = m8+m13-m14+m19-m22-m23+m26+m28
	c21 = 2*m3-m6+m7+m12+m14+m15+2*m17-2*m18+m19+m22-2*m23+m24+m25+m27+m29+m30+m34
	c22 = -2*m3+m6-m12-2*m17+2*m18-m19-m20+m23-m25
	c23 = -m3+m6-m12-m17+m18-m19+m23+m24-m25
	c24 = m3-m6+m12-m14+m17-m18+m19+m20-m22-m23-m24+m25-m27-m29
	c25 = m14+m22+m23+m24+m27+m29-m32
	c31 = m4-2*m8-m9+m10+m11-m13+m14+m16+2*m17-m18-3*m28+m31+m32-2*m33-m34
	c32 = m7+2*m8+m9-m10+m13-m16-2*m17+m18+4*m28-m31-m32+m33+m34
	c33 = m2+m7+2*m8+m9-m10+m13+m15-m16-m17+m18-m21+m24+4*m28-m31-m32+m33+m34
	c34 = -m4-m7-2*m8-m9+m10-m11-m13-m14+m16+m17-m18+m21-5*m28+m31+m32-m33-m34
	c35 = m4+m9+m11+m14+m18-m21+m28-m32+m33+m34)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0)), axis=1)

	return result



def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def div3x6(a):

	col = len(a)/3
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36)

def mat336mod2(a,b):

	a11, a12, a13, a21, a22, a23, a31, a32, a33 = div3x3(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36 = div3x6(b)


	m1 =strassenItmod2( a31^a32,b21^b31^b13^b14^b25^b35^b16^b26)
	m2 =strassenItmod2( a33,b21^b31^b13^b14^b24^b34^b16^b36)
	m3 =strassenItmod2( a11^a21^a13^a23,b31^b32^b33^b34^b15^b16)
	m4 =strassenItmod2( a22^a32,b13^b23^b33^b14^b24^b34^b16^b36)
	m5 =strassenItmod2( a13^a23,b15^b35^b16^b36)
	m6 =strassenItmod2( a12^a32^a13^a33,b21^b31^b23^b35^b26)
	m7 =strassenItmod2( a22,b11^b31^b23^b15^b25^b35^b26)
	m8 =strassenItmod2( a21^a22,b11^b31^b15^b35)
	m9 =strassenItmod2( a11^a31,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34^b15^b26)
	m10 =strassenItmod2( a11^a21^a12^a32^a23^a33,b31^b32^b13^b33^b14^b34^b16)
	m11 =strassenItmod2( a21^a31,b16^b36)
	m12 =strassenItmod2( a31^a12^a22,b11^b21^b31^b12^b25^b35^b16^b26)
	m13 =strassenItmod2( a11^a21^a32^a13^a23^a33,b31^b32^b33^b34)
	m14 =strassenItmod2( a32^a33,b21^b32^b13^b33^b14^b24^b34^b25^b35^b16^b26)
	m15 =strassenItmod2( a22^a32^a23^a33,b13^b33^b14^b34^b16^b36)
	m16 =strassenItmod2( a12^a22,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34^b25^b26)
	m17 =strassenItmod2( a31^a22,b11^b21^b31^b15^b25^b35^b26)
	m18 =strassenItmod2( a21^a31^a23^a33,b13^b14^b16^b36)
	m19 =strassenItmod2( a11^a31^a22,b11^b21^b31^b22^b32^b13^b23^b33^b14^b24^b34^b15^b16^b26)
	m20 =strassenItmod2( a21^a12^a32^a13^a23^a33,b31^b35)
	m21 =strassenItmod2( a11^a31^a12^a32,b21^b31^b22^b32^b13^b23^b33^b14^b24^b34^b16^b26)
	m22 =strassenItmod2( a21^a31^a13^a23,b15^b16^b36)
	m23 =strassenItmod2( a21^a32^a23^a33,b31^b13^b14^b35^b16)
	m24 =strassenItmod2( a13^a33,b13^b23^b33^b14^b24^b34^b25^b35^b16^b36)
	m25 =strassenItmod2( a21^a31^a23,b11^b13^b16^b36)
	m26 =strassenItmod2( a12^a22^a32^a13^a33,b21^b23^b26)
	m27 =strassenItmod2( a11^a21^a31^a13^a23^a33,b21^b31^b13^b14^b24^b34^b25^b35^b16^b26)
	m28 =strassenItmod2( a11^a21^a31^a13^a23,b21^b31^b13^b14^b24^b34^b15^b25^b35^b26)
	m29 =strassenItmod2( a21^a31^a22^a32^a23^a33,b26)
	m30 =strassenItmod2( a32^a33,b31^b32^b33^b34^b25^b26)
	m31 =strassenItmod2( a12^a13,b21^b32^b13^b33^b14^b24^b34^b25^b35^b16^b26)
	m32 =strassenItmod2( a22^a32^a13^a33,b13^b23^b33^b14^b24^b34^b25^b16^b36)
	m33 =strassenItmod2( a21^a23,b11^b31^b13^b35^b16)
	m34 =strassenItmod2( a12^a22^a32,b22^b32^b13^b23^b33^b14^b24^b34^b25^b35^b16^b26)
	m35 =strassenItmod2( a11^a31^a12^a22,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34^b26)
	m36 =strassenItmod2( a11^a21^a31^a23,b11^b21^b31^b14^b24^b34^b25^b35^b26)
	m37 =strassenItmod2( a23,b11^b31^b13^b33^b16^b36)
	m38 =strassenItmod2( a22^a32^a33,b21^b13^b33^b14^b24^b34^b16^b36)
	m39 =strassenItmod2( a12^a22^a32^a33,b25^b26)
	m40 =strassenItmod2( a21^a31^a23^a33,b13^b14^b16^b26)
	m41 =strassenItmod2( a31,b21^b31^b13^b15^b25^b35^b26)
	m42 =strassenItmod2( a11^a21^a12^a22,b11^b31^b12^b32^b13^b33^b14^b34)
	
c11 = m1^m2^m3^m4^m6^m7^m9^m13^m16^m18^m19^m21^m23^m24^m25^m26^m27^m28^m30^m32^m33^m34^m35^m41
	c12 = m2^m4^m12^m17^m18^m19^m22^m24^m26^m27^m28^m29^m31^m35^m38^m40
	c13 = m1^m17^m19^m20^m21^m22^m23^m25^m26^m28^m29^m32^m34^m36^m38^m39^m40
	c14 = m1^m3^m6^m7^m9^m10^m16^m19^m20^m21^m26^m28^m29^m30^m31^m33^m34^m35^m36^m39^m40^m41
	c15 = m2^m3^m4^m6^m7^m9^m13^m16^m17^m18^m20^m24^m25^m26^m27^m28^m29^m30^m32^m33^m35^m40^m41
	c16 = m3^m6^m7^m9^m13^m16^m17^m20^m22^m25^m26^m30^m33^m35^m39^m41
	c21 = m2^m3^m4^m5^m8^m11^m13^m17^m18^m22^m24^m25^m27^m28^m29^m30^m32^m33^m40^m41
	c22 = m21^m15^m16^m18^m12^m13^m14^m1^m2^m3^m4^m5^m7^m8^m10^m42^m34^m35^m38^m39^m32^m27^m28^m30^m22^m23^m24
	c23 = m2^m3^m4^m5^m7^m8^m13^m18^m22^m24^m27^m28^m29^m30^m32^m33^m37^m40
	c24 = m2^m3^m4^m5^m8^m11^m13^m14^m15^m17^m18^m22^m23^m24^m25^m27^m28^m29^m32^m37^m38^m40^m41
	c25 = m2^m3^m4^m5^m6^m7^m11^m13^m17^m18^m20^m22^m24^m25^m26^m27^m28^m29^m30^m32^m33^m40^m41
	c26 = m6^m7^m11^m17^m20^m25^m26^m33^m41
	c31 = m1^m2^m3^m13^m18^m23^m25^m27^m28^m30^m33^m41
	c32 = m2^m3^m4^m7^m12^m13^m14^m16^m17^m27^m28^m30^m34^m38^m39
	c33 = m1^m3^m4^m7^m13^m17^m18^m23^m25^m27^m28^m30^m33^m38
	c34 = m1^m3^m13^m14^m27^m28^m41
	c35 = m2^m3^m6^m7^m13^m17^m18^m20^m25^m26^m27^m28^m29^m30^m33^m40^m41
	c36 = m6^m7^m17^m18^m20^m25^m26^m29^m33^m40^m41)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def mat344(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34 = div3x4(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44 = div4x4(b)


	m1 =strassenIt( a11+a21-a31,b11+b31-b12+b22-b32+b42-b13+b23-b33-b14-b34)
	m2 =strassenIt( a21+a13,-b21+b22+b32+b24+b34)
	m3 =strassenIt( -a21+a31-a22+a23-a34,b22+b42+b23)
	m4 =strassenIt( a31-a34,b22+b42-b13+b23-b33)
	m5 =strassenIt( 2*a11+2*a21+a12+a22-a13-a23-a14-a24,b21-b22+b32-b24)
	m6 =strassenIt( a11+a21-a31-a13-a23+a33+a14+a24-a34,-3*b21-b31-2*b41+5*b22+b32+4*b42+2*b23+b33+2*b43+3*b24+b34+2*b44)
	m7 =strassenIt( 2*a21+a22-a23-a24,b21+b42)
	m8 =strassenIt( a11+a21+a31+a12+a22-a33-a14-a24,b22+b32+b23)
	m9 =strassenIt( a11+2*a21+a22-a23-a14-a24,-b21+2*b22+b42+b24)
	m10 =strassenIt( a11-a14,b11+b31-b12-b32+b14+b34+2*b44)
	m11 =strassenIt( -a11-2*a21-a12-a22+a23+a14+a24,-b21+b22+b32)
	m12 =strassenIt( -a11-a21+a31-a33,b11+b21+b31+b41-b22-b32-b24-b34)
	m13 =strassenIt( -a11-a12+a32-a23+a14+a24,b23)
	m14 =strassenIt( -a11+a21+a14,b11-b21+b31-b12-b32-b42+b14+b34+b44)
	m15 =strassenIt( -a11-a21+a14+a24,b31-b41+b22-b32+2*b42-b34+b44)
	m16 =strassenIt( -a11-a21+a31-a12+a32-a33+a14-a34,b21)
	m17 =strassenIt( -a31+a33,-b11-b41-b22-b32+b13-b23+b43)
	m18 =strassenIt( -a21+a23,b21-b31+2*b41+b22+b32+b23+b33)
	m19 =strassenIt( -2*a31-a32+a33+a34,b12+b22+b32+b42+b23)
	m20 =strassenIt( a31-a33-a34,b13+b33+b43)
	m21 =strassenIt( -2*a11-2*a21+2*a31+2*a13+2*a23-2*a33-a14-a24+a34,-2*b21-b31-b41+3*b22+b32+2*b42+b23+b33+b43+2*b24+b34+b44)
	m22 =strassenIt( a21+a22-a23,b22+b42)
	m23 =strassenIt( -a11-a21+a34,-b21-b41+2*b22+2*b42-b13+b23-b33+b24+b44)
	m24 =strassenIt( a31-a33,-b22-b32+b13-b23+b43)
	m25 =strassenIt( a21,-b11+b21-b31+b12+b32+b42)
	m26 =strassenIt( a11+a21,b21+2*b12-b22+b32+2*b42+b14-b24+b44)
	m27 =strassenIt( a31+a32-a33-a34,b12+b32+b42)
	m28 =strassenIt( -a21+a31+a32-a33-a34,b21+b12+b32+b42)
	m29 =strassenIt( -a21-a31+a24+a34,b21+b41+b43)
	m30 =strassenIt( -a11-a21-a31-a32+a33+a34,b21+b12-b22+b32+b42-b24)
	m31 =strassenIt( a21+a31-a12+a32+a13-a33-a34,-b21+b22+b24)
	m32 =strassenIt( a21-a23,-b31+b41+b22+b32)
	m33 =strassenIt( -a21-a31+a34,b21+b41+b13+b33+b43)
	m34 =strassenIt( a21-a23-a24,b21+b41)
	m35 =strassenIt( -a11-a21-a12-a22+a14+a24,b22+b32)
	m36 =strassenIt( 2*a11+2*a21-a31-a13-a23+a33-a14-a24,-b21-b31+b22+b32+b24+b34)
	m37 =strassenIt( -a11-2*a21+a23+a14+a24,-b31+b41+b22+b32+b24+b34)
	m38 =strassenIt( a21+a33,b11+b21+b31+b41+b13+b33+b43)
	
c11 = m2-m12-m16+m17+m24+m25-m27+m28+m34+m36+m37
	c12 = -m5+m7-m9-m11-m16-2*m27+m28-m30+m31
	c13 = m3-m4+m6+m8-m15-m18-m20+m21+m22+m23+m24-m29-m32+m33-m34+m35+m36
	c14 = m2+m5-m7+m9-m10+m11-m14-m25+m26+2*m27+2*m30-2*m31
	c21 = m11+m16-m25+m27-m28+m32-m34-m35
	c22 = -m7+m11+m16+m22+m27-m28-m35
	c23 = -m3+m4+m18-m22+m29+m32-m33+m34
	c24 = m7+m9+m10+m14+m15-2*m22+m25+m32+m37
	c31 = m17+m20+m24+m25-m27+m28+m33+m38
	c32 = -m3-m8-m13-m19-m22-m27-m35
	c33 = m3-m4+m8+m13-m20+m22+m24+m35
	c34 = m1+m3+m4+m8+m12+m13+m19+m20+m22+m23+m25+m26+m27+m28+m30+m33+m35+m38)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0), np.concatenate(c13, c23, c33, c43), axis=0)), axis=1)

	return result



def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def mat345(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34 = div3x4(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45 = div4x5(b)


	m1 =strassenIt( -a32+a33+a14-a24,b21-b22+b42-b23+b43-b24-b25)
	m2 =strassenIt( -a31-a33+a34,-b21+b22+b23+b24+b44+b45)
	m3 =strassenIt( -a31-a33+a24,-b11-b21+b12+b22+b13+b23+2*b14+b24+b44+b15+b45)
	m4 =strassenIt( a23-a33,b11-b31-b12+b32-b13+b33-2*b14+2*b34-b15+b35)
	m5 =strassenIt( -a11+a12-a32-a23+a24,b23+b33+b24+b34+b25+b35)
	m6 =strassenIt( a31,-b11+b31+b12-b32+b13+b43+2*b14-b34+b44+2*b15-b25-b35+b45)
	m7 =strassenIt( a11-a22+a23-a24,b11-b31-b12+b32-b13+b23+b33-b14+b34-b15+b25+b35)
	m8 =strassenIt( -a11+a12+a32-2*a13-a33+a24,b11-b31-b14+b34-b15+b35)
	m9 =strassenIt( a24-a34,b21-b41-b22+b42-b23+b43-b24+b44)
	m10 =strassenIt( a11-a21,b11-b31-b12+b32-2*b13+b33-2*b14-b24+b34-2*b15+b35)
	m11 =strassenIt( -a21+a22-a32-a23+a24,-b21+b22+b23+2*b24+b25)
	m12 =strassenIt( a11+a13,-b11-b31-2*b41-b22+b32+2*b42-b23+b43+b14+b34+2*b44+b15+b45)
	m13 =strassenIt( a21-a31,b11-b31-b12-b22-b13-b23-b14+b34)
	m14 =strassenIt( a33-a24,-b11+b31+b12-b32+b13+b43+2*b14-b34+b44+b15+b45)
	m15 =strassenIt( -a11+a12-a32-a13+a33+a14-a34,b11-b31-b12+b32-b14+b34-b15+b25+b35)
	m16 =strassenIt( -a11+a12+a32-a13-a33+a24,b11-b21-b31-b14+b24+b34-b15+b25+b35)
	m17 =strassenIt( -a31-a33+a14-a24+a34,b21+b31-b22-b32-b23+b43-b24-b34-b25-b35)
	m18 =strassenIt( -a11-a23+a24,b11-b31-b12+b32-b13-b23-2*b14-b24+b34-b15-b25)
	m19 =strassenIt( a11+a13-a14+a24-a34,-b11+b21-2*b41+b12-b22+2*b42-b23+b43+b14-b24+2*b44+b15+b45)
	m20 =strassenIt( -a11+a21-a13+a23,-b21-b31+b22+b32+b23+b33+b24+b34+b25+b35)
	m21 =strassenIt( a11-a31-a12+a32+a13-a33-a14+a34,-b11+b31+b12-b32+b43+b14-b34+b44+b15-b25-b35+b45)
	m22 =strassenIt( a11-a12+a13+a33-a24,b11-b21-b31+b33+b43-b14+b24+2*b34+b44-b15+b25+2*b35+b45)
	m23 =strassenIt( a22-a23+a24,b12+b22+b13+b23)
	m24 =strassenIt( -a32+a33,-b11+b21+b31-b22+b42-b23+b33+2*b43+b14-b24+b44+b15-b25+b45)
	m25 =strassenIt( a32-a33+a34,b21-b22+b42-b23+b43-b24)
	m26 =strassenIt( -a21+a31+a22-a32-a23+a33+a24-a34,-b21+b22+b23+b24)
	m27 =strassenIt( a11-a12+a32+2*a13-a33-2*a14+a24,b11-b31-b12+b32-b14+b34-b15+b35)
	m28 =strassenIt( -a21+a22-a23-a33+a24,b11-b21-b31+b22+b32+b23+b33-b14+b24+b34-b15+b25+b35)
	m29 =strassenIt( -a11+a12-a32-a13+a14,-b21+b22+b43+b24+b44+b45)
	m30 =strassenIt( a24,-b31-b41+b32+b42+b34+b44)
	m31 =strassenIt( -a31-a33,-b11+b21+b31-b22-b32-b23+b43+b14-b24-b34+b15-b25-b35)
	m32 =strassenIt( -a23+a33,b22+b32+b23+b33)
	m33 =strassenIt( -a11+a12-a32-a13+a24,b33+b43+b34+b44+b35+b45)
	m34 =strassenIt( a14-a24+a34,-b21-b31-b41+b22+b32+b23-b43+b24+b34+b44+b25+b35+b45)
	m35 =strassenIt( a21+a23-a24,-b11-b21+b12+b22+b13+b23+2*b14+2*b24+b15+b25)
	m36 =strassenIt( a21-a22+a23-a24,b11-b21-b31-b12+b22+b32-b13+b23+b33-b14+b24+b34-b15+b25+b35)
	m37 =strassenIt( -a11-a13+a24,b21-b31-2*b41-b22+b32+2*b42-b23+b43-b24+b34+2*b44-b25+b45)
	m38 =strassenIt( -a11-a13+a14,2*b21-2*b41-2*b22+2*b42-b23+b43-2*b24+2*b44-b25+b45)
	m39 =strassenIt( -a14+a24,b21-b41-b22+b42-b23+b43-b24+b44-b25+b45)
	m40 =strassenIt( -a21+a31-a23+a33,-b21-b31+b24+b34)
	m41 =strassenIt( a11-a12+a13-a14,-b21+b22+b24)
	m42 =strassenIt( -a12+a22+a13-a23-a14+a24,b23+b25)
	m43 =strassenIt( a11-a22+a13+a23-a24,b11-b31+b22+b32+b23+b33-b14+b34-b15+b35)
	m44 =strassenIt( a32-a33+a24,-b22+b42-b23+b43)
	m45 =strassenIt( a21-a31-a22+a23-a24,-b21+b12+b22+b13+b23+b24)
	m46 =strassenIt( a11,b11-b31-b12+b32-b14+b34)
	m47 =strassenIt( a32,-b11+b31+b22+b23+b33+b43+b14+b24+b44+b15+b45)
	
c11 = m19+m15+m18-2*m12-m14+2*m1+m4+m5+m7+m8-m9+m41+m42-m43+m44+m46+m47+m34-2*m37+m38+2*m39+m27+m29+2*m30+m22-m23+m25
	c12 = 2*m1+m8-m9-m12+m15-m16+m19+m25+m27+m30+m34-m37+m38+m39-m41+m44
	c13 = -m1-m7+m9+m12-m15-m19+m23-m25-m27-m30-m34+m37-m38-m39-m42+m43
	c14 = m4+m5+m7-m12-m14+m16+m18+m22-m23+m29+2*m30-2*m37+m38+2*m39+m41+m42-m43+m47
	c15 = m1-m9+m15+m19+m25+m27-m30+m34+m37-m39+m46
	c21 = m3+m4+m6+m11-m12+m13-m20+m24+m30+m31+m35+m36-m37+m40-m43+m44+m45+m47
	c22 = m3+m6+m7-m10+m13+m14-m16-m18-m22+m23+m24+m31-m33+m35-m36+m40+m44+m45-m46
	c23 = -m3-m6-m7+m10-m13-m14+m18-m28-m31-m32-m35-m40-m45+m46
	c24 = m4+m11-m12-m14+m16-m20+m22-m23+2*m30+m33+m35+m36-m37-m43+m47
	c25 = m3+m6+m12+m13+m14+m20+m23+m28-2*m30+m31+m32+m37+m40+m43+m45
	c31 = -m1+m2+m6-m17+m24+m26+m28+2*m31-m34+m36-m39+m45+m47
	c32 = m2+m15-m16-m21-m22+m24+m25-m29+m31-m33-m41
	c33 = -m2-m15+m21-m26-m28+m29-m31-m36+m41-m45
	c34 = -m1+m2-m3-m9-m14+m16-m17+m22-m25+m26+m28+m30+m31+m33-m34+m36-m39+m45+m47
	c35 = m1+m3+m6+m9+m14+m17+m25-m30+m34+m39)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0)), axis=1)

	return result



def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def div4x6(a):

	col = len(a)/4
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46)

def mat346mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34 = div3x4(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46 = div4x6(b)


	m1 =strassenItmod2( a14^a24,b11^b41^b16^b46)
	m2 =strassenItmod2( a12^a13^a14,b11^b41^b23^b43^b15^b45^b16^b46)
	m3 =strassenItmod2( a11^a21^a31^a22^a13^a33^a14,b43^b15^b45^b46)
	m4 =strassenItmod2( a12^a32^a33,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24^b34^b15^b25^b45^b16^b26^b46)
	m5 =strassenItmod2( a12^a32^a13^a14^a34,b11^b41^b12^b42^b23^b33^b43^b15^b45^b16^b46)
	m6 =strassenItmod2( a11^a21^a31^a22^a13^a33^a24,b43^b15^b45^b16^b46)
	m7 =strassenItmod2( a11^a13^a14,b11^b22^b32^b33^b43^b35^b45^b36^b46)
	m8 =strassenItmod2( a11^a31^a13^a23^a33^a14^a34,b11^b22^b32^b13^b15^b16)
	m9 =strassenItmod2( a12^a32^a14^a34,b13^b23^b33)
	m10 =strassenItmod2( a22^a32^a24^a34,b11^b21^b31^b14^b24^b34^b15^b25^b35)
	m11 =strassenItmod2( a21^a24,b11^b22^b32^b23^b33^b25^b35^b26^b36)
	m12 =strassenItmod2( a21^a31^a23^a33,b13^b43^b15^b45^b16^b46)
	m13 =strassenItmod2( a21^a12^a22^a32^a24,b23^b25^b26)
	m14 =strassenItmod2( a11^a12^a14,b32^b42^b33^b15^b35^b16^b36)
	m15 =strassenItmod2( a21^a22^a24,b22^b32^b23^b33^b25^b35^b16^b26^b36)
	m16 =strassenItmod2( a22^a32^a23^a33^a24^a34,b31^b12^b42^b13^b34^b35^b16)
	m17 =strassenItmod2( a21^a12^a24,b12^b22^b32^b13^b23^b33^b15^b25^b35^b16^b26^b36)
	m18 =strassenItmod2( a31^a33,b12^b42)
	m19 =strassenItmod2( a11^a21^a31^a22^a13^a33^a14^a24^a34,b11^b22^b32^b33^b43^b14^b35^b45^b36^b46)
	m20 =strassenItmod2( a22^a32^a23^a24^a34,b21^b31^b41^b12^b42^b13^b43^b14^b24^b34^b25^b35^b45^b16^b46)
	m21 =strassenItmod2( a11^a21^a31^a13^a23^a33^a14^a24^a34,b11^b22^b32^b33^b43^b35^b45^b36^b46)
	m22 =strassenItmod2( a13,b31^b41^b32^b42^b13^b23^b43^b35^b45^b36^b46)
	m23 =strassenItmod2( a12^a22,b13^b23^b33^b16^b26^b36)
	m24 =strassenItmod2( a12^a32^a13^a33,b23^b43^b34^b44)
	m25 =strassenItmod2( a22^a23^a14,b11^b41^b23^b43^b16^b46)
	m26 =strassenItmod2( a11^a31^a14^a34,b13^b33^b15^b35^b16^b36)
	m27 =strassenItmod2( a23,b11^b21^b31^b13^b23^b33^b14^b24^b34^b15^b25^b35)
	m28 =strassenItmod2( a12^a32^a13^a33^a14,b23^b43^b14^b44)
	m29 =strassenItmod2( a11^a31^a13^a14^a34,b12^b22^b32)
	m30 =strassenItmod2( a11^a31^a13^a33,b13)
	m31 =strassenItmod2( a22^a23,b11^b21^b41^b22^b32^b33^b43^b25^b35^b36^b46)
	m32 =strassenItmod2( a31^a12^a13^a33^a14,b12^b42^b13)
	m33 =strassenItmod2( a12,b11^b21^b41^b32^b42^b33^b43^b35^b45^b36^b46)
	m34 =strassenItmod2( a14,b23^b43)
	m35 =strassenItmod2( a31^a22^a23^a33^a24,b12^b42^b13^b16)
	m36 =strassenItmod2( a22^a23^a24,b12^b42^b13^b43^b16^b46)
	m37 =strassenItmod2( a24^a34,b21^b41^b24^b44^b25^b45)
	m38 =strassenItmod2( a23,b11^b22^b32^b13^b14^b24^b34^b15^b16)
	m39 =strassenItmod2( a11^a13^a14,b22^b42)
	m40 =strassenItmod2( a11^a21^a13^a14^a24,b11^b12^b13^b15^b16)
	m41 =strassenItmod2( a12^a32^a23,b14^b24^b34)
	m42 =strassenItmod2( a11^a32^a13^a33^a14,b11^b12^b22^b42^b13^b14^b15^b16)
	m43 =strassenItmod2( a31^a12^a34,b12^b22^b32^b13^b33^b15^b35^b16^b36)
	m44 =strassenItmod2( a32^a34,b11^b41^b12^b42^b13^b43^b15^b45^b16^b46)
	m45 =strassenItmod2( a12^a22^a13^a23,b11^b41^b13^b23^b33^b43^b15^b45^b36^b46)
	m46 =strassenItmod2( a11^a22^a13^a23^a14,b12^b32^b42^b13^b33^b35^b16^b36)
	m47 =strassenItmod2( a33,b21^b31^b41^b12^b42^b23^b33^b43^b14^b24^b34^b25^b35^b45^b26^b36^b46)
	m48 =strassenItmod2( a32^a33,b21^b41^b23^b43^b14^b24^b25^b45^b26^b46)
	m49 =strassenItmod2( a12^a22^a23,b11^b21^b41^b12^b22^b42^b33^b43^b15^b25^b45^b36^b46)
	m50 =strassenItmod2( a22^a23^a24^a34,b21^b41^b14^b24^b25^b45)
	m51 =strassenItmod2( a31^a32^a34,b11^b12^b42^b13^b14^b15^b16)
	m52 =strassenItmod2( a21^a22^a24,b11^b22^b32^b23^b33^b14^b15^b25^b35^b16^b26^b36)
	m53 =strassenItmod2( a12^a32^a13^a33^a14^a34,b13^b23^b33^b43^b14^b44)
	m54 =strassenItmod2( a34,b14^b44)
	m55 =strassenItmod2( a11^a21^a31^a13^a23^a33,b13^b43^b15^b45^b16^b46)
	m56 =strassenItmod2( a11^a31^a13^a33^a14^a34,b11^b22^b32^b13^b14^b15^b16)
	
c11 = m5^m7^m9^m12^m14^m18^m22^m30^m32^m33^m39^m44^m55
	c12 = m14^m18^m26^m29^m30^m32^m39^m43
	c13 = m2^m5^m9^m18^m30^m32^m34^m44
	c14 = m4^m11^m17^m24^m28^m33^m34^m39^m40^m42^m48
	c15 = m2^m25^m26^m29^m31^m33^m39^m43^m45^m46^m49
	c16 = m5^m7^m9^m11^m12^m17^m18^m25^m30^m31^m32^m33^m34^m39^m40^m44^m45^m46^m49^m55
	c21 = m3^m6^m7^m10^m12^m15^m17^m18^m20^m23^m30^m33^m35^m38^m39^m40^m44^m46^m49^m55
	c22 = m3^m7^m8^m12^m15^m18^m19^m21^m35^m39^m40^m46^m52^m56
	c23 = m1^m6^m10^m20^m25^m27^m30^m34^m36^m44^m55
	c24 = m8^m19^m21^m31^m37^m38^m50^m54^m56
	c25 = m3^m6^m7^m8^m12^m17^m18^m19^m21^m23^m30^m31^m33^m35^m36^m39^m40^m46^m49^m52^m55^m56
	c26 = m1^m3^m6^m7^m10^m11^m12^m17^m18^m20^m23^m25^m27^m30^m31^m33^m34^m35^m39^m40^m44^m46^m49^m55
	c31 = m4^m6^m7^m8^m12^m13^m18^m19^m29^m30^m33^m38^m39^m41^m42^m43^m44^m47^m51^m52^m55
	c32 = m18^m29^m39^m42^m51^m56
	c33 = m2^m5^m18^m28^m32^m44^m53^m54
	c34 = m4^m8^m11^m17^m33^m38^m39^m40^m41^m42^m48^m54^m56
	c35 = m6^m7^m11^m12^m13^m16^m17^m18^m19^m20^m29^m30^m35^m36^m40^m43^m47^m48^m50^m52^m55^m56
	c36 = m2^m5^m16^m20^m28^m32^m35^m36^m44^m47^m48^m50^m53^m54)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)

def mat355(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35 = div3x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenIt( a14-a15,2*b11+b31+b51+b12-2*b22+b32+b42+3*b52-b53+b54)
	m2 =strassenIt( -a12+a22-a32+a14-a15-a35,-b22+b42+b52-b24+b44+b54)
	m3 =strassenIt( -a31+a32+2*a33-a14+a15+a35,b11+b12+b53-b54+b15+b55)
	m4 =strassenIt( a13+a23-a14,-b22+b42+b52-2*b13-b33)
	m5 =strassenIt( -a12+a14+2*a34-a15-a35,b13+b23)
	m6 =strassenIt( a24-a25,b41)
	m7 =strassenIt( -a12-a32+a14+a34-a15-a35,-b22+b42+b52+b13+b23-b24+b44+b54)
	m8 =strassenIt( a24,-b22+b42+b52+b43+b53)
	m9 =strassenIt( -a13-a33+a14,2*b13-b23+b33+b43+b53+b24-b44-b54-b25+b45+b55)
	m10 =strassenIt( a21+a31-a22-a32-a13-2*a23-3*a33+a14,-b23+b43+b53+b24-b44-b54-b25+b45+b55)
	m11 =strassenIt( a11+a21-a12-a22-2*a13-2*a23-a14,-b21+b41+b51-b22+b42+b52+b23-b24+b44+b54)
	m12 =strassenIt( -a21-a31+a22+a32+2*a23+2*a33+a24+a34,b12+b43+b53-b44-b54-2*b15-b35+b45+b55)
	m13 =strassenIt( a12+a13+a23+a14,b12-b22+b32+2*b14+b34)
	m14 =strassenIt( -a11-a21+a12+a22+2*a13+2*a23-a14-2*a34+a15+a35,-b21+b41+b51-b22+b42+b52+b13+b23-b24+b44+b54)
	m15 =strassenIt( -a12-a13-a14,2*b12+b32+2*b14+b34)
	m16 =strassenIt( a13+a23-a14-2*a24-2*a34+a25+a35,-b22+b42+b52)
	m17 =strassenIt( a34,b22-b42-b52-b53+2*b24-2*b44-2*b54-b25+b45+b55)
	m18 =strassenIt( -a21-a31-a12-a13+2*a23+a33-a14,b13+b23-b14-b24+b15+b25)
	m19 =strassenIt( -a21+2*a23,b12+b14)
	m20 =strassenIt( -a21+a22+a23+a25,b12)
	m21 =strassenIt( -a32-a34,-b12-b22+b52-2*b13-2*b23+b54-b15-b25)
	m22 =strassenIt( -a33-a24-a34+a25+a35,b12+2*b22-b42-2*b52+b53-b54+b55)
	m23 =strassenIt( a11-a12-a13+a33-a14,2*b11+b31)
	m24 =strassenIt( a33,b12-2*b22+b32+b42+2*b52)
	m25 =strassenIt( a14+2*a34-a15-a35,-b21+b41+b51-b22+b42+b52+b53-b24+b44+b54)
	m26 =strassenIt( a11-a12-2*a13-a14,b11+b31-b12+b13-b14)
	m27 =strassenIt( a14,-b21+b41+b51-b22+b42+b52-2*b13+b23-b33-b43-b53-b24+b44+b54)
	m28 =strassenIt( -a32-a35,b52+b54)
	m29 =strassenIt( -2*a34+a35,b53)
	m30 =strassenIt( -a11-a21+a12+a22+2*a13+2*a23+a14+a25,b41+b51-b12)
	m31 =strassenIt( -a11-a21+a12+2*a13+2*a23+a14,-b11-b21-b12-b22+b42+b52+b13+b23-b14-b24+b44+b54)
	m32 =strassenIt( a31-a32-2*a33-a34,b12+b53-b54+b15+b55)
	m33 =strassenIt( a24+2*a34-a25-a35,b22-b42-b52+b53)
	m34 =strassenIt( a22,-b22+b42+b52-b24+b44+b54)
	m35 =strassenIt( -a31+a32+2*a33+a24+a34-a25,b12+b53-b54+b55)
	m36 =strassenIt( a21+a31-a32-2*a23-2*a33-a34,b12+b13+b23-b24+b15+b25)
	m37 =strassenIt( a13-a14,2*b13+b33)
	m38 =strassenIt( a21+a31-a22-a32-2*a23-2*a33-a34,-b13-b23+b43+b53+b24-b44-b54-b25+b45+b55)
	m39 =strassenIt( a11+a31-a12-a32-2*a13-2*a33-a15-a35,3*b11+b31+b12+b13-2*b23+b33+b43+b53-b14+2*b24-b34-b44-b54+2*b15-2*b25+b35+b45+b55)
	m40 =strassenIt( a32-a14+a15+a35,b11+b21+b52-b13-b23+b54)
	m41 =strassenIt( a24-a25,-b12-b53+b54)
	m42 =strassenIt( a32-a24+a25+a35,-b12-b22+b52+b54)
	m43 =strassenIt( a23,b12-2*b13-b33+2*b14+b34)
	m44 =strassenIt( a22,b13+b23)
	m45 =strassenIt( -a13-a23-a14+a15,2*b11+b31+b12-2*b22+b32+b42+b52)
	m46 =strassenIt( -a12-a14,-b11-b21+b12-b22+b32+b13+b23+b14-b24+b34)
	m47 =strassenIt( a31-a32-a33-a35,b53-b54+b55)
	m48 =strassenIt( -a11-a31+a12+a32+3*a13+3*a33+a15+a35,2*b11+b31+b13-2*b23+b33+b43+b53-b14+2*b24-b34-b44-b54+b15-2*b25+b35+b45+b55)
	m49 =strassenIt( a22+a24,-b12-b22+b42+b52+b44+b54)
	m50 =strassenIt( a21-a22-2*a23,b13)
	m51 =strassenIt( a11+a21+a32-2*a13-2*a23-a14+a15+a35,-b11-b21-b22+b42+b52+b13+b23-b24+b44+b54)
	m52 =strassenIt( -a33+a14-a15,2*b11+b31+b12-2*b22+b32+b42+2*b52)
	m53 =strassenIt( -a11+a12+2*a13+a23+a14,2*b11+b31+b12)
	m54 =strassenIt( -a21-a31+a22+a32+3*a23+2*a33+a24+a34,2*b15+b35)
	m55 =strassenIt( a33,2*b12+b32+b53-b54+2*b15+b35+b55)
	m56 =strassenIt( -a14-a34+a15+a35,-2*b21+b41+2*b51+b12-b22+b42+b52+b13+b23+b53-b24+b44+b15+b55)
	m57 =strassenIt( a12+a13+a33+a14,2*b12+b32+b13+b23+b14-b24+b34+b15+b25)
	m58 =strassenIt( a12+a22+a32+a13+a23+a14+a25+a35,b12+b22)
	
c11 = -m1-m2-m5-m11-m14-m19+m23+m24-m25-m26-m28-m29-m31+m34-m40-m50-m51+m52
	c12 = -m4-m13-m15-m23-m24-m37+m43-m45-m52-m53
	c13 = -m5-m11-m14-m25-m27-m29+m37-m50
	c14 = m2+m4+m13+m19+m23+m24+m28+m31-m34+m37+m40-m43+m45+m46+m51+m52+m53
	c15 = m50+m51+m52+m53-m55+m57+m19+m15+m13+m14+m2+m3+m4+m5+m9+m11-m43+m45+m46+m47+m48+m40-m34+m37+m39+m31+m26+m27+m28+m29+m24+m25
	c21 = m6+m11+m19+m20+m26+m30+m31+m34+m44+m50+m53
	c22 = m4+m13+m15-m16-m20+m28+m29+m33+m37+m41+m42-m43+m58
	c23 = -m4+m8+m16-m29-m33-m37+m44+m50
	c24 = -m4+m16-m19+m20-m29-m33-m34-m37-m41+m43+m49
	c25 = -m8+m12-m32-m34-m35+m36+m38-m41-m44+m49+m54
	c31 = m1+m2-m3+m5-m7-m24+m25+m28+m29-m32-m34+m40-m52+m56
	c32 = -m22+m24-m28-m29-m33-m35-m41-m42-m47
	c33 = m2+m5-m7-m9+m10-m17+m29-m34-m37-m38-m50
	c34 = -m2-m5+m7+m15+m18+m19+m21+m22-m24+m29+m33+m34+m35+m36+m41+m42+m47+m57
	c35 = -2*m2-2*m5+2*m7+m17+m21+m22-m24+m32+m33+2*m34+m35+m41+m42+m55)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0)), axis=1)

	return result



def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def mat356mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35 = div3x5(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56 = div5x6(b)


	m1 =strassenItmod2( a14^a25,b42^b52^b44^b54^b45^b55^b56)
	m2 =strassenItmod2( a13,b31^b51^b32^b42^b52^b33^b35^b55)
	m3 =strassenItmod2( a12^a22^a32^a23^a33,b32^b24^b34^b25^b35^b26^b36)
	m4 =strassenItmod2( a21^a23^a25,b33^b35)
	m5 =strassenItmod2( a13^a33,b21^b31^b32^b33^b34^b25^b35)
	m6 =strassenItmod2( a22^a23^a24,b42^b43^b46)
	m7 =strassenItmod2( a21^a13^a23,b21^b31^b33^b25)
	m8 =strassenItmod2( a11^a25^a35,b51^b12^b23^b53^b14^b15^b25)
	m9 =strassenItmod2( a22,b22^b32^b33^b24^b34^b35^b26^b36)
	m10 =strassenItmod2( a12^a15,b52^b53^b54^b55^b56)
	m11 =strassenItmod2( a15^a35,b51^b22^b52^b23^b53^b24^b54^b55)
	m12 =strassenItmod2( a11,b11^b51^b12^b23^b53^b14^b15^b25^b16)
	m13 =strassenItmod2( a21,b11^b21^b31^b41^b15^b25^b35^b45)
	m14 =strassenItmod2( a25^a35,b52^b23^b53^b14^b15^b25^b56)
	m15 =strassenItmod2( a11^a31^a14^a34,b41^b45)
	m16 =strassenItmod2( a25^a35,b12^b52^b23^b53^b14^b54^b15^b25^b55)
	m17 =strassenItmod2( a13^a15^a25^a35,b51^b42^b52^b55)
	m18 =strassenItmod2( a11^a31^a22^a32^a23^a33,b21^b12^b13^b14^b15^b25^b16)
	m19 =strassenItmod2( a21^a31^a23^a33^a25^a35,b23^b14^b15^b25)
	m20 =strassenItmod2( a11^a31,b11^b21^b41^b12^b15^b25^b45)
	m21 =strassenItmod2( a24^a34,b12^b42^b43^b14^b44^b15^b45^b16)
	m22 =strassenItmod2( a11^a25^a35,b23^b53^b14^b15^b25^b55)
	m23 =strassenItmod2( a22^a23^a33,b32^b33^b24^b25^b35^b26^b36)
	m24 =strassenItmod2( a12^a22^a32^a13^a23^a33^a14,b32^b34^b35^b36)
	m25 =strassenItmod2( a21^a23^a33,b33^b14^b15^b35)
	m26 =strassenItmod2( a23^a33,b12^b22^b32^b33^b14^b24^b34^b15^b35)
	m27 =strassenItmod2( a22^a23^a33,b22^b33^b24)
	m28 =strassenItmod2( a23^a33,b22^b32^b33^b14^b15^b25^b26^b36)
	m29 =strassenItmod2( a14,b41^b52^b43^b54^b45^b55^b56)
	m30 =strassenItmod2( a11^a31,b11^b21^b12^b13^b14^b15^b25)
	m31 =strassenItmod2( a25,b42^b33^b34^b54)
	m32 =strassenItmod2( a25,b34^b44^b54^b35^b45^b55)
	m33 =strassenItmod2( a12^a32^a14^a34^a15^a35,b42^b44^b45)
	m34 =strassenItmod2( a21^a31^a23^a33^a25^a35,b12^b23^b14^b15^b25)
	m35 =strassenItmod2( a13^a25,b42^b52^b34^b35)
	m36 =strassenItmod2( a11,b11^b51^b13^b15^b55)
	m37 =strassenItmod2( a13^a25,b51^b33^b35^b55)
	m38 =strassenItmod2( a12^a32^a15^a35,b22^b42^b23^b24^b44^b45)
	m39 =strassenItmod2( a14^a24^a34^a15^a25^a35,b22^b32^b42^b24^b34^b25^b35^b26^b36)
	m40 =strassenItmod2( a22^a13^a23,b21^b33^b25)
	m41 =strassenItmod2( a21^a31^a24^a34,b12^b14^b15^b16)
	m42 =strassenItmod2( a22^a23^a14,b32^b42^b43^b34^b44^b35^b45^b36^b46)
	m43 =strassenItmod2( a21^a24,b41^b42^b44^b45)
	m44 =strassenItmod2( a12^a15^a35,b22^b23^b53^b24)
	m45 =strassenItmod2( a22^a23^a25,b33^b34^b44^b45)
	m46 =strassenItmod2( a22^a23,b32^b42^b33^b43^b34^b44^b35^b45^b36^b46)
	m47 =strassenItmod2( a14,b41^b32^b52^b34^b54^b35^b55^b36^b46^b56)
	m48 =strassenItmod2( a31^a22^a32^a23^a33,b12^b13^b14^b15^b16)
	m49 =strassenItmod2( a12^a32^a14^a24^a34^a15^a25^a35,b22^b32^b42^b24^b34^b44^b25^b35^b45^b26^b36)
	m50 =strassenItmod2( a22^a23^a24,b42^b43^b44^b45^b46)
	m51 =strassenItmod2( a21,b11^b21^b31^b41^b42^b33^b44^b25^b45)
	m52 =strassenItmod2( a11^a13^a15,b51^b55)
	m53 =strassenItmod2( a21^a24^a34,b41^b12^b42^b14^b44^b15^b45^b16)
	m54 =strassenItmod2( a12,b21^b23^b53^b25)
	m55 =strassenItmod2( a13,b31^b51^b33^b35^b55)
	m56 =strassenItmod2( a11^a31^a12^a32^a13^a33,b21^b25)
	m57 =strassenItmod2( a12^a15^a25,b52^b23^b53^b54^b25^b55^b56)
	m58 =strassenItmod2( a14^a15^a25^a35,b42^b52^b54^b55^b56)
	m59 =strassenItmod2( a22^a32^a23^a33,b12^b22^b13^b14^b24^b15^b16)
	m60 =strassenItmod2( a12,b21^b22^b52^b23^b53^b54^b25^b55^b56)
	m61 =strassenItmod2( a14^a34,b41^b43)
	m62 =strassenItmod2( a12^a22^a32^a14^a24^a34^a15^a25^a35,b22^b32^b24^b34^b25^b35^b26^b36)
	m63 =strassenItmod2( a11^a15^a25,b51^b23^b53^b25)
	m64 =strassenItmod2( a12^a14^a15,b52^b54^b55^b56)
	m65 =strassenItmod2( a11^a21^a31^a24^a34,b41^b12^b14^b15^b45^b16)
	m66 =strassenItmod2( a21^a14^a24,b42^b44)
	m67 =strassenItmod2( a21^a31^a22^a32^a23^a33,b12^b13^b23^b14^b15^b25^b16)
	m68 =strassenItmod2( a22^a23^a34,b42^b43^b46)
	m69 =strassenItmod2( a21^a31^a12^a32^a23^a33^a15^a25,b23^b25)
	m70 =strassenItmod2( a21^a23^a33,b21^b31^b12^b25^b35)
	m71 =strassenItmod2( a22^a32^a23^a33,b24^b25^b26)
	
c11 = m1^m12^m15^m31^m32^m37^m41^m43^m54^m55^m57^m63^m64^m65^m66
	c12 = m2^m8^m14^m16^m17^m22^m52^m54^m55^m58^m60^m64
	c13 = m10^m15^m18^m40^m41^m42^m43^m46^m47^m48^m54^m56^m64^m65^m66
	c14 = m11^m12^m14^m17^m18^m22^m29^m31^m35^m36^m37^m40^m42^m44^m46^m47^m48^m56^m58^m60^m64
	c15 = m1^m12^m18^m29^m31^m32^m36^m37^m40^m42^m46^m47^m48^m52^m54^m56^m57^m63^m64
	c16 = m1^m2^m3^m8^m11^m15^m16^m24^m32^m35^m41^m43^m44^m47^m54^m55^m57^m60^m63^m65^m66^m71
	c21 = m7^m9^m31^m32^m33^m37^m40^m43^m49^m51^m55^m62
	c22 = m2^m4^m5^m6^m7^m23^m26^m28^m33^m35^m45^m49^m50^m55^m62^m70
	c23 = m1^m9^m10^m21^m33^m42^m43^m46^m47^m48^m49^m53^m57^m61^m62^m67^m69
	c24 = m6^m13^m23^m25^m27^m28^m29^m31^m33^m42^m45^m46^m47^m49^m50^m51^m62^m66
	c25 = m4^m9^m13^m29^m31^m32^m33^m42^m46^m47^m49^m51^m62^m66
	c26 = m1^m2^m5^m7^m9^m21^m25^m26^m27^m32^m35^m42^m43^m47^m50^m53^m55^m61^m70
	c31 = m53^m55^m57^m59^m64^m69^m70^m18^m12^m1^m7^m8^m41^m43^m44^m40^m34^m37^m38^m31^m32^m33^m27^m30^m25
	c32 = m2^m3^m4^m5^m6^m7^m14^m16^m19^m23^m33^m34^m35^m39^m45^m49^m50^m54^m55^m58^m60^m64^m70
	c33 = m10^m27^m33^m38^m41^m42^m43^m44^m46^m47^m48^m53^m59^m61^m64
	c34 = m49^m50^m53^m54^m58^m59^m60^m64^m65^m66^m20^m12^m14^m3^m6^m42^m45^m46^m47^m48^m36^m39^m31^m33^m27^m29^m30^m22^m23
	c35 = m53^m57^m59^m64^m65^m66^m69^m19^m20^m12^m1^m4^m42^m44^m46^m47^m48^m36^m38^m31^m32^m33^m27^m29^m30^m22^m25
	c36 = m49^m50^m53^m54^m55^m57^m58^m60^m61^m68^m69^m70^m71^m16^m2^m3^m5^m6^m7^m41^m42^m43^m44^m47^m34^m35^m38^m39^m32^m25)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div3x6(a):

	col = len(a)/3
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36)

def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)

def mat366mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26, a31, a32, a33, a34, a35, a36 = div3x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a32^a36,b61^b64^b66)
	m2 =strassenItmod2( a23^a33^a25^a35,b12^b52^b13^b53^b14^b54^b15^b55)
	m3 =strassenItmod2( a35,b34^b46^b56)
	m4 =strassenItmod2( a23^a33^a25,b12^b22^b42^b52^b13^b23^b33^b43^b53^b63^b14^b24^b44^b54^b15^b25^b45^b55^b36^b66)
	m5 =strassenItmod2( a23^a26,b62^b13^b64^b65^b16^b66)
	m6 =strassenItmod2( a22^a24,b22^b13^b23^b63^b24^b65^b16^b26)
	m7 =strassenItmod2( a11^a12^a23^a24,b11^b51^b12^b52^b13^b53^b16^b56)
	m8 =strassenItmod2( a14^a24^a15^a25,b41^b44^b46)
	m9 =strassenItmod2( a34,b22^b42^b24^b25^b45^b26)
	m10 =strassenItmod2( a22^a32^a23^a33^a24^a34^a26^a36,b13^b23^b63^b65^b16^b26)
	m11 =strassenItmod2( a24,b12^b32^b52^b62^b14^b34^b54^b64^b25^b45^b26^b46)
	m12 =strassenItmod2( a31^a12^a23^a24^a16^a36,b61^b64)
	m13 =strassenItmod2( a33,b32^b62^b34^b64^b35^b65^b36^b66)
	m14 =strassenItmod2( a11^a21^a12^a22^a32^a16^a26^a36,b11^b14^b16)
	m15 =strassenItmod2( a11^a12^a14^a15,b32^b52^b35^b55)
	m16 =strassenItmod2( a11^a12^a24^a25,b31^b41^b23^b33^b43^b63^b15^b55^b16^b26^b36^b46^b66)
	m17 =strassenItmod2( a21^a31^a25^a35,b13^b23^b63^b15^b25^b65)
	m18 =strassenItmod2( a13^a23^a33^a14^a24^a34^a15^a25,b34^b44^b54)
	m19 =strassenItmod2( a31^a16^a26^a36,b11^b61^b64)
	m20 =strassenItmod2( a32,b61^b64^b26^b66)
	m21 =strassenItmod2( a12^a14,b45)
	m22 =strassenItmod2( a12^a22,b24)
	m23 =strassenItmod2( a21^a31^a22^a32^a24^a34^a25^a35,b13^b23^b63^b25^b65^b16)
	m24 =strassenItmod2( a12^a23^a33^a24^a16,b32^b62^b64^b35^b65^b66)
	m25 =strassenItmod2( a11^a21^a31^a12^a22^a32^a16^a26^a36,b11^b21^b14^b24^b16)
	m26 =strassenItmod2( a16^a26^a36,b11^b21^b64^b26^b66)
	m27 =strassenItmod2( a31,b61^b64^b16)
	m28 =strassenItmod2( a11^a21^a31^a16^a26^a36,b11^b21^b24)
	m29 =strassenItmod2( a13^a16,b35^b55)
	m30 =strassenItmod2( a31^a32^a34^a35,b12^b13^b14^b15)
	m31 =strassenItmod2( a33^a34,b34)
	m32 =strassenItmod2( a11^a21,b14)
	m33 =strassenItmod2( a16,b32^b62^b35^b65)
	m34 =strassenItmod2( a13^a23^a33^a15^a25,b31^b41^b51^b34^b36)
	m35 =strassenItmod2( a11^a13^a23^a14^a24^a15,b31^b32^b33^b35^b36)
	m36 =strassenItmod2( a11^a13^a15^a16,b55)
	m37 =strassenItmod2( a12^a14,b31^b41^b33^b43^b36^b46)
	m38 =strassenItmod2( a11^a25,b31^b41^b51^b13^b23^b33^b43^b53^b63^b16^b26^b36^b46^b56^b66)
	m39 =strassenItmod2( a11^a12^a24^a34^a25^a35,b22^b32^b42^b62^b24^b64)
	m40 =strassenItmod2( a11^a15,b31^b51^b33^b53^b36^b56)
	m41 =strassenItmod2( a13^a23^a33^a34^a15^a25,b41^b34^b46)
	m42 =strassenItmod2( a12^a22^a32^a16^a26^a36,b11^b21^b14^b16^b26)
	m43 =strassenItmod2( a11^a25^a35,b12^b22^b32^b42^b52^b62^b14^b24^b64)
	m44 =strassenItmod2( a23^a33^a26^a36,b13^b23^b63^b16^b26^b66)
	m45 =strassenItmod2( a25,b22^b42^b13^b23^b33^b43^b53^b63^b24^b44^b25^b45^b16^b36^b56^b66)
	m46 =strassenItmod2( a13^a23^a33^a15^a25^a35,b51^b34^b46)
	m47 =strassenItmod2( a11,b12^b22^b42^b52^b15^b35^b55^b65)
	m48 =strassenItmod2( a12^a14,b42^b52^b45^b55)
	m49 =strassenItmod2( a11^a12^a24^a25^a35,b22^b32^b42^b62^b24^b64^b15^b55^b16)
	m50 =strassenItmod2( a12^a32^a23^a33^a24^a34^a16^a36,b62^b63^b64^b65)
	m51 =strassenItmod2( a12^a16,b35^b65)
	m52 =strassenItmod2( a11,b15^b55)
	m53 =strassenItmod2( a21^a25,b12^b63^b14^b65)
	m54 =strassenItmod2( a13^a23^a33,b31^b41^b51^b44^b46)
	m55 =strassenItmod2( a11^a12^a24^a25,b15^b55^b16)
	m56 =strassenItmod2( a24^a25,b12^b22^b32^b42^b52^b62^b23^b43^b14^b24^b34^b44^b54^b64^b25^b45)
	m57 =strassenItmod2( a24,b22^b42^b24^b44^b25^b45^b26^b46)
	m58 =strassenItmod2( a15^a25,b31^b41^b51^b34^b44^b54^b36^b46^b56)
	m59 =strassenItmod2( a34^a35,b34^b46)
	m60 =strassenItmod2( a21^a22^a23^a24^a25^a26,b13^b63^b65^b16)
	m61 =strassenItmod2( a11^a12^a13^a14^a15^a16,b32^b35)
	m62 =strassenItmod2( a31^a32^a23^a34^a35^a26,b13^b16)
	m63 =strassenItmod2( a32^a23^a33^a34^a26^a36,b62^b13^b23^b63^b64^b65^b16^b26)
	m64 =strassenItmod2( a16^a26,b64)
	m65 =strassenItmod2( a32^a16^a26^a36,b21^b61^b64^b26^b66)
	m66 =strassenItmod2( a35,b12^b52^b14^b34^b15^b55^b16^b46^b56)
	m67 =strassenItmod2( a23^a33^a34^a25,b22^b32^b42^b62^b23^b43^b24^b34^b44^b64^b25^b45)
	m68 =strassenItmod2( a12^a23^a33^a24^a34^a16,b32^b62^b64)
	m69 =strassenItmod2( a23^a25,b32^b62^b33^b63^b34^b64^b36^b66)
	m70 =strassenItmod2( a12^a23^a24,b11^b12^b13^b21^b22^b23^b31^b32^b33^b16^b26^b25^b61^b62^b63^b65^b66^b56^b51^b52^b53^b46^b45^b41^b42^b43^b36^b35)
	m71 =strassenItmod2( a23^a33^a24^a34,b22^b42^b23^b43^b24^b44^b25^b45)
	m72 =strassenItmod2( a12^a24,b15^b25^b35^b45^b55^b65^b16^b26^b66)
	m73 =strassenItmod2( a21^a31^a32^a34^a25^a35,b12^b13^b23^b63^b14^b15^b25^b65)
	m74 =strassenItmod2( a13^a23^a33^a14^a24^a15^a25,b44^b46)
	m75 =strassenItmod2( a12^a23^a24^a16,b61^b62^b63^b35^b66)
	m76 =strassenItmod2( a11^a21^a31^a12^a22^a16^a26^a36,b21^b24)
	m77 =strassenItmod2( a13^a23^a33^a14^a24^a34^a15^a25^a35,b34^b54^b46)
	m78 =strassenItmod2( a13^a23^a15^a25,b31^b34^b36)
	m79 =strassenItmod2( a11^a12,b22^b42^b35^b65)
	m80 =strassenItmod2( a12^a23^a24^a16,b61^b32^b62^b35^b65^b66)
	m81 =strassenItmod2( a23^a33,b12^b22^b32^b42^b52^b62^b13^b23^b33^b43^b53^b63^b14^b24^b34^b44^b54^b64^b15^b25^b35^b45^b55^b65)
	m82 =strassenItmod2( a13^a23^a33^a14^a24^a34,b41^b34^b44^b54^b46)
	m83 =strassenItmod2( a12,b25^b35^b45^b65)
	m84 =strassenItmod2( a32^a34,b12^b22^b62^b13^b23^b63^b14^b24^b64^b15^b25^b65)
	m85 =strassenItmod2( a23^a24,b21^b41^b22^b42^b23^b43^b25^b35^b45^b65^b26^b46)
	m86 =strassenItmod2( a21^a32^a33^a34^a25^a36,b63^b65)
	
c11 = m51^m52^m54^m55^m57^m67^m68^m69^m70^m71^m16^m13^m7^m8^m45^m47^m78^m79^m80^m83^m85^m74^m34^m38^m31^m33^m24
	c12 = m15^m21^m29^m33^m36^m47^m48^m51^m52^m61^m79
	c13 = m51^m52^m56^m57^m58^m61^m69^m16^m18^m13^m4^m11^m41^m78^m80^m81^m82^m83^m72^m75^m40^m35^m37^m38^m31
	c14 = m3^m8^m11^m18^m33^m41^m43^m47^m49^m51^m52^m55^m56^m57^m66^m67^m68^m71^m79^m82
	c15 = m21^m29^m36^m51^m52^m83
	c16 = m4^m8^m11^m18^m24^m34^m41^m45^m51^m52^m54^m55^m56^m58^m67^m68^m71^m72^m74^m81^m82^m83
	c21 = m51^m52^m55^m57^m64^m67^m68^m69^m70^m71^m19^m16^m12^m7^m45^m47^m76^m79^m83^m85^m38^m31^m33^m28^m22
	c22 = m3^m6^m10^m22^m32^m33^m43^m47^m49^m50^m51^m52^m53^m55^m63^m64^m66^m75^m79^m80^m86
	c23 = m50^m51^m52^m55^m56^m57^m60^m63^m65^m69^m19^m12^m13^m14^m1^m4^m5^m10^m11^m42^m76^m81^m83^m86^m72^m75^m32^m28^m22
	c24 = m3^m11^m22^m31^m32^m33^m43^m47^m49^m51^m52^m55^m56^m57^m64^m66^m67^m68^m71^m79
	c25 = m50^m51^m52^m53^m55^m62^m63^m65^m19^m12^m14^m1^m5^m10^m42^m76^m83^m86^m72^m73^m75^m32^m28^m30^m22^m23
	c26 = m51^m52^m55^m56^m65^m67^m68^m71^m19^m12^m13^m14^m1^m4^m11^m42^m45^m76^m80^m81^m83^m72^m31^m32^m28^m22
	c31 = m12^m13^m19^m20^m24^m26^m34^m41^m46^m59^m64^m65^m78^m80
	c32 = m3^m14^m17^m19^m20^m25^m26^m27^m39^m49^m50^m53^m55^m64^m65^m66^m68^m73^m75^m76^m80^m84^m86
	c33 = m1^m2^m3^m4^m5^m9^m12^m13^m18^m20^m24^m27^m44^m50^m59^m62^m63^m66^m67^m68^m69^m74^m75^m77
	c34 = m14^m18^m19^m20^m25^m26^m27^m31^m59^m64^m65^m74^m76^m77
	c35 = m1^m5^m9^m12^m17^m20^m24^m27^m30^m39^m44^m49^m50^m53^m55^m62^m63^m68^m73^m75^m86
	c36 = m1^m3^m12^m13^m20^m24^m27^m31^m59^m80)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def mat223(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b21, b22, b23 = div2x3(b)


	m1 =strassenIt( a21,-b11+b13)
	m2 =strassenIt( a12,b21)
	m3 =strassenIt( -a11+a21+a12-a22,b12)
	m4 =strassenIt( a12-a22,-b21+b23)
	m5 =strassenIt( -2*a11+a21+2*a12-a22,b22+b23)
	m6 =strassenIt( a11,b13)
	m7 =strassenIt( a12,b23)
	m8 =strassenIt( a12-a22,b12+b22)
	m9 =strassenIt( -2*a11+a21,b12+b22+b13+b23)
	m10 =strassenIt( 2*a11-a21-a12+a22,b12+b22+b23)
	m11 =strassenIt( a11,b11+b13)
	
c11 = m2-m6+m11
	c12 = m3+m5-m7+m10
	c13 = m6+m7
	c21 = -m1+m2+m4+2*m6+m8+m9+m10
	c22 = 2*m3+m5-m7-m8+m10
	c23 = 2*m6+m7+m8+m9+m10)

	result = np.concatenate((np.concatenate(c11, c21, c31), axis=0), np.concatenate(c12, c22, c32), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def mat224(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b14, b21, b22, b23, b24 = div2x4(b)


	m1 =strassenIt( -a11+a21+2*a12-2*a22,b12+b13+b14)
	m2 =strassenIt( a11-a12,b12+2*b13)
	m3 =strassenIt( a11-a12,-b11-b13+b14)
	m4 =strassenIt( a12,-2*b11-2*b21+b12+b22+2*b14+2*b24)
	m5 =strassenIt( a21+a12-2*a22,-b21-b12+b24)
	m6 =strassenIt( a21-a22,2*b14+b24)
	m7 =strassenIt( a11-a21-2*a12+2*a22,b11+b13)
	m8 =strassenIt( a12,-b11-b21+b12+b22+b13+b23+b14+b24)
	m9 =strassenIt( -a21+a22,2*b11+b21+2*b14+b24)
	m10 =strassenIt( -a12+a22,-4*b11-2*b21+2*b12+b22-2*b13-b23+2*b14+b24)
	m11 =strassenIt( -a12+a22,2*b11+b21+2*b13+b23)
	m12 =strassenIt( -a21+2*a22,-b11-b21+b14+b24)
	m13 =strassenIt( -a21+2*a22,b11+b21)
	m14 =strassenIt( a21+a12-2*a22,b11+b21+b12+b13+b14)
	
c11 = -m1-m2-m3+m13+m14
	c12 = -2*m1-m2-2*m3+m4-2*m5-2*m7-2*m12
	c13 = m1+m2+m3-m4+m5+m7+m8+m12
	c14 = m3+m5+m7+m12+m13+m14
	c21 = -m6-m9+m13
	c22 = m4-m5-2*m6-m9+m10+m11-2*m12
	c23 = -m4+m5+m6+m8+m9+m11+m12+m14
	c24 = m6+m12+m13)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x5(a):

	col = len(a)/2
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25)

def mat225(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25 = div2x5(b)


	m1 =strassenIt( a11+a21+a12,-2*b12+b13-2*b14+b15)
	m2 =strassenIt( -a11-a12,-b11-b14+b15)
	m3 =strassenIt( -a12-a22,-b24+b25)
	m4 =strassenIt( a12,2*b12+b22-b13+b23+2*b14+b24-b15+b25)
	m5 =strassenIt( a22,b22+b23+b24+b25)
	m6 =strassenIt( a12,b11-b21-b12+b22+b14-b24-b15+b25)
	m7 =strassenIt( a21-a12,-b11+b21+b12-b14+b24+b15)
	m8 =strassenIt( -a11-a12,b12)
	m9 =strassenIt( -a21+a12,b12+b22+b24+b25)
	m10 =strassenIt( -a11-a21,-b14+b15)
	m11 =strassenIt( a12,-b11+b21+2*b12+b22-b13+b23+b14+2*b24)
	m12 =strassenIt( a21,b22+b13+b24+b25)
	m13 =strassenIt( a21,-2*b11+2*b21+b12+b22+2*b13-b14+3*b24+b15+b25)
	m14 =strassenIt( a21+a22,b22+b24+b25)
	m15 =strassenIt( -a12-a22,b22+b24)
	m16 =strassenIt( a21,-b11+b21+b12+b13+b24+b15)
	m17 =strassenIt( a21+a22,b21+b24)
	m18 =strassenIt( a11+a21,b12+b15)
	
c11 = m2+m6-2*m7-m9-m10-2*m12+m13
	c12 = -m4+m6-m8+m11
	c13 = m1+m4-m8-m9+2*m10-m12+m18
	c14 = -m6+m7+m8+m9+m10+m12-m16+m18
	c15 = m4-m7+m8-m11-m12+m13-m16+m18
	c21 = -m3-m6+m7+2*m12-m13-m14-m15+m17
	c22 = -m3+m4-m6-m9-m11-m14-2*m15
	c23 = m5+m12-m14
	c24 = m3+m6-m7-m12+m14+m15+m16
	c25 = -m4+m7+m9+m11+m12-m13+m14+m15+m16)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x2(a):

	col = len(a)/2
	row = len(a[1])/2

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]

	return (a11, a12, 
	  a21, a22)

def div2x6(a):

	col = len(a)/2
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26)

def mat226mod2(a,b):

	a11, a12, a21, a22 = div2x2(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26 = div2x6(b)


	m1 =strassenItmod2( a21,b15^b25^b16^b26)
	m2 =strassenItmod2( a12^a22,b22)
	m3 =strassenItmod2( a21,b11^b21^b13^b23^b14^b24^b15^b25^b16^b26)
	m4 =strassenItmod2( a21^a12,b11^b21^b12^b14^b24)
	m5 =strassenItmod2( a12,b11^b21^b13^b23^b14^b24^b16^b26)
	m6 =strassenItmod2( a12,b14^b24^b16^b26)
	m7 =strassenItmod2( a11^a12,b14^b16)
	m8 =strassenItmod2( a11^a21,b11)
	m9 =strassenItmod2( a12^a22,b21^b25)
	m10 =strassenItmod2( a12,b12^b22^b13^b23^b16^b26)
	m11 =strassenItmod2( a11^a21,b11^b12^b15)
	m12 =strassenItmod2( a21^a22,b21^b24^b25^b26)
	m13 =strassenItmod2( a21^a22,b21^b24)
	m14 =strassenItmod2( a21,b11^b21^b14^b24)
	m15 =strassenItmod2( a12^a22,b21^b22)
	m16 =strassenItmod2( a11^a21,b11^b15)
	m17 =strassenItmod2( a11^a12,b11^b13)
	m18 =strassenItmod2( a21^a12,b21^b14^b24^b25^b16^b26)
	m19 =strassenItmod2( a11^a12,b12^b13^b16)
	m20 =strassenItmod2( a21^a12,b12^b13^b23^b25^b16^b26)
	m21 =strassenItmod2( a21^a22,b21^b23^b24^b25^b26)
	
c11 = m1^m3^m4^m5^m6^m8^m14^m18^m20
	c12 = m4^m5^m10^m11^m14^m16
	c13 = m1^m3^m4^m8^m14^m17^m18^m20
	c14 = m1^m3^m5^m6^m7^m8^m11^m16^m17^m18^m19^m20
	c15 = m3^m4^m5^m8^m16^m20
	c16 = m1^m3^m5^m8^m11^m16^m17^m18^m19^m20
	c21 = m1^m2^m3^m4^m5^m6^m14^m15^m18^m20
	c22 = m2^m4^m5^m10^m14
	c23 = m1^m3^m12^m14^m21
	c24 = m1^m2^m3^m4^m5^m6^m13^m15^m18^m20
	c25 = m2^m3^m4^m5^m9^m15^m20
	c26 = m1^m2^m3^m4^m5^m9^m12^m13^m15^m20)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def mat233(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b21, b22, b23, b31, b32, b33 = div3x3(b)


	m1 =strassenIt( a11+a12,b13)
	m2 =strassenIt( -a11+a21+a22+a13-a23,-b11+b21+b12)
	m3 =strassenIt( a11-a21+a12-a22-a13+a23,b21+b13)
	m4 =strassenIt( a12-a22-a13+a23,-b13+b23)
	m5 =strassenIt( a11-a21-a13+a23,-b11+b21)
	m6 =strassenIt( a22,b11-b21+b22+b32)
	m7 =strassenIt( a12,b22-b13+b23)
	m8 =strassenIt( a22-a23,b12+b32)
	m9 =strassenIt( a11-a13,b12)
	m10 =strassenIt( -a22-a13+a23,b12+b32+b13-b23)
	m11 =strassenIt( -a13+a23,b11+b31+b23+b33)
	m12 =strassenIt( -a21-a22,b11+b31)
	m13 =strassenIt( a13,b12+b32+b33)
	m14 =strassenIt( -a21-a22+a23,b31+b12)
	m15 =strassenIt( a21+a22+a13-a23,b11+b31+b13)
	
c11 = -m1+m2+m3+m9+m14+m15
	c12 = -m4+m7-m8+m9-m10
	c13 = m1+m4+m8+m10+m13
	c21 = m2+m5+m9-m12+m14
	c22 = m2+m5+m6-m8+m9
	c23 = m8+m10+m11+m12+m13+m15)

	result = np.concatenate((np.concatenate(c11, c21, c31), axis=0), np.concatenate(c12, c22, c32), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def mat234(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34 = div3x4(b)


	m1 =strassenIt( a11-a13,-b12+b13)
	m2 =strassenIt( a11-a21,-b11-b12+b13)
	m3 =strassenIt( -a12-2*a13,-b22+b23)
	m4 =strassenIt( -a22-a13-a23,b11-b21+b31+b22-b23)
	m5 =strassenIt( a13,b22+b13-2*b23+b33)
	m6 =strassenIt( -a11-a22+a13-a23,b11+b22-b13)
	m7 =strassenIt( -a11+a13,-b12+b22)
	m8 =strassenIt( a11-a21-a13+a23,-2*b11+b21-b22+b13-b14+b24)
	m9 =strassenIt( -a13+a23,b21-b31+b22-b32-b23+b33)
	m10 =strassenIt( a11-a21+a12-a22+a13-a23,b21-b22+b24)
	m11 =strassenIt( a13,b12+b32+b13-2*b23+b33)
	m12 =strassenIt( -a21-a22+a13-a23,b11-2*b21+b31+b22+b14-2*b24+b34)
	m13 =strassenIt( -a22-2*a23,2*b11-2*b21+b31+b22-b13+b14-b24)
	m14 =strassenIt( a21+a22+a23,2*b11-2*b21+b31+b22-b13+2*b14-2*b24+b34)
	m15 =strassenIt( a12-a22+a13-a23,-b21-b22+b23)
	m16 =strassenIt( a13-a23,2*b11-b21+3*b22-2*b32-b13-b23+b33+b14-2*b24+b34)
	m17 =strassenIt( -a21-a22,2*b11-2*b21+b31+b22-b13+b14-2*b24+b34)
	m18 =strassenIt( a22+a23,2*b11-2*b21+b31+b22-b13)
	m19 =strassenIt( -a11+a21+a22+a13+a23,-b11+b21-b22+b13-b14+b24)
	m20 =strassenIt( a11+a12,b22)
	
c11 = m1-m3-m4-m6+m7-m15-m18
	c12 = -m5+m7+m11+m20
	c13 = m1-m3+m5+m7+m20
	c14 = m3+m4+m6+m10+m12+m14+m15+m18+m19+m20
	c21 = m1-m6+m7+m8-m13-m18+m19
	c22 = m2-m5-m6+m7+m9+m11-m12+m16+m17
	c23 = m1+m4+m5-m6+m7+m8+2*m9-m12-m13+m16+m17+m19
	c24 = m13+m14+m17+m18)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def mat235(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35 = div3x5(b)


	m1 =strassenIt( -a11-a13,-b12-b22+b14+b24)
	m2 =strassenIt( a11-a12-a13,-b21-b12-b22+b24+b25)
	m3 =strassenIt( -a11+a22+a13,-b11-b21-b13+b15+b25)
	m4 =strassenIt( a12-a22,b23)
	m5 =strassenIt( -a12-a13,b12+b22)
	m6 =strassenIt( a11-a13,-b11-b21+b15+b25)
	m7 =strassenIt( a13,-b11-b31+b12+b32-b14-2*b24+b34+b15+b35)
	m8 =strassenIt( a21+a23,-b22+b32-b25+b35)
	m9 =strassenIt( a21,-b22+b32-b15-b25+b35)
	m10 =strassenIt( a11-a21-a12+a22-a13+a23,b22+b25)
	m11 =strassenIt( a13,-b11-b31+b12+b22-b14-2*b24+b34+b15+b35)
	m12 =strassenIt( -a11+a21+a12-a22,-b22+b24)
	m13 =strassenIt( a13-a23,-b22-b13-b33+b34-b25+b35)
	m14 =strassenIt( a22,-b11-b21-b22+b32-b23+b33+b15+b25)
	m15 =strassenIt( a11-a12-a13,b12)
	m16 =strassenIt( -a11+a21+a13-a23,b13)
	m17 =strassenIt( a21-a22-a13,-b11-b31+b22-b24+b15+b35)
	m18 =strassenIt( -a21+a22,-b11-b31+b15+b35)
	m19 =strassenIt( -a22-a23,-b22+b32+b13+b33-b25)
	m20 =strassenIt( -a13+a23,-b22+b34-b25+b35)
	m21 =strassenIt( a21+a13,-b12-2*b22+b32+b14+b24-b25+b35)
	m22 =strassenIt( a21-a22-a23,-b31+b13+b35)
	m23 =strassenIt( a22+a13,-b22+b32+b13+b33)
	m24 =strassenIt( a11-a21,b14+b24+b15+b25)
	m25 =strassenIt( -a11+a21+a12+a13,b12+b22+b25)
	
c11 = m1+m2+m5-m6-m7-m9+m11+m12+m15+m17+m18+m21+m24+m25
	c12 = -m5+m7-m11+m15
	c13 = m3+m4+m6-m7+m11-m14+m23
	c14 = -m1-m5+m11+m12+m15+m17+m18
	c15 = m1+m5-m7-m9+m11+m21+m24+m25
	c21 = -m3-m6-m7+m8-m9+m11+m13-m16+m18+m19+m20+m22+m23
	c22 = m7+m10-m11-m13+m15-m19-m20-m23+m25
	c23 = m3+m6-m7+m11+m13-m14+m16+m20+m23
	c24 = -m8+m10+m11-m13+m15+m17+m18-m19+m21-m23+m25
	c25 = -m7+m8-m9+m11+m13+m19+m20+m23)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x3(a):

	col = len(a)/2
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]

	return (a11, a12, a13, 
	  a21, a22, a23)

def div3x6(a):

	col = len(a)/3
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36)

def mat236mod2(a,b):

	a11, a12, a13, a21, a22, a23 = div2x3(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36 = div3x6(b)


	m1 =strassenItmod2( a11^a21,b15^b25^b35)
	m2 =strassenItmod2( a13,b21^b31^b22^b32^b23^b33^b24^b34^b25^b35^b26^b36)
	m3 =strassenItmod2( a13^a23,b11^b21^b31^b12^b22^b32^b14^b24^b34^b15^b25^b35^b16^b26^b36)
	m4 =strassenItmod2( a11^a13,b25^b35)
	m5 =strassenItmod2( a21^a22^a23,b31^b32^b13^b23^b15^b25^b35^b16^b26)
	m6 =strassenItmod2( a12^a13,b11^b21^b22^b32^b23^b33^b26^b36)
	m7 =strassenItmod2( a21^a12^a22^a13,b11^b21^b12^b22^b14^b24^b15^b35^b16^b26)
	m8 =strassenItmod2( a21^a23,b11^b21^b12^b22^b13^b23^b14^b24)
	m9 =strassenItmod2( a13,b21^b31^b22^b32^b23^b33^b26^b36)
	m10 =strassenItmod2( a21^a22^a13,b11^b12^b23^b33^b14^b15^b16)
	m11 =strassenItmod2( a21^a22,b21^b31^b22^b32^b13^b23^b15^b35^b16^b26)
	m12 =strassenItmod2( a21^a22^a13,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b25^b35)
	m13 =strassenItmod2( a11^a21,b12^b22^b32^b13^b23^b33^b16^b26^b36)
	m14 =strassenItmod2( a13^a23,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34)
	m15 =strassenItmod2( a11^a21^a12^a22,b22^b32^b13^b23^b33^b15^b25^b35^b16^b26^b36)
	m16 =strassenItmod2( a12^a22^a13^a23,b32^b13^b23^b33^b15^b25^b35^b16^b26^b36)
	m17 =strassenItmod2( a11^a13,b22^b32^b23^b33^b26^b36)
	m18 =strassenItmod2( a21,b11^b21^b12^b22^b13^b23^b16^b26)
	m19 =strassenItmod2( a11^a21^a12^a22,b11^b12^b14^b15^b25^b35^b16)
	m20 =strassenItmod2( a21^a22,b11^b21^b12^b22^b23^b33^b14^b24^b15^b25^b16^b26)
	m21 =strassenItmod2( a21^a12^a22^a13,b11^b21^b12^b32^b13^b33^b14^b24^b26^b36)
	m22 =strassenItmod2( a21^a23,b11^b21^b12^b22^b14^b24^b15^b25^b16^b26)
	m23 =strassenItmod2( a21^a12^a13,b12^b22^b32^b13^b23^b33^b14^b24^b35^b16^b26^b36)
	m24 =strassenItmod2( a21,b14^b24^b15^b25)
	m25 =strassenItmod2( a12^a13,b12^b32^b13^b33^b14^b24^b25^b35^b16^b36)
	m26 =strassenItmod2( a11^a12^a13,b12^b22^b32^b13^b23^b33^b14^b25^b35^b16^b26^b36)
	m27 =strassenItmod2( a12^a22^a13^a23,b11^b21^b12^b22^b14^b24^b15^b25^b35^b16^b26)
	m28 =strassenItmod2( a21^a12^a13,b11^b21^b32^b33^b36)
	m29 =strassenItmod2( a11^a12^a13,b11^b22^b32^b23^b33^b26^b36)
	m30 =strassenItmod2( a21^a22^a23,b11^b21^b12^b22^b33^b14^b24^b15^b25^b16^b26)
	
c11 = m6^m9^m17^m29
	c12 = m1^m7^m9^m10^m11^m12^m13^m15^m21^m23^m24^m25
	c13 = m1^m4^m7^m10^m18^m19^m20^m23^m24^m26^m28^m29
	c14 = m2^m4^m6^m9^m13^m18^m25^m26^m28
	c15 = m1^m4^m6^m18^m23^m24^m25^m28
	c16 = m4^m6^m9^m11^m12^m15^m17^m19^m20^m21^m25^m26^m29
	c21 = m3^m5^m6^m8^m9^m10^m12^m14^m16^m21^m27^m28
	c22 = m3^m7^m9^m10^m11^m12^m14^m16^m21^m23^m24^m25
	c23 = m18^m20^m22^m24^m30
	c24 = m2^m5^m6^m7^m9^m12^m14^m18^m22^m23^m25^m27^m28^m30
	c25 = m6^m7^m18^m22^m23^m24^m25^m27^m28
	c26 = m3^m6^m7^m8^m9^m10^m11^m12^m14^m20^m22^m23^m25^m27^m28^m30)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def mat244(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24 = div2x4(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44 = div4x4(b)


	m1 =strassenIt( -a11-a21+a12+a22-a13-a23+a14+a24,b21+b22)
	m2 =strassenIt( a21+a12+2*a22+2*a23-a14-3*a24,-3*b12-b22+2*b32-b13+b33+3*b14+b24-2*b34)
	m3 =strassenIt( 2*a11+a21-a22+3*a13+a23-3*a14-a24,b11-b31+3*b12-2*b32-2*b14+b34)
	m4 =strassenIt( -a21-2*a22-2*a23+3*a24,-3*b12-b22+2*b32+3*b14+b24-2*b34)
	m5 =strassenIt( -a21-a23+a24,3*b11+b21-2*b31+3*b12+b22-2*b32+b13+b23+b43-3*b14-b24+2*b34)
	m6 =strassenIt( -a11-a13,3*b11+b21-2*b31+3*b12+b22-2*b32)
	m7 =strassenIt( a11-a12+a13,-3*b11-b21+2*b31-3*b12-b22+2*b32-2*b13+b33+3*b14-2*b34)
	m8 =strassenIt( a21+a22+2*a23-3*a24,-3*b12-b22+b32-b42+2*b14+b24+b44)
	m9 =strassenIt( -a12+a14,3*b11+b21-2*b31+3*b13+b23-2*b33)
	m10 =strassenIt( a21+a23-a14-a24,3*b11+b21-2*b31+3*b12+b22-2*b32+b13+b23+b43)
	m11 =strassenIt( a21+a12+a23-a14-a24,-3*b11-b21+2*b31-3*b12-b22+2*b32-2*b13+b33+3*b14+b24-2*b34)
	m12 =strassenIt( 2*a11+a21+a22+3*a13+2*a23-3*a14-3*a24,-b14+b34)
	m13 =strassenIt( 2*a11+2*a21+3*a13+3*a23-3*a14-3*a24,-b11+b31-b12+b32)
	m14 =strassenIt( -a21-a22-2*a23+a14+3*a24,-3*b12-b22+b32-b42+3*b14+b24-b34+b44)
	m15 =strassenIt( -a11-a12-2*a13+2*a14,3*b12-2*b32-b13+b33-3*b14+2*b34)
	m16 =strassenIt( -a11-a21-a13-a23+a14+a24,-3*b11-b21+2*b31-3*b12-b22+2*b32-2*b13+b33)
	m17 =strassenIt( a11+a21+2*a12+2*a22+2*a13+2*a23-3*a14-3*a24,-b13+b33)
	m18 =strassenIt( a21-a22+a23,-b31-b41-b32-b42-b13-b23-b43-b14+2*b34+b44)
	m19 =strassenIt( a21-a22+a23-a24,-b11-b21-b41-3*b12-b22+b32-b42-b13-b23-b43+2*b14+b24+b44)
	m20 =strassenIt( a14,3*b11+b21-2*b31+6*b12+2*b22-3*b32+b42+b13+b23+b43-3*b14-2*b24-2*b44)
	m21 =strassenIt( a12+a22-a14-a24,2*b13+b23-2*b33)
	m22 =strassenIt( -a21+a22-a23+a14+a24,-b31-b41-b32-b42-b13-b23-b43+b24+b34+b44)
	m23 =strassenIt( -a21-a22-2*a23+2*a24,-b11+b31-b32-b42-b14+2*b34+b44)
	m24 =strassenIt( 2*a11+3*a13-3*a14,-2*b12+b32+b14)
	m25 =strassenIt( a21+a23,b13+b23+b43)
	m26 =strassenIt( a14+a24,b31+b41+b32+b42+b13+b23+b43)
	
c11 = m1+m2-m3+m4+m5-m6-m7+m8+m10-m11-m12+m14-m15-m16-m17-m19-m22
	c12 = -m2-m4-m5+m7-2*m8-m10+m11+2*m12-2*m14+m15+m16+m17-m20-m24
	c13 = -m2-m4-m5+m6-m9-m10+m11+m16+m17
	c14 = -m5+m7-m8-m10+m11+m12-m14+m16-m20
	c21 = -m4-m5-m8-m18+m19-m23-m25
	c22 = m3+m4+m5+2*m8+m10-m12+m13+m14+m18+m20+m22+m23+m24+m26
	c23 = m2+m4+m5+m9-m11+m21+m25
	c24 = m5+m8+m10+m14+m18+m20+m22+m26)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0)), axis=1)

	return result



def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def mat245(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24 = div2x4(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45 = div4x5(b)


	m1 =strassenIt( -a12+a13,-b11+b31+2*b13-2*b33-2*b14+2*b34)
	m2 =strassenIt( -a21-a12+a22-a23+a14,b24+b34+b25)
	m3 =strassenIt( a22,-b22+b23+b25)
	m4 =strassenIt( a12-a13,-b11-b21+b31+2*b13+b23-2*b33-2*b14+2*b34)
	m5 =strassenIt( a13-a23,b11-b41+b22+b32+b42-2*b13+b43+2*b14+b24+b34+b44-b35)
	m6 =strassenIt( -a11-a13,-b21-b31+b23+b33+b35)
	m7 =strassenIt( a11-a21-a12+a22+a13-a23,-b21+b23+b34)
	m8 =strassenIt( -a11+a21-a22+a23,-b21+b23-b14+b34)
	m9 =strassenIt( -a12+a22,b24+b34+b44)
	m10 =strassenIt( -a11+a21-a14+a24,b11-b41-2*b13+b43+2*b14-b35)
	m11 =strassenIt( a11+a13,b11-2*b13+2*b14)
	m12 =strassenIt( -a21-a23,b12-b13+b24+b34+b25)
	m13 =strassenIt( -a12+a22+a14-a24,b11-b41+b42-2*b13+b43+2*b14+b44-b35)
	m14 =strassenIt( a11,b11-b21-b31-b13+b23+b33-b15+b35)
	m15 =strassenIt( a24,b42-b43+b44)
	m16 =strassenIt( a21+a13-a14+a24,-b11+2*b13-2*b14+b35)
	m17 =strassenIt( a23,b12-b32-b13+b33)
	m18 =strassenIt( a14,-b11+b21+b31+2*b13-2*b23-2*b33-b43-2*b14+b25+b45)
	m19 =strassenIt( a12-a14,-b11+b21+b31-b22+2*b13-b23-2*b33-2*b14+2*b24+2*b34+3*b25)
	m20 =strassenIt( -a21+a22-a23,-b14+b24+b34+b25)
	m21 =strassenIt( -a12+a22+a13-a23,b11-b21-b41+b22+b42-2*b13+b23+b43+2*b14+b24+3*b34+b44-b35)
	m22 =strassenIt( -a11-a23,-b21-b31-b12+b13+b23+b33+b35)
	m23 =strassenIt( -a11+a21,b11+b21-b41+b12-2*b13-b23+b43+b14-b34-b35)
	m24 =strassenIt( a24,-b42+b43-b15+b35+b45)
	m25 =strassenIt( a11-a21-a24,-b41+b43+b15-b35)
	m26 =strassenIt( a12-a22-a14+a24,b11-b41+b42-2*b13+b43+2*b14-b35)
	m27 =strassenIt( a14,-b41+b43+b24+b34+b44+b25+b45)
	m28 =strassenIt( -a21-a24,-b15+b35)
	m29 =strassenIt( -a12+a14,-b11+b21+b31-2*b22+2*b13-2*b33-2*b14+2*b24+2*b34+3*b25)
	m30 =strassenIt( -a13+a23+a14,b11-b21-b31-b41+b22+b42-2*b13+b23+2*b33+b43+2*b14+b24+b34+b44)
	m31 =strassenIt( a12-a22-a14,-b22+b23+b24+b34+b44+b25)
	m32 =strassenIt( -a22+a23,-b14+b34)
	m33 =strassenIt( a21+a23,b24+b34+b25+b35)
	
c11 = -m1-2*m2+m3+2*m6+2*m7+2*m8+m9+2*m10+m11+2*m14+2*m16-m18-m19+2*m20+2*m25+m27+2*m28+m31
	c12 = -2*m2+m3+m4+m5+2*m7+2*m8+m9+m10+m14+m16-m17+2*m20+m22+m25+m28+m29+m30+m31
	c13 = -2*m2+m3+m4+m6+2*m7+2*m8+m9+m10+m14+m16-m18-m19+2*m20+m25+m27+m28+m31
	c14 = m1-m2-m3+m4+m7+m8-m9-m19+m20-m29-m31
	c15 = m3+m9+m10+m11+m16+m19+m25+m27+m28+m29+m31
	c21 = -m1-3*m2+m3+2*m8+2*m12-m13+2*m14-m15+m16-m19+2*m20+m21+2*m22+2*m23+2*m25+2*m28+m30+m33
	c22 = -m1-2*m2+m3+m8+m14+m16-m17+2*m20+m21+m22+m23+m25+m26+m28+m29+m30+m31+m32
	c23 = -m1-3*m2+m3+m8+m12-m13+m14-m15+m16-m19+2*m20+m21+m22+m23+m25+m28+m30+m32
	c24 = -m2-m3-m13-m19+m20-m26-m29-m31+m32
	c25 = m2+m3+m13+m15+m19+m24+m26+m28+m29+m31+m33)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x4(a):

	col = len(a)/2
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24)

def div4x6(a):

	col = len(a)/4
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46)

def mat246mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24 = div2x4(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46 = div4x6(b)


	m1 =strassenItmod2( a21^a24,b21^b31^b41^b22^b32^b42^b24^b34^b44^b25^b36^b46)
	m2 =strassenItmod2( a21^a12^a13,b31^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b44^b35)
	m3 =strassenItmod2( a22^a24,b11^b21^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b44^b25^b35^b16^b26^b36^b46)
	m4 =strassenItmod2( a11^a21^a13^a23,b11^b31^b12^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m5 =strassenItmod2( a23^a24,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24^b44^b16^b26^b46)
	m6 =strassenItmod2( a11^a21^a13^a23^a14^a24,b21^b41^b22^b42)
	m7 =strassenItmod2( a11^a21,b11^b21^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b15^b25^b35^b45)
	m8 =strassenItmod2( a23,b21^b31^b41^b22^b32^b42)
	m9 =strassenItmod2( a13,b11^b31^b41)
	m10 =strassenItmod2( a11^a21^a13,b21^b31^b41^b12^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m11 =strassenItmod2( a21^a12^a13^a24,b22^b32^b42^b24^b34^b44^b25^b26)
	m12 =strassenItmod2( a12^a22^a13^a23,b11^b21^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b44^b35^b16^b26^b46)
	m13 =strassenItmod2( a21^a24,b21^b31^b41^b23^b33^b43^b24^b34^b44^b35^b45^b26)
	m14 =strassenItmod2( a12^a22^a13^a14^a24,b11^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m15 =strassenItmod2( a12^a13^a14,b11^b21^b12^b22^b32^b42^b13^b23^b33^b43^b14^b25^b35^b45^b16^b26^b36^b46)
	m16 =strassenItmod2( a21^a22^a23,b11^b21^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b44^b35^b16^b26^b36^b46)
	m17 =strassenItmod2( a13^a14,b11^b31^b41^b12^b22^b32^b13^b23^b33^b14^b25^b35^b16)
	m18 =strassenItmod2( a11^a21,b21^b41^b12^b32^b14^b24^b34^b44^b15^b25^b35^b45^b16^b26^b36^b46)
	m19 =strassenItmod2( a21,b11^b21^b41^b14^b24^b44^b15^b25^b45)
	m20 =strassenItmod2( a11^a12^a13,b11^b21^b31^b22^b44^b45^b16^b26^b36^b46)
	m21 =strassenItmod2( a12^a22^a14^a24,b24^b34^b25^b35^b26^b36)
	m22 =strassenItmod2( a12^a22^a14^a24,b11^b21^b31^b41^b12^b32^b42^b13^b23^b33^b43^b14^b44^b25^b35^b16^b46)
	m23 =strassenItmod2( a22^a24,b11^b21^b41^b12^b32^b42^b13^b33^b43^b14^b24^b44^b25^b35^b16^b36^b46)
	m24 =strassenItmod2( a13^a14,b12^b22^b42^b15^b45^b16^b46)
	m25 =strassenItmod2( a11^a13^a14,b21^b31^b12^b32^b42^b24^b34^b15^b45^b16^b26^b36^b46)
	m26 =strassenItmod2( a11^a21^a13^a24,b11^b21^b41^b12^b13^b14^b16)
	m27 =strassenItmod2( a11^a22^a13^a14^a24,b11^b41^b12^b32^b42^b13^b23^b33^b43^b14^b44^b25^b35^b16^b26^b36^b46)
	m28 =strassenItmod2( a12^a22^a13^a23^a14^a24,b11^b21^b31^b41^b12^b22^b32^b42^b13^b23^b33^b43^b14^b24^b34^b44^b16^b26^b36^b46)
	m29 =strassenItmod2( a12^a13,b21^b31^b12^b22^b13^b33^b43^b14^b34^b35^b26)
	m30 =strassenItmod2( a21^a12^a13^a14^a24,b11^b12^b22^b32^b42^b13^b23^b33^b43^b14^b25^b35^b45^b16^b26^b36^b46)
	m31 =strassenItmod2( a11^a21^a14^a24,b21^b41)
	m32 =strassenItmod2( a21^a22,b21^b31^b41^b22^b42^b33^b34^b25^b35^b26)
	m33 =strassenItmod2( a12^a22^a13^a24,b11^b31^b41^b12^b32^b42^b13^b33^b43^b14^b24^b44^b25^b35^b16^b26^b46)
	m34 =strassenItmod2( a11^a21^a13^a14,b11^b31^b22^b42^b13^b23^b33^b43^b14^b24^b34^b44^b15^b25^b35^b45)
	m35 =strassenItmod2( a11^a13,b12^b13^b14^b16)
	m36 =strassenItmod2( a21^a22^a23^a24,b21^b31^b41^b22^b42^b33^b34^b35)
	m37 =strassenItmod2( a11^a12^a13^a14,b22^b32^b42^b24^b34^b44)
	m38 =strassenItmod2( a21,b21^b31^b41^b12^b13^b23^b33^b43^b14^b24^b34^b44^b15^b25^b35^b45)
	m39 =strassenItmod2( a11^a21^a14^a24,b11^b31^b12^b22^b32^b42^b13^b23^b33^b43^b14^b25^b35^b45^b16)
	
c11 = m1^m9^m13^m15^m26^m30^m31^m35
	c12 = m1^m3^m7^m10^m13^m14^m15^m18^m21^m22^m25^m26^m27^m30^m31^m34^m35^m38
	c13 = m2^m3^m7^m11^m13^m14^m15^m17^m19^m20^m21^m23^m24^m25^m26^m33^m37^m39
	c14 = m1^m2^m3^m10^m13^m14^m15^m18^m19^m21^m23^m24^m26^m29^m30^m31^m33^m34^m35^m37^m38
	c15 = m7^m9^m10^m15^m18^m20^m22^m23^m24^m27^m29^m33^m34^m37^m38
	c16 = m9^m11^m13^m15^m20^m22^m23^m26^m27^m29^m33^m35^m39
	c21 = m1^m4^m8^m10^m13^m14^m15^m26^m28^m30^m35
	c22 = m1^m3^m4^m6^m10^m13^m14^m15^m25^m26^m27^m28^m30^m34^m35^m38
	c23 = m3^m6^m13^m14^m15^m16^m19^m23^m25^m27^m28^m30^m32^m34^m36
	c24 = m1^m2^m3^m4^m5^m10^m11^m12^m13^m14^m15^m19^m23^m26^m28^m29^m30^m32^m33^m35^m36^m38
	c25 = m2^m5^m8^m11^m12^m14^m15^m16^m23^m28^m29^m30^m32^m33^m36^m38
	c26 = m2^m4^m8^m10^m11^m12^m13^m14^m15^m16^m23^m26^m28^m29^m30^m33^m35)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x5(a):

	col = len(a)/2
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25)

def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)

def mat255(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25 = div2x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenIt( -a11+a21+a15-a25,-b12-b22-b32+b14+b24+b34)
	m2 =strassenIt( -a21+a23+a24,b21-b41-2*b12-2*b22-2*b32+2*b42-b52-b24+2*b15+2*b25+2*b35-b45+b55)
	m3 =strassenIt( -a11-a21+a13+a23+a25,-2*b11-b21-2*b31-b51+2*b12+b22+2*b32+b52+2*b13+b23+2*b33+b53)
	m4 =strassenIt( -a21+2*a25,b11+b21+b41+b51-b12-b22-b42-b52-b14-b24-b44-b54+b15+b25+b45+b55)
	m5 =strassenIt( -a11+a21+a13-a23+a15-a25,-2*b11-b21-2*b31-b51+2*b12+b22+2*b32+b52+2*b13+b23+2*b33+b53+2*b14+2*b24+b34+b44+2*b54)
	m6 =strassenIt( -2*a11+a13+2*a15,2*b11+b21+2*b31-b41+b51-2*b12-2*b22-b32-b52-b13-b23-b33+b43-b14-b34-b54+b15+b25+b45+b55)
	m7 =strassenIt( 2*a21-a22-a23-a25,-b12-2*b22-b42-b52+b14+2*b24+b44+b54)
	m8 =strassenIt( 3*a11-a21-a12-2*a13+a23-a14+a24-a15,b21-b41+b42-b24)
	m9 =strassenIt( -a21+a22+a23+a24-a25,b21-b22-b24+b25)
	m10 =strassenIt( a11-a13,-2*b11-b21-2*b31-b41-b51+b12+2*b32+3*b13+2*b23+2*b33+2*b43+2*b53+b15+b25+b45+b55)
	m11 =strassenIt( -3*a21+a22+2*a23+a25,-b12-b22-b42-b52+b14+b24+b44+b54)
	m12 =strassenIt( a11-a21+a23+a24-a15,b21-b41-2*b12-2*b22-2*b32+b42-b52-b24+b44+2*b15+2*b25+2*b35-b45+b55)
	m13 =strassenIt( -a11+a21+a12-a22,-b12-b32-b52-b14-2*b24-b44-b54+2*b15+b25+2*b35+b55)
	m14 =strassenIt( -a11+a15,2*b11+2*b21+2*b31-b41+b51-2*b12-2*b22-2*b32+b42-b52-2*b14-2*b24-2*b34+b44-b54+2*b15+2*b25+2*b35-b45+b55)
	m15 =strassenIt( a13+a14-a15,b21-b41-b12-b22-b32+b42-b52-b24+b44+2*b15+2*b25+2*b35-b45+b55)
	m16 =strassenIt( a11-a21-a13+a23-a14+a24,b21-b41-b24+b44)
	m17 =strassenIt( a11-2*a21-a12+a22+a23-a24+a25,b21-b41-b12-b22-b32+b42-b52-b24+2*b15+2*b25+2*b35-b45+b55)
	m18 =strassenIt( -a11+3*a21-a22+a13-2*a23-a25,b21-b41-b12-2*b22-b52-b23+b43+b14+b24+b44+b54)
	m19 =strassenIt( -3*a11+3*a21+a12-a22+2*a13-2*a23+a14-a24+a15-a25,b32-b42-b35+b45)
	m20 =strassenIt( -a23-a24+a25,-2*b12-b22-2*b32-b52+2*b15+b25+2*b35+b55)
	m21 =strassenIt( 3*a11-a21-a12+a22-2*a13+a23-a14+a24-a15-a25,-b21+b32-b42+b24-b35+b45)
	m22 =strassenIt( -a11-a21+a13+2*a25,2*b11+2*b21+b31+b51-2*b12-2*b22-b32-b52-b13-b23-b33+b43-b14-b24-b44-b54+b15+b25+b45+b55)
	m23 =strassenIt( 2*a11-2*a13-a15,-2*b11-2*b31-b41-b51+b12+b32+b42+2*b13+b23+2*b33+b53+b14+b44+b54+2*b15+2*b25+2*b35-b45+b55)
	m24 =strassenIt( 3*a11-3*a21-a12+a22-2*a13+2*a23-a15+a25,2*b21-2*b41-b12-2*b22-b32+2*b42-b52-b23+b43+b14+b44+b54+2*b15+2*b25+2*b35-b45+b55)
	m25 =strassenIt( -3*a11+a12+2*a13+a14+a15,-b41-b12-b22-b52+b15+b25+b45+b55)
	m26 =strassenIt( -a11+a13-a14+a15,b21-b41-b12-b22-b32+b42-b52-b24+2*b15+2*b25+2*b35-b45+b55)
	m27 =strassenIt( a11-a21-2*a15+2*a25,b11+b21+b31-b41-2*b12-2*b22-b32-b52-b13-b23-b33+b43+b15+b25+b45+b55)
	m28 =strassenIt( -a11+3*a21+a12-a22-2*a23-a25,b21-b41-b12-b22-b32+b42-b52+b14+b44+b54+2*b15+2*b25+2*b35-b45+b55)
	m29 =strassenIt( -a11-a21+a12+a23+a25,b12+b32+b52+b14+2*b24+b44+b54)
	m30 =strassenIt( -a11+a21+a13-a23,-2*b11-3*b21-b31+b41-b51+2*b12+3*b22+b32-b42+b52+2*b13+3*b23+b33-b43+b53)
	m31 =strassenIt( -a11+a21+a12-a22+a13-a23+a14-a24-a15+a25,-b41-b12-b22-b52+b43+2*b15+2*b25+b35+b45+b55)
	m32 =strassenIt( a21-a23-a25,-2*b11-b21-2*b31-b51+2*b12+b22+2*b32+b52)
	m33 =strassenIt( -2*a21+a23+2*a25,-2*b11-b21-b31-b41-b51+b12+b22+b42+b14+b44+b54+b35-b45)
	m34 =strassenIt( 2*a11-a12-2*a13-a14+a15,-b41-b12-b22-b52+b43+b15+b25+b45+b55)
	m35 =strassenIt( 3*a11-a21-a12-2*a13-a14-a15+2*a25,-b12-b22-b42-b52+b15+b25+b45+b55)
	m36 =strassenIt( -a11-a21+a22+a13+a23+a24-a25,-b41+b42+b43)
	m37 =strassenIt( a11-a21-a12+a22+a23+a24-a25,-b12-b32-b52+2*b15+b25+2*b35+b55)
	m38 =strassenIt( -2*a11+a12+a13+a15,b12+b32+b52-b23+b43+b14+2*b24+b44+b54)
	m39 =strassenIt( -a11-a21+a23+a15+a25,-2*b11-b21-2*b31-b51+b12+b22+b32+b14+b34+b54)
	m40 =strassenIt( a11-a12,b12+b32+b52+b14+b24+b44+b54)
	
c11 = m2+m3+m4+m5+m6-m8-m12+m15+m16-m22+m23-m25+m26+m27+m29+m32-m35+m39+m40
	c12 = m2-m8+m11-m12+m15+m16+m18+m24+m26+m28+m38+m40
	c13 = m3+m5+m6+m10-m25+m29+m32-m34-m38+m39
	c14 = m3+m5+m14+m15+m23+m26+m29+m32+m39+m40
	c15 = m9+m11+m18+m21+m24+m25+m26+m28+m31+m34+m36+m37+m38+m40
	c21 = m2+m4-m8+m13+m17-m19+m20-m21-m25+m28+m29+m32+m33-m35+m37+m40
	c22 = m2+m7+m11+m13+m17+m20+m28+m29+m37+m40
	c23 = m3-m7-m8+m10+m18-m19-m21+m22-m25+m30+m32+m33-m35+m36
	c24 = m1+m12+m13+m14+m17+m20+m28+m29+m32+m37+m39+m40
	c25 = m7+m8+m9+m11+m13+m17+m19+m21+m25+m28+m29+m35+m37+m40)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0)), axis=1)

	return result



def div2x5(a):

	col = len(a)/2
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25)

def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def mat256mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25 = div2x5(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56 = div5x6(b)


	m1 =strassenItmod2( a11^a12^a15,b11^b21^b31^b51^b16^b26^b36^b56)
	m2 =strassenItmod2( a21^a24,b13^b23^b33^b53^b14^b24^b34^b54^b15^b25^b35^b55)
	m3 =strassenItmod2( a11^a21^a13^a24^a15,b42^b13^b23^b33^b53^b14^b24^b34^b54^b15^b25^b35^b55)
	m4 =strassenItmod2( a11^a21^a14^a24,b42)
	m5 =strassenItmod2( a11^a21^a13^a23^a15^a25,b21^b31^b41^b51^b12^b22^b42^b13^b43^b14^b44^b16^b46^b56)
	m6 =strassenItmod2( a21^a22^a24,b13^b23^b43^b53^b24^b15^b25^b45^b55)
	m7 =strassenItmod2( a11^a21,b11^b41^b13^b43^b14^b44)
	m8 =strassenItmod2( a12^a15,b11^b31^b51^b23^b16^b46^b56)
	m9 =strassenItmod2( a11^a13^a23^a15,b21^b31^b41^b51^b12^b22^b13^b43^b24^b34^b44^b54^b16^b46^b56)
	m10 =strassenItmod2( a11^a12^a22^a13^a23^a15,b21^b31^b41^b51^b26^b46^b56)
	m11 =strassenItmod2( a15^a25,b21^b31^b41^b51^b12^b42^b52^b13^b43^b14^b44^b16^b46^b56)
	m12 =strassenItmod2( a21^a12^a22^a24^a15,b41^b43^b24^b44)
	m13 =strassenItmod2( a11^a21^a12^a22^a13^a23^a14^a24^a15^a25,b42^b13^b33^b14^b34^b44^b15^b35^b45)
	m14 =strassenItmod2( a12^a22^a13^a23,b21^b41^b51^b42^b43^b26^b46^b56)
	m15 =strassenItmod2( a22^a23^a24,b13^b43^b53^b15^b45^b55)
	m16 =strassenItmod2( a11^a21^a12^a22^a13^a14^a24^a15,b42^b14^b24^b54)
	m17 =strassenItmod2( a11^a12^a22^a13^a23^a14^a24^a15,b42^b13^b33^b43^b24^b34^b44^b54^b15^b35^b45)
	m18 =strassenItmod2( a23^a25,b12^b42^b52^b13^b53^b14^b24^b54^b16^b46^b56)
	m19 =strassenItmod2( a12^a22^a13^a23^a14^a24,b42^b33^b53^b24^b34^b44^b54^b35^b55)
	m20 =strassenItmod2( a21^a25,b21^b31^b41^b51)
	m21 =strassenItmod2( a21^a24^a25,b43^b24^b44)
	m22 =strassenItmod2( a21^a22^a25,b22)
	m23 =strassenItmod2( a13^a14^a15,b13^b53^b15^b55^b46)
	m24 =strassenItmod2( a21^a15,b21^b31^b41^b51^b13^b43^b14^b44)
	m25 =strassenItmod2( a21^a22^a24,b24)
	m26 =strassenItmod2( a11^a12^a13^a23^a15,b22^b26^b36^b46)
	m27 =strassenItmod2( a13^a23,b21^b31^b41^b51^b12^b32^b42^b13^b43^b14^b44^b16^b26^b36^b56)
	m28 =strassenItmod2( a23,b12^b32^b52^b13^b23^b33^b53^b16^b46^b56)
	m29 =strassenItmod2( a21^a12^a15,b11^b21^b31^b51^b16^b46^b56)
	m30 =strassenItmod2( a11^a21^a12^a22^a14^a24,b46)
	m31 =strassenItmod2( a13^a15,b31^b42^b33^b14^b24^b34^b54)
	m32 =strassenItmod2( a11^a12^a22^a13^a23^a14^a15,b42^b43)
	m33 =strassenItmod2( a11^a12^a13^a15,b13^b23^b43^b53^b15^b25^b45^b55^b36^b46)
	m34 =strassenItmod2( a11^a21^a12^a22^a14^a24,b41^b42^b43^b14^b24^b44^b54)
	m35 =strassenItmod2( a22^a23,b23)
	m36 =strassenItmod2( a11^a21^a12^a22^a13^a24^a15,b13^b23^b43^b53^b15^b25^b45^b55^b46)
	m37 =strassenItmod2( a11^a15,b42^b24^b34^b44^b54)
	m38 =strassenItmod2( a12^a22^a15^a25,b21^b31^b41^b43^b24^b44)
	m39 =strassenItmod2( a15,b13^b23^b33^b53^b14^b24^b34^b54)
	m40 =strassenItmod2( a21,b16^b46^b56)
	m41 =strassenItmod2( a11^a21^a12^a22^a13^a23^a15^a25,b21^b31^b41^b51^b22^b56)
	m42 =strassenItmod2( a11^a15,b21^b31^b41^b51^b13^b43^b14^b44^b26^b46^b56)
	m43 =strassenItmod2( a12^a22^a23^a15,b31^b23)
	m44 =strassenItmod2( a23^a15,b12^b42^b52^b13^b23^b33^b53^b14^b24^b34^b54^b16^b46^b56)
	m45 =strassenItmod2( a23^a24^a25,b42^b13^b33^b43^b53^b14^b24^b34^b54^b15^b35^b45^b55)
	m46 =strassenItmod2( a21^a25,b21^b31^b41^b51^b12^b22^b33^b24^b34^b44^b54^b15^b35^b45^b16^b46^b56)
	m47 =strassenItmod2( a11^a13^a15,b13^b23^b33^b53^b15^b25^b35^b55)
	m48 =strassenItmod2( a11^a14^a15,b41^b42^b43)
	
c11 = m7^m8^m10^m14^m24^m29^m32^m35^m40^m42^m43^m48
	c12 = m1^m2^m3^m4^m7^m9^m24^m26^m27^m28^m29^m39^m40^m44^m47
	c13 = m2^m3^m4^m10^m14^m31^m32^m35^m37^m39^m42^m43^m47
	c14 = m2^m3^m4^m12^m16^m25^m34^m37^m47^m48
	c15 = m2^m3^m4^m6^m10^m14^m15^m17^m19^m23^m25^m30^m31^m32^m35^m36^m39^m42^m43
	c16 = m1^m6^m7^m24^m25^m29^m30^m33^m36^m40^m42
	c21 = m8^m12^m20^m21^m29^m35^m38^m40^m43
	c22 = m2^m3^m5^m9^m11^m22^m24^m28^m39^m40^m44^m47
	c23 = m2^m3^m5^m9^m11^m13^m16^m17^m18^m20^m24^m32^m35^m39^m44^m46^m47
	c24 = m2^m3^m5^m9^m13^m16^m17^m21^m25^m32^m46^m47
	c25 = m2^m6^m11^m13^m15^m16^m17^m18^m20^m24^m25^m32^m35^m39^m44^m45
	c26 = m6^m10^m20^m22^m25^m26^m33^m36^m40^m41)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div2x6(a):

	col = len(a)/2
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26)

def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)

def mat266mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26 = div2x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a23^a26,b12^b22^b62^b14^b24^b64^b16^b26^b66)
	m2 =strassenItmod2( a22^a23,b31^b41^b51^b14^b24^b34^b44^b54^b64^b35^b45^b55)
	m3 =strassenItmod2( a12^a14^a15^a16,b31^b41^b51^b32^b42^b62^b13^b33^b53^b24^b44^b64^b35^b45^b55^b16^b26^b66)
	m4 =strassenItmod2( a11^a12,b12^b42^b16^b46)
	m5 =strassenItmod2( a11^a21^a16,b32^b42^b62^b15^b25^b65)
	m6 =strassenItmod2( a23^a25,b11^b21^b31^b41)
	m7 =strassenItmod2( a11^a13^a14^a16,b21^b31^b51^b24^b34^b54^b25^b35^b55)
	m8 =strassenItmod2( a11^a21,b11^b21^b31^b41^b51^b61^b13^b23^b33^b43^b53^b63^b15^b25^b35^b45^b55^b65)
	m9 =strassenItmod2( a12^a13^a15^a16,b62^b23^b33^b53^b14^b44^b54^b64^b66)
	m10 =strassenItmod2( a21^a23^a24^a26,b32^b42^b62^b34^b44^b64^b36^b46^b66)
	m11 =strassenItmod2( a21^a12^a13^a24^a16^a26,b22^b32^b42^b52^b14^b24^b34^b44^b64)
	m12 =strassenItmod2( a23^a24,b22^b32^b52^b14^b44^b54)
	m13 =strassenItmod2( a21^a22^a23^a24,b21^b31^b41^b51^b14^b24^b34^b44^b64^b25^b35^b45^b55)
	m14 =strassenItmod2( a11^a23^a14^a26,b32^b42^b62^b14^b24^b64^b36^b46^b66)
	m15 =strassenItmod2( a21^a22^a23^a24,b21^b31^b51^b12^b32^b24^b54^b25^b35^b45^b55^b16^b26^b46^b56)
	m16 =strassenItmod2( a11^a23^a24^a16,b21^b31^b51^b14^b44^b54^b25^b35^b55)
	m17 =strassenItmod2( a21^a23^a25^a26,b11^b41^b12^b32^b54^b35^b45^b55^b16^b46)
	m18 =strassenItmod2( a11^a16,b11^b41^b14^b44^b15^b45)
	m19 =strassenItmod2( a12^a22^a13^a23^a16,b11^b21^b31^b41^b51^b61^b14^b24^b34^b44^b54^b64^b35^b45^b55)
	m20 =strassenItmod2( a11^a22^a23^a14,b21^b31^b41^b51^b14^b34^b44^b54^b64^b25^b35^b45^b55)
	m21 =strassenItmod2( a11^a12^a15,b11^b21^b31^b41^b51^b61^b12^b32^b62^b13^b23^b33^b43^b53^b63^b35^b45^b55)
	m22 =strassenItmod2( a11^a21^a12^a13^a14^a24^a15^a26,b12^b22^b32^b42^b52^b62^b14^b24^b34^b44^b64^b16^b26^b36^b46^b56^b66)
	m23 =strassenItmod2( a12^a13^a16,b32^b42^b14^b24^b34^b44^b64)
	m24 =strassenItmod2( a11^a21^a12^a23^a25^a26,b21^b31^b51^b12^b42^b16^b46)
	m25 =strassenItmod2( a12^a22^a23^a15,b11^b21^b61^b33^b43^b63^b34^b44^b64^b36^b46^b66)
	m26 =strassenItmod2( a21^a24^a26,b12^b22^b32^b42^b52^b62^b16^b26^b36^b46^b56^b66)
	m27 =strassenItmod2( a14^a16,b11^b21^b61^b13^b23^b63^b14^b24^b64^b16^b26^b66)
	m28 =strassenItmod2( a11^a21^a14^a24,b21^b31^b41^b51^b32^b42^b62^b14^b34^b44^b54^b64^b25^b35^b45^b55^b36^b46^b66)
	m29 =strassenItmod2( a12^a23^a15^a26,b12^b22^b32^b42^b23^b33^b53^b24^b34^b54^b16^b26^b36^b46)
	m30 =strassenItmod2( a21^a12^a23^a14^a15^a25^a16^a26,b11^b21^b31^b51^b61^b12^b32^b23^b33^b43^b53^b63^b24^b34^b44^b64^b35^b45^b55^b16^b26^b36^b56^b66)
	m31 =strassenItmod2( a12^a22^a14^a24^a15^a25^a16^a26,b11^b21^b31^b51^b61^b12^b32^b23^b33^b43^b63^b24^b34^b44^b54^b64^b35^b45^b55^b16^b26^b36^b56^b66)
	m32 =strassenItmod2( a21^a22^a25,b32^b42^b52^b35^b45^b55)
	m33 =strassenItmod2( a21,b12^b22^b32^b42)
	m34 =strassenItmod2( a16,b15^b25^b65)
	m35 =strassenItmod2( a11^a21^a12^a22^a13^a23^a14^a24^a15^a25,b54)
	m36 =strassenItmod2( a26,b11^b21^b31^b41^b51^b61^b32^b42^b62^b14^b24^b34^b44^b54^b64^b35^b45^b55)
	m37 =strassenItmod2( a21^a12^a15,b11^b21^b31^b41^b51^b61^b12^b22^b62^b13^b23^b33^b43^b53^b63^b35^b45^b55)
	m38 =strassenItmod2( a11^a21^a23^a25^a16^a26,b11^b21^b31^b41^b51^b54^b55)
	m39 =strassenItmod2( a13^a23^a14^a24,b21^b31^b51^b12^b22^b42^b52^b24^b25^b35^b55^b16^b26^b46^b56)
	m40 =strassenItmod2( a13^a23^a16^a26,b23^b33^b53^b24^b34^b54)
	m41 =strassenItmod2( a11^a12^a13^a14,b11^b61^b23^b33^b43^b53^b63^b34^b44^b54^b64^b25^b36^b46^b66)
	m42 =strassenItmod2( a11^a21^a12^a22,b21^b31^b51^b12^b22^b42^b52^b24^b54^b16^b26^b46^b56)
	m43 =strassenItmod2( a11^a21^a13^a23^a15^a25^a16^a26,b11^b21^b31^b51^b61^b12^b32^b23^b33^b43^b53^b63^b24^b34^b44^b54^b64^b35^b45^b16^b26^b36^b56^b66)
	m44 =strassenItmod2( a11^a21^a14^a24^a16^a26,b22^b32^b42^b52)
	m45 =strassenItmod2( a14^a24^a16^a26,b11^b21^b31^b41^b51^b61^b32^b42^b62^b23^b33^b63^b14^b44^b54^b35^b45^b55)
	m46 =strassenItmod2( a21^a12^a13^a23^a25^a16^a26,b32^b42^b54^b35^b45^b55)
	m47 =strassenItmod2( a11^a12^a13^a23^a14^a24^a15,b22^b32^b52^b54)
	m48 =strassenItmod2( a13^a15,b11^b21^b51^b61^b33^b43^b63^b34^b44^b54^b64^b55^b36^b46^b66)
	m49 =strassenItmod2( a11^a12^a13^a14^a15,b12^b42^b62^b14^b24^b34^b44^b64^b16^b26^b36^b46^b56^b66)
	m50 =strassenItmod2( a22^a23^a25^a26,b21^b31^b51^b12^b42^b52^b16^b46^b56)
	m51 =strassenItmod2( a11^a12^a13^a14,b12^b32^b14^b24^b34^b44^b64^b16^b26^b46^b56)
	m52 =strassenItmod2( a12^a22^a13^a23^a16^a26,b11^b21^b31^b41^b51^b61^b22^b32^b42^b52^b14^b24^b34^b44^b64)
	m53 =strassenItmod2( a11^a21^a16^a26,b32^b42^b62^b35^b45^b65)
	m54 =strassenItmod2( a11^a12^a23^a24,b12^b22^b42^b52^b24^b54^b16^b26^b46^b56)
	m55 =strassenItmod2( a12^a22^a13^a23,b21^b31^b41^b51^b33^b43^b63^b14^b54^b25^b35^b45^b55^b36^b46^b66)
	m56 =strassenItmod2( a11^a14,b14^b24^b64)
	
c11 = m2^m4^m17^m19^m20^m23^m24^m25^m30^m38^m41^m43^m46^m48^m51^m55
	c12 = m5^m8^m11^m21^m22^m23^m26^m33^m34^m37^m44^m49
	c13 = m49^m51^m54^m55^m19^m20^m16^m12^m14^m1^m2^m3^m5^m7^m8^m11^m41^m44^m47^m40^m34^m37^m39^m33^m26^m27^m29^m22^m25
	c14 = m7^m11^m12^m16^m22^m26^m39^m44^m47^m49^m51^m54^m56
	c15 = m4^m11^m12^m16^m17^m18^m22^m23^m24^m26^m30^m34^m38^m39^m41^m43^m44^m46^m47^m49^m54
	c16 = m1^m4^m5^m8^m9^m14^m21^m23^m29^m33^m34^m37^m40^m49^m51^m56
	c21 = m2^m4^m6^m11^m13^m15^m17^m19^m23^m24^m42^m46^m52^m54
	c22 = m11^m19^m22^m23^m26^m32^m33^m35^m36^m46^m47^m49^m52
	c23 = m1^m2^m3^m10^m12^m13^m15^m22^m25^m26^m27^m29^m30^m31^m33^m35^m36^m37^m45^m47^m49
	c24 = m10^m12^m13^m14^m20^m22^m26^m28^m35^m47^m49^m56
	c25 = m4^m5^m11^m12^m15^m16^m17^m18^m19^m22^m23^m24^m26^m35^m36^m38^m42^m46^m47^m49^m52^m53^m54
	c26 = m1^m4^m11^m13^m14^m19^m20^m22^m23^m24^m28^m32^m33^m35^m36^m42^m46^m47^m49^m50^m52^m54^m56)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0)), axis=1)

	return result



def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def mat334(a,b):

	a11, a12, a13, a21, a22, a23, a31, a32, a33 = div3x3(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34 = div3x4(b)


	m1 =strassenIt( -a11-a31+a22,b22-b13+b23)
	m2 =strassenIt( -a12-a22-a32,b22-b14+b24)
	m3 =strassenIt( a11+a31,-b12+b22-b13+b23)
	m4 =strassenIt( -a13-a23,-b21-b31+b22+2*b32+b13+b33)
	m5 =strassenIt( a12,b11-b21-b12+b22-b13+b23)
	m6 =strassenIt( a11+a31+a12+a32,b22+b23-b14)
	m7 =strassenIt( a32-a13-a33,b31-b14+b24+b34)
	m8 =strassenIt( a21+a22-a23,b32+b33)
	m9 =strassenIt( a31,b11+b14)
	m10 =strassenIt( a22,b32+b13-b23)
	m11 =strassenIt( a12+a32-a13-a33,-b14+b24)
	m12 =strassenIt( -a11-a12,b14)
	m13 =strassenIt( -a11-a31-a12,b11-b12+b22-b13+b23+b14)
	m14 =strassenIt( a13+a23+a33,b32+b14+b34)
	m15 =strassenIt( a13+a33,-b32-b33-b14+b24+b34)
	m16 =strassenIt( -a21-a22+a13+a23+a33,b32+b33+b14)
	m17 =strassenIt( -a11+a22-a13-a23,b11-b21-b12+b22)
	m18 =strassenIt( a13,b31)
	m19 =strassenIt( a11+a21+a31+a12+a22+a32-a13-a23-a33,b14)
	m20 =strassenIt( -a11-a21-a12-a22+a13+a23,-b11+b12+b13)
	m21 =strassenIt( a21+a22-a13-a23,-b11+b12+b32+b13+b33)
	m22 =strassenIt( a22-a23,b32)
	m23 =strassenIt( -a32+a33,b31+b34)
	m24 =strassenIt( -a22-a13-a33,b32+b14-b24)
	m25 =strassenIt( -a22+a13+a23,b11-b21-b12+b22+b32)
	m26 =strassenIt( a11+a12,-b21+b22)
	m27 =strassenIt( a32,b21+b31+b24+b34)
	m28 =strassenIt( a11+a21+a31,b12)
	m29 =strassenIt( a21+a22,b32+b13+b33)
	
c11 = -m3-m5-m9+m12-m13+m18
	c12 = -m3-m5-m9+m12-m13+m17+m22+m25+m26
	c13 = m5+m8-m17-m20-m21-m22-m25-m26
	c14 = -m7+m11-m12-m18-m23
	c21 = m1+m3+m4+m10-m18-m21+m25+m28+m29
	c22 = m1+m3+m10-m22+m28
	c23 = -m8-m10+m22+m29
	c24 = -m8+m14-m15-m16+m22+m24
	c31 = -m7-m8+m9-m12-m15-m16-m18-m19+m27
	c32 = -m1-m2+m5+m9-m10-m11-m12+m13-m17-m22-m24-m25-m26
	c33 = m1+m2-m5+m6+m10+m11+m16+m17+m19+m20+m21+m22+m24+m25+m26
	c34 = m7+m8+m12+m15+m16+m18+m19+m23)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0), np.concatenate(c13, c23, c33, c43), axis=0)), axis=1)

	return result



def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def mat335(a,b):

	a11, a12, a13, a21, a22, a23, a31, a32, a33 = div3x3(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35 = div3x5(b)


	m1 =strassenIt( a11+a31+a12+a32,b24+b25)
	m2 =strassenIt( -a22+a32+a23-a33,b21+b22+b23+b24)
	m3 =strassenIt( -a21+a31-a22+a32,b22+b24+b25)
	m4 =strassenIt( -a11-a31+a12+a32-a13-a33,b21+b22)
	m5 =strassenIt( -a12-a22+a13+a23,b22-b23+b24+b25)
	m6 =strassenIt( a13,b34+b35)
	m7 =strassenIt( a33,-b11+b31-b12+2*b32-b13-b14+b34)
	m8 =strassenIt( -a11-a31+2*a12-2*a13,b32-b13-b14+b34)
	m9 =strassenIt( a21-a31,-b11-2*b12+b22-b13-2*b14+b24-b15+b25)
	m10 =strassenIt( -a11-a31,-b11+b31-b12+b13+b24-b15+b25+b35)
	m11 =strassenIt( -a11-a31+a12-a13-a33,-b21-b22+b32+b34)
	m12 =strassenIt( -a13-a23,b12-b22-2*b13+b23+b33-b24-b25)
	m13 =strassenIt( a11,b12-b13+b14+b15)
	m14 =strassenIt( a11-a12+a13,b13+b14)
	m15 =strassenIt( a22-a23+a33,b21+b22-b32+b23+b33+b24)
	m16 =strassenIt( a11+a31+a32,b12-b13+b24+b25)
	m17 =strassenIt( a31+a32,-b12+b13)
	m18 =strassenIt( -a21+a31+a32,-b12+b22+b13+b24+b25)
	m19 =strassenIt( a21+a13+a23,b12+b32-2*b13+b34+b35)
	m20 =strassenIt( a22,-b32+b23+b33+b24+b25)
	m21 =strassenIt( a32,b21-b12+2*b22+b13+b24)
	m22 =strassenIt( -a11-a21+a12-a13-a23,b32+b34-b25)
	m23 =strassenIt( a21+a23,b32+b34+b35)
	m24 =strassenIt( -a22+a23,-b32+b33)
	m25 =strassenIt( -a22+a13+a23,-b22-b32+b23+b33-b24-b25)
	m26 =strassenIt( -a11-a21-a13-a23,b12+b32-2*b13+b34-b25)
	m27 =strassenIt( a11+a21-a12+a13,2*b32-b13-b33-b14+b34-2*b25)
	m28 =strassenIt( a11+a31-a12+a13,b32-b13-b14+b34)
	m29 =strassenIt( a11+a21-a12+a22+a13-a23,-b32+b33+b25)
	m30 =strassenIt( a23-a33,b21+b31+b22+2*b32+b23+b33+b24+2*b34+b35)
	m31 =strassenIt( a11+a31+a33,-b11+b31-b12+2*b32-b13-b14+2*b34+b35)
	m32 =strassenIt( a21,b32-b13-b14+b34-b15+b35)
	m33 =strassenIt( -a31-a33,b11+b12+b13+b14)
	m34 =strassenIt( a21+a33,b11+b12+b32+b13+b14+b34+b35)
	m35 =strassenIt( a12,b22+b32+2*b24+b34+b25)
	m36 =strassenIt( a11+a31+a13+a33,b21+b31+b22+b32+b34+b35)
	
c11 = 2*m1+m8-m11-m14-2*m16-2*m17-m19+m22+m23-m26+m28-m31+m33-m35+m36
	c12 = -2*m1-m6+2*m16+2*m17+m19-m22-m23+m26+m35
	c13 = -m1+m5-m6+m16+m17+m19-m22-m23-m24+m25+m26+m35
	c14 = m1+m6-m8+m14-m16-m17-m19+m22+m23-m26-m28
	c15 = m8+m13-m14+m19-m22-m23+m26+m28
	c21 = 2*m3-m6+m7+m12+m14+m15+2*m17-2*m18+m19+m22-2*m23+m24+m25+m27+m29+m30+m34
	c22 = -2*m3+m6-m12-2*m17+2*m18-m19-m20+m23-m25
	c23 = -m3+m6-m12-m17+m18-m19+m23+m24-m25
	c24 = m3-m6+m12-m14+m17-m18+m19+m20-m22-m23-m24+m25-m27-m29
	c25 = m14+m22+m23+m24+m27+m29-m32
	c31 = m4-2*m8-m9+m10+m11-m13+m14+m16+2*m17-m18-3*m28+m31+m32-2*m33-m34
	c32 = m7+2*m8+m9-m10+m13-m16-2*m17+m18+4*m28-m31-m32+m33+m34
	c33 = m2+m7+2*m8+m9-m10+m13+m15-m16-m17+m18-m21+m24+4*m28-m31-m32+m33+m34
	c34 = -m4-m7-2*m8-m9+m10-m11-m13-m14+m16+m17-m18+m21-5*m28+m31+m32-m33-m34
	c35 = m4+m9+m11+m14+m18-m21+m28-m32+m33+m34)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0)), axis=1)

	return result



def div3x3(a):

	col = len(a)/3
	row = len(a[1])/3

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]

	return (a11, a12, a13, 
	  a21, a22, a23, 
	  a31, a32, a33)

def div3x6(a):

	col = len(a)/3
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36)

def mat336mod2(a,b):

	a11, a12, a13, a21, a22, a23, a31, a32, a33 = div3x3(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36 = div3x6(b)


	m1 =strassenItmod2( a31^a32,b21^b31^b13^b14^b25^b35^b16^b26)
	m2 =strassenItmod2( a33,b21^b31^b13^b14^b24^b34^b16^b36)
	m3 =strassenItmod2( a11^a21^a13^a23,b31^b32^b33^b34^b15^b16)
	m4 =strassenItmod2( a22^a32,b13^b23^b33^b14^b24^b34^b16^b36)
	m5 =strassenItmod2( a13^a23,b15^b35^b16^b36)
	m6 =strassenItmod2( a12^a32^a13^a33,b21^b31^b23^b35^b26)
	m7 =strassenItmod2( a22,b11^b31^b23^b15^b25^b35^b26)
	m8 =strassenItmod2( a21^a22,b11^b31^b15^b35)
	m9 =strassenItmod2( a11^a31,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34^b15^b26)
	m10 =strassenItmod2( a11^a21^a12^a32^a23^a33,b31^b32^b13^b33^b14^b34^b16)
	m11 =strassenItmod2( a21^a31,b16^b36)
	m12 =strassenItmod2( a31^a12^a22,b11^b21^b31^b12^b25^b35^b16^b26)
	m13 =strassenItmod2( a11^a21^a32^a13^a23^a33,b31^b32^b33^b34)
	m14 =strassenItmod2( a32^a33,b21^b32^b13^b33^b14^b24^b34^b25^b35^b16^b26)
	m15 =strassenItmod2( a22^a32^a23^a33,b13^b33^b14^b34^b16^b36)
	m16 =strassenItmod2( a12^a22,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34^b25^b26)
	m17 =strassenItmod2( a31^a22,b11^b21^b31^b15^b25^b35^b26)
	m18 =strassenItmod2( a21^a31^a23^a33,b13^b14^b16^b36)
	m19 =strassenItmod2( a11^a31^a22,b11^b21^b31^b22^b32^b13^b23^b33^b14^b24^b34^b15^b16^b26)
	m20 =strassenItmod2( a21^a12^a32^a13^a23^a33,b31^b35)
	m21 =strassenItmod2( a11^a31^a12^a32,b21^b31^b22^b32^b13^b23^b33^b14^b24^b34^b16^b26)
	m22 =strassenItmod2( a21^a31^a13^a23,b15^b16^b36)
	m23 =strassenItmod2( a21^a32^a23^a33,b31^b13^b14^b35^b16)
	m24 =strassenItmod2( a13^a33,b13^b23^b33^b14^b24^b34^b25^b35^b16^b36)
	m25 =strassenItmod2( a21^a31^a23,b11^b13^b16^b36)
	m26 =strassenItmod2( a12^a22^a32^a13^a33,b21^b23^b26)
	m27 =strassenItmod2( a11^a21^a31^a13^a23^a33,b21^b31^b13^b14^b24^b34^b25^b35^b16^b26)
	m28 =strassenItmod2( a11^a21^a31^a13^a23,b21^b31^b13^b14^b24^b34^b15^b25^b35^b26)
	m29 =strassenItmod2( a21^a31^a22^a32^a23^a33,b26)
	m30 =strassenItmod2( a32^a33,b31^b32^b33^b34^b25^b26)
	m31 =strassenItmod2( a12^a13,b21^b32^b13^b33^b14^b24^b34^b25^b35^b16^b26)
	m32 =strassenItmod2( a22^a32^a13^a33,b13^b23^b33^b14^b24^b34^b25^b16^b36)
	m33 =strassenItmod2( a21^a23,b11^b31^b13^b35^b16)
	m34 =strassenItmod2( a12^a22^a32,b22^b32^b13^b23^b33^b14^b24^b34^b25^b35^b16^b26)
	m35 =strassenItmod2( a11^a31^a12^a22,b11^b21^b31^b12^b22^b32^b13^b23^b33^b14^b24^b34^b26)
	m36 =strassenItmod2( a11^a21^a31^a23,b11^b21^b31^b14^b24^b34^b25^b35^b26)
	m37 =strassenItmod2( a23,b11^b31^b13^b33^b16^b36)
	m38 =strassenItmod2( a22^a32^a33,b21^b13^b33^b14^b24^b34^b16^b36)
	m39 =strassenItmod2( a12^a22^a32^a33,b25^b26)
	m40 =strassenItmod2( a21^a31^a23^a33,b13^b14^b16^b26)
	m41 =strassenItmod2( a31,b21^b31^b13^b15^b25^b35^b26)
	m42 =strassenItmod2( a11^a21^a12^a22,b11^b31^b12^b32^b13^b33^b14^b34)
	
c11 = m1^m2^m3^m4^m6^m7^m9^m13^m16^m18^m19^m21^m23^m24^m25^m26^m27^m28^m30^m32^m33^m34^m35^m41
	c12 = m2^m4^m12^m17^m18^m19^m22^m24^m26^m27^m28^m29^m31^m35^m38^m40
	c13 = m1^m17^m19^m20^m21^m22^m23^m25^m26^m28^m29^m32^m34^m36^m38^m39^m40
	c14 = m1^m3^m6^m7^m9^m10^m16^m19^m20^m21^m26^m28^m29^m30^m31^m33^m34^m35^m36^m39^m40^m41
	c15 = m2^m3^m4^m6^m7^m9^m13^m16^m17^m18^m20^m24^m25^m26^m27^m28^m29^m30^m32^m33^m35^m40^m41
	c16 = m3^m6^m7^m9^m13^m16^m17^m20^m22^m25^m26^m30^m33^m35^m39^m41
	c21 = m2^m3^m4^m5^m8^m11^m13^m17^m18^m22^m24^m25^m27^m28^m29^m30^m32^m33^m40^m41
	c22 = m21^m15^m16^m18^m12^m13^m14^m1^m2^m3^m4^m5^m7^m8^m10^m42^m34^m35^m38^m39^m32^m27^m28^m30^m22^m23^m24
	c23 = m2^m3^m4^m5^m7^m8^m13^m18^m22^m24^m27^m28^m29^m30^m32^m33^m37^m40
	c24 = m2^m3^m4^m5^m8^m11^m13^m14^m15^m17^m18^m22^m23^m24^m25^m27^m28^m29^m32^m37^m38^m40^m41
	c25 = m2^m3^m4^m5^m6^m7^m11^m13^m17^m18^m20^m22^m24^m25^m26^m27^m28^m29^m30^m32^m33^m40^m41
	c26 = m6^m7^m11^m17^m20^m25^m26^m33^m41
	c31 = m1^m2^m3^m13^m18^m23^m25^m27^m28^m30^m33^m41
	c32 = m2^m3^m4^m7^m12^m13^m14^m16^m17^m27^m28^m30^m34^m38^m39
	c33 = m1^m3^m4^m7^m13^m17^m18^m23^m25^m27^m28^m30^m33^m38
	c34 = m1^m3^m13^m14^m27^m28^m41
	c35 = m2^m3^m6^m7^m13^m17^m18^m20^m25^m26^m27^m28^m29^m30^m33^m40^m41
	c36 = m6^m7^m17^m18^m20^m25^m26^m29^m33^m40^m41)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def mat344(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34 = div3x4(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44 = div4x4(b)


	m1 =strassenIt( a11+a21-a31,b11+b31-b12+b22-b32+b42-b13+b23-b33-b14-b34)
	m2 =strassenIt( a21+a13,-b21+b22+b32+b24+b34)
	m3 =strassenIt( -a21+a31-a22+a23-a34,b22+b42+b23)
	m4 =strassenIt( a31-a34,b22+b42-b13+b23-b33)
	m5 =strassenIt( 2*a11+2*a21+a12+a22-a13-a23-a14-a24,b21-b22+b32-b24)
	m6 =strassenIt( a11+a21-a31-a13-a23+a33+a14+a24-a34,-3*b21-b31-2*b41+5*b22+b32+4*b42+2*b23+b33+2*b43+3*b24+b34+2*b44)
	m7 =strassenIt( 2*a21+a22-a23-a24,b21+b42)
	m8 =strassenIt( a11+a21+a31+a12+a22-a33-a14-a24,b22+b32+b23)
	m9 =strassenIt( a11+2*a21+a22-a23-a14-a24,-b21+2*b22+b42+b24)
	m10 =strassenIt( a11-a14,b11+b31-b12-b32+b14+b34+2*b44)
	m11 =strassenIt( -a11-2*a21-a12-a22+a23+a14+a24,-b21+b22+b32)
	m12 =strassenIt( -a11-a21+a31-a33,b11+b21+b31+b41-b22-b32-b24-b34)
	m13 =strassenIt( -a11-a12+a32-a23+a14+a24,b23)
	m14 =strassenIt( -a11+a21+a14,b11-b21+b31-b12-b32-b42+b14+b34+b44)
	m15 =strassenIt( -a11-a21+a14+a24,b31-b41+b22-b32+2*b42-b34+b44)
	m16 =strassenIt( -a11-a21+a31-a12+a32-a33+a14-a34,b21)
	m17 =strassenIt( -a31+a33,-b11-b41-b22-b32+b13-b23+b43)
	m18 =strassenIt( -a21+a23,b21-b31+2*b41+b22+b32+b23+b33)
	m19 =strassenIt( -2*a31-a32+a33+a34,b12+b22+b32+b42+b23)
	m20 =strassenIt( a31-a33-a34,b13+b33+b43)
	m21 =strassenIt( -2*a11-2*a21+2*a31+2*a13+2*a23-2*a33-a14-a24+a34,-2*b21-b31-b41+3*b22+b32+2*b42+b23+b33+b43+2*b24+b34+b44)
	m22 =strassenIt( a21+a22-a23,b22+b42)
	m23 =strassenIt( -a11-a21+a34,-b21-b41+2*b22+2*b42-b13+b23-b33+b24+b44)
	m24 =strassenIt( a31-a33,-b22-b32+b13-b23+b43)
	m25 =strassenIt( a21,-b11+b21-b31+b12+b32+b42)
	m26 =strassenIt( a11+a21,b21+2*b12-b22+b32+2*b42+b14-b24+b44)
	m27 =strassenIt( a31+a32-a33-a34,b12+b32+b42)
	m28 =strassenIt( -a21+a31+a32-a33-a34,b21+b12+b32+b42)
	m29 =strassenIt( -a21-a31+a24+a34,b21+b41+b43)
	m30 =strassenIt( -a11-a21-a31-a32+a33+a34,b21+b12-b22+b32+b42-b24)
	m31 =strassenIt( a21+a31-a12+a32+a13-a33-a34,-b21+b22+b24)
	m32 =strassenIt( a21-a23,-b31+b41+b22+b32)
	m33 =strassenIt( -a21-a31+a34,b21+b41+b13+b33+b43)
	m34 =strassenIt( a21-a23-a24,b21+b41)
	m35 =strassenIt( -a11-a21-a12-a22+a14+a24,b22+b32)
	m36 =strassenIt( 2*a11+2*a21-a31-a13-a23+a33-a14-a24,-b21-b31+b22+b32+b24+b34)
	m37 =strassenIt( -a11-2*a21+a23+a14+a24,-b31+b41+b22+b32+b24+b34)
	m38 =strassenIt( a21+a33,b11+b21+b31+b41+b13+b33+b43)
	
c11 = m2-m12-m16+m17+m24+m25-m27+m28+m34+m36+m37
	c12 = -m5+m7-m9-m11-m16-2*m27+m28-m30+m31
	c13 = m3-m4+m6+m8-m15-m18-m20+m21+m22+m23+m24-m29-m32+m33-m34+m35+m36
	c14 = m2+m5-m7+m9-m10+m11-m14-m25+m26+2*m27+2*m30-2*m31
	c21 = m11+m16-m25+m27-m28+m32-m34-m35
	c22 = -m7+m11+m16+m22+m27-m28-m35
	c23 = -m3+m4+m18-m22+m29+m32-m33+m34
	c24 = m7+m9+m10+m14+m15-2*m22+m25+m32+m37
	c31 = m17+m20+m24+m25-m27+m28+m33+m38
	c32 = -m3-m8-m13-m19-m22-m27-m35
	c33 = m3-m4+m8+m13-m20+m22+m24+m35
	c34 = m1+m3+m4+m8+m12+m13+m19+m20+m22+m23+m25+m26+m27+m28+m30+m33+m35+m38)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0), np.concatenate(c13, c23, c33, c43), axis=0)), axis=1)

	return result



def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def mat345(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34 = div3x4(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45 = div4x5(b)


	m1 =strassenIt( -a32+a33+a14-a24,b21-b22+b42-b23+b43-b24-b25)
	m2 =strassenIt( -a31-a33+a34,-b21+b22+b23+b24+b44+b45)
	m3 =strassenIt( -a31-a33+a24,-b11-b21+b12+b22+b13+b23+2*b14+b24+b44+b15+b45)
	m4 =strassenIt( a23-a33,b11-b31-b12+b32-b13+b33-2*b14+2*b34-b15+b35)
	m5 =strassenIt( -a11+a12-a32-a23+a24,b23+b33+b24+b34+b25+b35)
	m6 =strassenIt( a31,-b11+b31+b12-b32+b13+b43+2*b14-b34+b44+2*b15-b25-b35+b45)
	m7 =strassenIt( a11-a22+a23-a24,b11-b31-b12+b32-b13+b23+b33-b14+b34-b15+b25+b35)
	m8 =strassenIt( -a11+a12+a32-2*a13-a33+a24,b11-b31-b14+b34-b15+b35)
	m9 =strassenIt( a24-a34,b21-b41-b22+b42-b23+b43-b24+b44)
	m10 =strassenIt( a11-a21,b11-b31-b12+b32-2*b13+b33-2*b14-b24+b34-2*b15+b35)
	m11 =strassenIt( -a21+a22-a32-a23+a24,-b21+b22+b23+2*b24+b25)
	m12 =strassenIt( a11+a13,-b11-b31-2*b41-b22+b32+2*b42-b23+b43+b14+b34+2*b44+b15+b45)
	m13 =strassenIt( a21-a31,b11-b31-b12-b22-b13-b23-b14+b34)
	m14 =strassenIt( a33-a24,-b11+b31+b12-b32+b13+b43+2*b14-b34+b44+b15+b45)
	m15 =strassenIt( -a11+a12-a32-a13+a33+a14-a34,b11-b31-b12+b32-b14+b34-b15+b25+b35)
	m16 =strassenIt( -a11+a12+a32-a13-a33+a24,b11-b21-b31-b14+b24+b34-b15+b25+b35)
	m17 =strassenIt( -a31-a33+a14-a24+a34,b21+b31-b22-b32-b23+b43-b24-b34-b25-b35)
	m18 =strassenIt( -a11-a23+a24,b11-b31-b12+b32-b13-b23-2*b14-b24+b34-b15-b25)
	m19 =strassenIt( a11+a13-a14+a24-a34,-b11+b21-2*b41+b12-b22+2*b42-b23+b43+b14-b24+2*b44+b15+b45)
	m20 =strassenIt( -a11+a21-a13+a23,-b21-b31+b22+b32+b23+b33+b24+b34+b25+b35)
	m21 =strassenIt( a11-a31-a12+a32+a13-a33-a14+a34,-b11+b31+b12-b32+b43+b14-b34+b44+b15-b25-b35+b45)
	m22 =strassenIt( a11-a12+a13+a33-a24,b11-b21-b31+b33+b43-b14+b24+2*b34+b44-b15+b25+2*b35+b45)
	m23 =strassenIt( a22-a23+a24,b12+b22+b13+b23)
	m24 =strassenIt( -a32+a33,-b11+b21+b31-b22+b42-b23+b33+2*b43+b14-b24+b44+b15-b25+b45)
	m25 =strassenIt( a32-a33+a34,b21-b22+b42-b23+b43-b24)
	m26 =strassenIt( -a21+a31+a22-a32-a23+a33+a24-a34,-b21+b22+b23+b24)
	m27 =strassenIt( a11-a12+a32+2*a13-a33-2*a14+a24,b11-b31-b12+b32-b14+b34-b15+b35)
	m28 =strassenIt( -a21+a22-a23-a33+a24,b11-b21-b31+b22+b32+b23+b33-b14+b24+b34-b15+b25+b35)
	m29 =strassenIt( -a11+a12-a32-a13+a14,-b21+b22+b43+b24+b44+b45)
	m30 =strassenIt( a24,-b31-b41+b32+b42+b34+b44)
	m31 =strassenIt( -a31-a33,-b11+b21+b31-b22-b32-b23+b43+b14-b24-b34+b15-b25-b35)
	m32 =strassenIt( -a23+a33,b22+b32+b23+b33)
	m33 =strassenIt( -a11+a12-a32-a13+a24,b33+b43+b34+b44+b35+b45)
	m34 =strassenIt( a14-a24+a34,-b21-b31-b41+b22+b32+b23-b43+b24+b34+b44+b25+b35+b45)
	m35 =strassenIt( a21+a23-a24,-b11-b21+b12+b22+b13+b23+2*b14+2*b24+b15+b25)
	m36 =strassenIt( a21-a22+a23-a24,b11-b21-b31-b12+b22+b32-b13+b23+b33-b14+b24+b34-b15+b25+b35)
	m37 =strassenIt( -a11-a13+a24,b21-b31-2*b41-b22+b32+2*b42-b23+b43-b24+b34+2*b44-b25+b45)
	m38 =strassenIt( -a11-a13+a14,2*b21-2*b41-2*b22+2*b42-b23+b43-2*b24+2*b44-b25+b45)
	m39 =strassenIt( -a14+a24,b21-b41-b22+b42-b23+b43-b24+b44-b25+b45)
	m40 =strassenIt( -a21+a31-a23+a33,-b21-b31+b24+b34)
	m41 =strassenIt( a11-a12+a13-a14,-b21+b22+b24)
	m42 =strassenIt( -a12+a22+a13-a23-a14+a24,b23+b25)
	m43 =strassenIt( a11-a22+a13+a23-a24,b11-b31+b22+b32+b23+b33-b14+b34-b15+b35)
	m44 =strassenIt( a32-a33+a24,-b22+b42-b23+b43)
	m45 =strassenIt( a21-a31-a22+a23-a24,-b21+b12+b22+b13+b23+b24)
	m46 =strassenIt( a11,b11-b31-b12+b32-b14+b34)
	m47 =strassenIt( a32,-b11+b31+b22+b23+b33+b43+b14+b24+b44+b15+b45)
	
c11 = m19+m15+m18-2*m12-m14+2*m1+m4+m5+m7+m8-m9+m41+m42-m43+m44+m46+m47+m34-2*m37+m38+2*m39+m27+m29+2*m30+m22-m23+m25
	c12 = 2*m1+m8-m9-m12+m15-m16+m19+m25+m27+m30+m34-m37+m38+m39-m41+m44
	c13 = -m1-m7+m9+m12-m15-m19+m23-m25-m27-m30-m34+m37-m38-m39-m42+m43
	c14 = m4+m5+m7-m12-m14+m16+m18+m22-m23+m29+2*m30-2*m37+m38+2*m39+m41+m42-m43+m47
	c15 = m1-m9+m15+m19+m25+m27-m30+m34+m37-m39+m46
	c21 = m3+m4+m6+m11-m12+m13-m20+m24+m30+m31+m35+m36-m37+m40-m43+m44+m45+m47
	c22 = m3+m6+m7-m10+m13+m14-m16-m18-m22+m23+m24+m31-m33+m35-m36+m40+m44+m45-m46
	c23 = -m3-m6-m7+m10-m13-m14+m18-m28-m31-m32-m35-m40-m45+m46
	c24 = m4+m11-m12-m14+m16-m20+m22-m23+2*m30+m33+m35+m36-m37-m43+m47
	c25 = m3+m6+m12+m13+m14+m20+m23+m28-2*m30+m31+m32+m37+m40+m43+m45
	c31 = -m1+m2+m6-m17+m24+m26+m28+2*m31-m34+m36-m39+m45+m47
	c32 = m2+m15-m16-m21-m22+m24+m25-m29+m31-m33-m41
	c33 = -m2-m15+m21-m26-m28+m29-m31-m36+m41-m45
	c34 = -m1+m2-m3-m9-m14+m16-m17+m22-m25+m26+m28+m30+m31+m33-m34+m36-m39+m45+m47
	c35 = m1+m3+m6+m9+m14+m17+m25-m30+m34+m39)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0)), axis=1)

	return result



def div3x4(a):

	col = len(a)/3
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34)

def div4x6(a):

	col = len(a)/4
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46)

def mat346mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34 = div3x4(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46 = div4x6(b)


	m1 =strassenItmod2( a14^a24,b11^b41^b16^b46)
	m2 =strassenItmod2( a12^a13^a14,b11^b41^b23^b43^b15^b45^b16^b46)
	m3 =strassenItmod2( a11^a21^a31^a22^a13^a33^a14,b43^b15^b45^b46)
	m4 =strassenItmod2( a12^a32^a33,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24^b34^b15^b25^b45^b16^b26^b46)
	m5 =strassenItmod2( a12^a32^a13^a14^a34,b11^b41^b12^b42^b23^b33^b43^b15^b45^b16^b46)
	m6 =strassenItmod2( a11^a21^a31^a22^a13^a33^a24,b43^b15^b45^b16^b46)
	m7 =strassenItmod2( a11^a13^a14,b11^b22^b32^b33^b43^b35^b45^b36^b46)
	m8 =strassenItmod2( a11^a31^a13^a23^a33^a14^a34,b11^b22^b32^b13^b15^b16)
	m9 =strassenItmod2( a12^a32^a14^a34,b13^b23^b33)
	m10 =strassenItmod2( a22^a32^a24^a34,b11^b21^b31^b14^b24^b34^b15^b25^b35)
	m11 =strassenItmod2( a21^a24,b11^b22^b32^b23^b33^b25^b35^b26^b36)
	m12 =strassenItmod2( a21^a31^a23^a33,b13^b43^b15^b45^b16^b46)
	m13 =strassenItmod2( a21^a12^a22^a32^a24,b23^b25^b26)
	m14 =strassenItmod2( a11^a12^a14,b32^b42^b33^b15^b35^b16^b36)
	m15 =strassenItmod2( a21^a22^a24,b22^b32^b23^b33^b25^b35^b16^b26^b36)
	m16 =strassenItmod2( a22^a32^a23^a33^a24^a34,b31^b12^b42^b13^b34^b35^b16)
	m17 =strassenItmod2( a21^a12^a24,b12^b22^b32^b13^b23^b33^b15^b25^b35^b16^b26^b36)
	m18 =strassenItmod2( a31^a33,b12^b42)
	m19 =strassenItmod2( a11^a21^a31^a22^a13^a33^a14^a24^a34,b11^b22^b32^b33^b43^b14^b35^b45^b36^b46)
	m20 =strassenItmod2( a22^a32^a23^a24^a34,b21^b31^b41^b12^b42^b13^b43^b14^b24^b34^b25^b35^b45^b16^b46)
	m21 =strassenItmod2( a11^a21^a31^a13^a23^a33^a14^a24^a34,b11^b22^b32^b33^b43^b35^b45^b36^b46)
	m22 =strassenItmod2( a13,b31^b41^b32^b42^b13^b23^b43^b35^b45^b36^b46)
	m23 =strassenItmod2( a12^a22,b13^b23^b33^b16^b26^b36)
	m24 =strassenItmod2( a12^a32^a13^a33,b23^b43^b34^b44)
	m25 =strassenItmod2( a22^a23^a14,b11^b41^b23^b43^b16^b46)
	m26 =strassenItmod2( a11^a31^a14^a34,b13^b33^b15^b35^b16^b36)
	m27 =strassenItmod2( a23,b11^b21^b31^b13^b23^b33^b14^b24^b34^b15^b25^b35)
	m28 =strassenItmod2( a12^a32^a13^a33^a14,b23^b43^b14^b44)
	m29 =strassenItmod2( a11^a31^a13^a14^a34,b12^b22^b32)
	m30 =strassenItmod2( a11^a31^a13^a33,b13)
	m31 =strassenItmod2( a22^a23,b11^b21^b41^b22^b32^b33^b43^b25^b35^b36^b46)
	m32 =strassenItmod2( a31^a12^a13^a33^a14,b12^b42^b13)
	m33 =strassenItmod2( a12,b11^b21^b41^b32^b42^b33^b43^b35^b45^b36^b46)
	m34 =strassenItmod2( a14,b23^b43)
	m35 =strassenItmod2( a31^a22^a23^a33^a24,b12^b42^b13^b16)
	m36 =strassenItmod2( a22^a23^a24,b12^b42^b13^b43^b16^b46)
	m37 =strassenItmod2( a24^a34,b21^b41^b24^b44^b25^b45)
	m38 =strassenItmod2( a23,b11^b22^b32^b13^b14^b24^b34^b15^b16)
	m39 =strassenItmod2( a11^a13^a14,b22^b42)
	m40 =strassenItmod2( a11^a21^a13^a14^a24,b11^b12^b13^b15^b16)
	m41 =strassenItmod2( a12^a32^a23,b14^b24^b34)
	m42 =strassenItmod2( a11^a32^a13^a33^a14,b11^b12^b22^b42^b13^b14^b15^b16)
	m43 =strassenItmod2( a31^a12^a34,b12^b22^b32^b13^b33^b15^b35^b16^b36)
	m44 =strassenItmod2( a32^a34,b11^b41^b12^b42^b13^b43^b15^b45^b16^b46)
	m45 =strassenItmod2( a12^a22^a13^a23,b11^b41^b13^b23^b33^b43^b15^b45^b36^b46)
	m46 =strassenItmod2( a11^a22^a13^a23^a14,b12^b32^b42^b13^b33^b35^b16^b36)
	m47 =strassenItmod2( a33,b21^b31^b41^b12^b42^b23^b33^b43^b14^b24^b34^b25^b35^b45^b26^b36^b46)
	m48 =strassenItmod2( a32^a33,b21^b41^b23^b43^b14^b24^b25^b45^b26^b46)
	m49 =strassenItmod2( a12^a22^a23,b11^b21^b41^b12^b22^b42^b33^b43^b15^b25^b45^b36^b46)
	m50 =strassenItmod2( a22^a23^a24^a34,b21^b41^b14^b24^b25^b45)
	m51 =strassenItmod2( a31^a32^a34,b11^b12^b42^b13^b14^b15^b16)
	m52 =strassenItmod2( a21^a22^a24,b11^b22^b32^b23^b33^b14^b15^b25^b35^b16^b26^b36)
	m53 =strassenItmod2( a12^a32^a13^a33^a14^a34,b13^b23^b33^b43^b14^b44)
	m54 =strassenItmod2( a34,b14^b44)
	m55 =strassenItmod2( a11^a21^a31^a13^a23^a33,b13^b43^b15^b45^b16^b46)
	m56 =strassenItmod2( a11^a31^a13^a33^a14^a34,b11^b22^b32^b13^b14^b15^b16)
	
c11 = m5^m7^m9^m12^m14^m18^m22^m30^m32^m33^m39^m44^m55
	c12 = m14^m18^m26^m29^m30^m32^m39^m43
	c13 = m2^m5^m9^m18^m30^m32^m34^m44
	c14 = m4^m11^m17^m24^m28^m33^m34^m39^m40^m42^m48
	c15 = m2^m25^m26^m29^m31^m33^m39^m43^m45^m46^m49
	c16 = m5^m7^m9^m11^m12^m17^m18^m25^m30^m31^m32^m33^m34^m39^m40^m44^m45^m46^m49^m55
	c21 = m3^m6^m7^m10^m12^m15^m17^m18^m20^m23^m30^m33^m35^m38^m39^m40^m44^m46^m49^m55
	c22 = m3^m7^m8^m12^m15^m18^m19^m21^m35^m39^m40^m46^m52^m56
	c23 = m1^m6^m10^m20^m25^m27^m30^m34^m36^m44^m55
	c24 = m8^m19^m21^m31^m37^m38^m50^m54^m56
	c25 = m3^m6^m7^m8^m12^m17^m18^m19^m21^m23^m30^m31^m33^m35^m36^m39^m40^m46^m49^m52^m55^m56
	c26 = m1^m3^m6^m7^m10^m11^m12^m17^m18^m20^m23^m25^m27^m30^m31^m33^m34^m35^m39^m40^m44^m46^m49^m55
	c31 = m4^m6^m7^m8^m12^m13^m18^m19^m29^m30^m33^m38^m39^m41^m42^m43^m44^m47^m51^m52^m55
	c32 = m18^m29^m39^m42^m51^m56
	c33 = m2^m5^m18^m28^m32^m44^m53^m54
	c34 = m4^m8^m11^m17^m33^m38^m39^m40^m41^m42^m48^m54^m56
	c35 = m6^m7^m11^m12^m13^m16^m17^m18^m19^m20^m29^m30^m35^m36^m40^m43^m47^m48^m50^m52^m55^m56
	c36 = m2^m5^m16^m20^m28^m32^m35^m36^m44^m47^m48^m50^m53^m54)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)

def mat355(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35 = div3x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenIt( a14-a15,2*b11+b31+b51+b12-2*b22+b32+b42+3*b52-b53+b54)
	m2 =strassenIt( -a12+a22-a32+a14-a15-a35,-b22+b42+b52-b24+b44+b54)
	m3 =strassenIt( -a31+a32+2*a33-a14+a15+a35,b11+b12+b53-b54+b15+b55)
	m4 =strassenIt( a13+a23-a14,-b22+b42+b52-2*b13-b33)
	m5 =strassenIt( -a12+a14+2*a34-a15-a35,b13+b23)
	m6 =strassenIt( a24-a25,b41)
	m7 =strassenIt( -a12-a32+a14+a34-a15-a35,-b22+b42+b52+b13+b23-b24+b44+b54)
	m8 =strassenIt( a24,-b22+b42+b52+b43+b53)
	m9 =strassenIt( -a13-a33+a14,2*b13-b23+b33+b43+b53+b24-b44-b54-b25+b45+b55)
	m10 =strassenIt( a21+a31-a22-a32-a13-2*a23-3*a33+a14,-b23+b43+b53+b24-b44-b54-b25+b45+b55)
	m11 =strassenIt( a11+a21-a12-a22-2*a13-2*a23-a14,-b21+b41+b51-b22+b42+b52+b23-b24+b44+b54)
	m12 =strassenIt( -a21-a31+a22+a32+2*a23+2*a33+a24+a34,b12+b43+b53-b44-b54-2*b15-b35+b45+b55)
	m13 =strassenIt( a12+a13+a23+a14,b12-b22+b32+2*b14+b34)
	m14 =strassenIt( -a11-a21+a12+a22+2*a13+2*a23-a14-2*a34+a15+a35,-b21+b41+b51-b22+b42+b52+b13+b23-b24+b44+b54)
	m15 =strassenIt( -a12-a13-a14,2*b12+b32+2*b14+b34)
	m16 =strassenIt( a13+a23-a14-2*a24-2*a34+a25+a35,-b22+b42+b52)
	m17 =strassenIt( a34,b22-b42-b52-b53+2*b24-2*b44-2*b54-b25+b45+b55)
	m18 =strassenIt( -a21-a31-a12-a13+2*a23+a33-a14,b13+b23-b14-b24+b15+b25)
	m19 =strassenIt( -a21+2*a23,b12+b14)
	m20 =strassenIt( -a21+a22+a23+a25,b12)
	m21 =strassenIt( -a32-a34,-b12-b22+b52-2*b13-2*b23+b54-b15-b25)
	m22 =strassenIt( -a33-a24-a34+a25+a35,b12+2*b22-b42-2*b52+b53-b54+b55)
	m23 =strassenIt( a11-a12-a13+a33-a14,2*b11+b31)
	m24 =strassenIt( a33,b12-2*b22+b32+b42+2*b52)
	m25 =strassenIt( a14+2*a34-a15-a35,-b21+b41+b51-b22+b42+b52+b53-b24+b44+b54)
	m26 =strassenIt( a11-a12-2*a13-a14,b11+b31-b12+b13-b14)
	m27 =strassenIt( a14,-b21+b41+b51-b22+b42+b52-2*b13+b23-b33-b43-b53-b24+b44+b54)
	m28 =strassenIt( -a32-a35,b52+b54)
	m29 =strassenIt( -2*a34+a35,b53)
	m30 =strassenIt( -a11-a21+a12+a22+2*a13+2*a23+a14+a25,b41+b51-b12)
	m31 =strassenIt( -a11-a21+a12+2*a13+2*a23+a14,-b11-b21-b12-b22+b42+b52+b13+b23-b14-b24+b44+b54)
	m32 =strassenIt( a31-a32-2*a33-a34,b12+b53-b54+b15+b55)
	m33 =strassenIt( a24+2*a34-a25-a35,b22-b42-b52+b53)
	m34 =strassenIt( a22,-b22+b42+b52-b24+b44+b54)
	m35 =strassenIt( -a31+a32+2*a33+a24+a34-a25,b12+b53-b54+b55)
	m36 =strassenIt( a21+a31-a32-2*a23-2*a33-a34,b12+b13+b23-b24+b15+b25)
	m37 =strassenIt( a13-a14,2*b13+b33)
	m38 =strassenIt( a21+a31-a22-a32-2*a23-2*a33-a34,-b13-b23+b43+b53+b24-b44-b54-b25+b45+b55)
	m39 =strassenIt( a11+a31-a12-a32-2*a13-2*a33-a15-a35,3*b11+b31+b12+b13-2*b23+b33+b43+b53-b14+2*b24-b34-b44-b54+2*b15-2*b25+b35+b45+b55)
	m40 =strassenIt( a32-a14+a15+a35,b11+b21+b52-b13-b23+b54)
	m41 =strassenIt( a24-a25,-b12-b53+b54)
	m42 =strassenIt( a32-a24+a25+a35,-b12-b22+b52+b54)
	m43 =strassenIt( a23,b12-2*b13-b33+2*b14+b34)
	m44 =strassenIt( a22,b13+b23)
	m45 =strassenIt( -a13-a23-a14+a15,2*b11+b31+b12-2*b22+b32+b42+b52)
	m46 =strassenIt( -a12-a14,-b11-b21+b12-b22+b32+b13+b23+b14-b24+b34)
	m47 =strassenIt( a31-a32-a33-a35,b53-b54+b55)
	m48 =strassenIt( -a11-a31+a12+a32+3*a13+3*a33+a15+a35,2*b11+b31+b13-2*b23+b33+b43+b53-b14+2*b24-b34-b44-b54+b15-2*b25+b35+b45+b55)
	m49 =strassenIt( a22+a24,-b12-b22+b42+b52+b44+b54)
	m50 =strassenIt( a21-a22-2*a23,b13)
	m51 =strassenIt( a11+a21+a32-2*a13-2*a23-a14+a15+a35,-b11-b21-b22+b42+b52+b13+b23-b24+b44+b54)
	m52 =strassenIt( -a33+a14-a15,2*b11+b31+b12-2*b22+b32+b42+2*b52)
	m53 =strassenIt( -a11+a12+2*a13+a23+a14,2*b11+b31+b12)
	m54 =strassenIt( -a21-a31+a22+a32+3*a23+2*a33+a24+a34,2*b15+b35)
	m55 =strassenIt( a33,2*b12+b32+b53-b54+2*b15+b35+b55)
	m56 =strassenIt( -a14-a34+a15+a35,-2*b21+b41+2*b51+b12-b22+b42+b52+b13+b23+b53-b24+b44+b15+b55)
	m57 =strassenIt( a12+a13+a33+a14,2*b12+b32+b13+b23+b14-b24+b34+b15+b25)
	m58 =strassenIt( a12+a22+a32+a13+a23+a14+a25+a35,b12+b22)
	
c11 = -m1-m2-m5-m11-m14-m19+m23+m24-m25-m26-m28-m29-m31+m34-m40-m50-m51+m52
	c12 = -m4-m13-m15-m23-m24-m37+m43-m45-m52-m53
	c13 = -m5-m11-m14-m25-m27-m29+m37-m50
	c14 = m2+m4+m13+m19+m23+m24+m28+m31-m34+m37+m40-m43+m45+m46+m51+m52+m53
	c15 = m50+m51+m52+m53-m55+m57+m19+m15+m13+m14+m2+m3+m4+m5+m9+m11-m43+m45+m46+m47+m48+m40-m34+m37+m39+m31+m26+m27+m28+m29+m24+m25
	c21 = m6+m11+m19+m20+m26+m30+m31+m34+m44+m50+m53
	c22 = m4+m13+m15-m16-m20+m28+m29+m33+m37+m41+m42-m43+m58
	c23 = -m4+m8+m16-m29-m33-m37+m44+m50
	c24 = -m4+m16-m19+m20-m29-m33-m34-m37-m41+m43+m49
	c25 = -m8+m12-m32-m34-m35+m36+m38-m41-m44+m49+m54
	c31 = m1+m2-m3+m5-m7-m24+m25+m28+m29-m32-m34+m40-m52+m56
	c32 = -m22+m24-m28-m29-m33-m35-m41-m42-m47
	c33 = m2+m5-m7-m9+m10-m17+m29-m34-m37-m38-m50
	c34 = -m2-m5+m7+m15+m18+m19+m21+m22-m24+m29+m33+m34+m35+m36+m41+m42+m47+m57
	c35 = -2*m2-2*m5+2*m7+m17+m21+m22-m24+m32+m33+2*m34+m35+m41+m42+m55)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0)), axis=1)

	return result



def div3x5(a):

	col = len(a)/3
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35)

def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def mat356mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35 = div3x5(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56 = div5x6(b)


	m1 =strassenItmod2( a14^a25,b42^b52^b44^b54^b45^b55^b56)
	m2 =strassenItmod2( a13,b31^b51^b32^b42^b52^b33^b35^b55)
	m3 =strassenItmod2( a12^a22^a32^a23^a33,b32^b24^b34^b25^b35^b26^b36)
	m4 =strassenItmod2( a21^a23^a25,b33^b35)
	m5 =strassenItmod2( a13^a33,b21^b31^b32^b33^b34^b25^b35)
	m6 =strassenItmod2( a22^a23^a24,b42^b43^b46)
	m7 =strassenItmod2( a21^a13^a23,b21^b31^b33^b25)
	m8 =strassenItmod2( a11^a25^a35,b51^b12^b23^b53^b14^b15^b25)
	m9 =strassenItmod2( a22,b22^b32^b33^b24^b34^b35^b26^b36)
	m10 =strassenItmod2( a12^a15,b52^b53^b54^b55^b56)
	m11 =strassenItmod2( a15^a35,b51^b22^b52^b23^b53^b24^b54^b55)
	m12 =strassenItmod2( a11,b11^b51^b12^b23^b53^b14^b15^b25^b16)
	m13 =strassenItmod2( a21,b11^b21^b31^b41^b15^b25^b35^b45)
	m14 =strassenItmod2( a25^a35,b52^b23^b53^b14^b15^b25^b56)
	m15 =strassenItmod2( a11^a31^a14^a34,b41^b45)
	m16 =strassenItmod2( a25^a35,b12^b52^b23^b53^b14^b54^b15^b25^b55)
	m17 =strassenItmod2( a13^a15^a25^a35,b51^b42^b52^b55)
	m18 =strassenItmod2( a11^a31^a22^a32^a23^a33,b21^b12^b13^b14^b15^b25^b16)
	m19 =strassenItmod2( a21^a31^a23^a33^a25^a35,b23^b14^b15^b25)
	m20 =strassenItmod2( a11^a31,b11^b21^b41^b12^b15^b25^b45)
	m21 =strassenItmod2( a24^a34,b12^b42^b43^b14^b44^b15^b45^b16)
	m22 =strassenItmod2( a11^a25^a35,b23^b53^b14^b15^b25^b55)
	m23 =strassenItmod2( a22^a23^a33,b32^b33^b24^b25^b35^b26^b36)
	m24 =strassenItmod2( a12^a22^a32^a13^a23^a33^a14,b32^b34^b35^b36)
	m25 =strassenItmod2( a21^a23^a33,b33^b14^b15^b35)
	m26 =strassenItmod2( a23^a33,b12^b22^b32^b33^b14^b24^b34^b15^b35)
	m27 =strassenItmod2( a22^a23^a33,b22^b33^b24)
	m28 =strassenItmod2( a23^a33,b22^b32^b33^b14^b15^b25^b26^b36)
	m29 =strassenItmod2( a14,b41^b52^b43^b54^b45^b55^b56)
	m30 =strassenItmod2( a11^a31,b11^b21^b12^b13^b14^b15^b25)
	m31 =strassenItmod2( a25,b42^b33^b34^b54)
	m32 =strassenItmod2( a25,b34^b44^b54^b35^b45^b55)
	m33 =strassenItmod2( a12^a32^a14^a34^a15^a35,b42^b44^b45)
	m34 =strassenItmod2( a21^a31^a23^a33^a25^a35,b12^b23^b14^b15^b25)
	m35 =strassenItmod2( a13^a25,b42^b52^b34^b35)
	m36 =strassenItmod2( a11,b11^b51^b13^b15^b55)
	m37 =strassenItmod2( a13^a25,b51^b33^b35^b55)
	m38 =strassenItmod2( a12^a32^a15^a35,b22^b42^b23^b24^b44^b45)
	m39 =strassenItmod2( a14^a24^a34^a15^a25^a35,b22^b32^b42^b24^b34^b25^b35^b26^b36)
	m40 =strassenItmod2( a22^a13^a23,b21^b33^b25)
	m41 =strassenItmod2( a21^a31^a24^a34,b12^b14^b15^b16)
	m42 =strassenItmod2( a22^a23^a14,b32^b42^b43^b34^b44^b35^b45^b36^b46)
	m43 =strassenItmod2( a21^a24,b41^b42^b44^b45)
	m44 =strassenItmod2( a12^a15^a35,b22^b23^b53^b24)
	m45 =strassenItmod2( a22^a23^a25,b33^b34^b44^b45)
	m46 =strassenItmod2( a22^a23,b32^b42^b33^b43^b34^b44^b35^b45^b36^b46)
	m47 =strassenItmod2( a14,b41^b32^b52^b34^b54^b35^b55^b36^b46^b56)
	m48 =strassenItmod2( a31^a22^a32^a23^a33,b12^b13^b14^b15^b16)
	m49 =strassenItmod2( a12^a32^a14^a24^a34^a15^a25^a35,b22^b32^b42^b24^b34^b44^b25^b35^b45^b26^b36)
	m50 =strassenItmod2( a22^a23^a24,b42^b43^b44^b45^b46)
	m51 =strassenItmod2( a21,b11^b21^b31^b41^b42^b33^b44^b25^b45)
	m52 =strassenItmod2( a11^a13^a15,b51^b55)
	m53 =strassenItmod2( a21^a24^a34,b41^b12^b42^b14^b44^b15^b45^b16)
	m54 =strassenItmod2( a12,b21^b23^b53^b25)
	m55 =strassenItmod2( a13,b31^b51^b33^b35^b55)
	m56 =strassenItmod2( a11^a31^a12^a32^a13^a33,b21^b25)
	m57 =strassenItmod2( a12^a15^a25,b52^b23^b53^b54^b25^b55^b56)
	m58 =strassenItmod2( a14^a15^a25^a35,b42^b52^b54^b55^b56)
	m59 =strassenItmod2( a22^a32^a23^a33,b12^b22^b13^b14^b24^b15^b16)
	m60 =strassenItmod2( a12,b21^b22^b52^b23^b53^b54^b25^b55^b56)
	m61 =strassenItmod2( a14^a34,b41^b43)
	m62 =strassenItmod2( a12^a22^a32^a14^a24^a34^a15^a25^a35,b22^b32^b24^b34^b25^b35^b26^b36)
	m63 =strassenItmod2( a11^a15^a25,b51^b23^b53^b25)
	m64 =strassenItmod2( a12^a14^a15,b52^b54^b55^b56)
	m65 =strassenItmod2( a11^a21^a31^a24^a34,b41^b12^b14^b15^b45^b16)
	m66 =strassenItmod2( a21^a14^a24,b42^b44)
	m67 =strassenItmod2( a21^a31^a22^a32^a23^a33,b12^b13^b23^b14^b15^b25^b16)
	m68 =strassenItmod2( a22^a23^a34,b42^b43^b46)
	m69 =strassenItmod2( a21^a31^a12^a32^a23^a33^a15^a25,b23^b25)
	m70 =strassenItmod2( a21^a23^a33,b21^b31^b12^b25^b35)
	m71 =strassenItmod2( a22^a32^a23^a33,b24^b25^b26)
	
c11 = m1^m12^m15^m31^m32^m37^m41^m43^m54^m55^m57^m63^m64^m65^m66
	c12 = m2^m8^m14^m16^m17^m22^m52^m54^m55^m58^m60^m64
	c13 = m10^m15^m18^m40^m41^m42^m43^m46^m47^m48^m54^m56^m64^m65^m66
	c14 = m11^m12^m14^m17^m18^m22^m29^m31^m35^m36^m37^m40^m42^m44^m46^m47^m48^m56^m58^m60^m64
	c15 = m1^m12^m18^m29^m31^m32^m36^m37^m40^m42^m46^m47^m48^m52^m54^m56^m57^m63^m64
	c16 = m1^m2^m3^m8^m11^m15^m16^m24^m32^m35^m41^m43^m44^m47^m54^m55^m57^m60^m63^m65^m66^m71
	c21 = m7^m9^m31^m32^m33^m37^m40^m43^m49^m51^m55^m62
	c22 = m2^m4^m5^m6^m7^m23^m26^m28^m33^m35^m45^m49^m50^m55^m62^m70
	c23 = m1^m9^m10^m21^m33^m42^m43^m46^m47^m48^m49^m53^m57^m61^m62^m67^m69
	c24 = m6^m13^m23^m25^m27^m28^m29^m31^m33^m42^m45^m46^m47^m49^m50^m51^m62^m66
	c25 = m4^m9^m13^m29^m31^m32^m33^m42^m46^m47^m49^m51^m62^m66
	c26 = m1^m2^m5^m7^m9^m21^m25^m26^m27^m32^m35^m42^m43^m47^m50^m53^m55^m61^m70
	c31 = m53^m55^m57^m59^m64^m69^m70^m18^m12^m1^m7^m8^m41^m43^m44^m40^m34^m37^m38^m31^m32^m33^m27^m30^m25
	c32 = m2^m3^m4^m5^m6^m7^m14^m16^m19^m23^m33^m34^m35^m39^m45^m49^m50^m54^m55^m58^m60^m64^m70
	c33 = m10^m27^m33^m38^m41^m42^m43^m44^m46^m47^m48^m53^m59^m61^m64
	c34 = m49^m50^m53^m54^m58^m59^m60^m64^m65^m66^m20^m12^m14^m3^m6^m42^m45^m46^m47^m48^m36^m39^m31^m33^m27^m29^m30^m22^m23
	c35 = m53^m57^m59^m64^m65^m66^m69^m19^m20^m12^m1^m4^m42^m44^m46^m47^m48^m36^m38^m31^m32^m33^m27^m29^m30^m22^m25
	c36 = m49^m50^m53^m54^m55^m57^m58^m60^m61^m68^m69^m70^m71^m16^m2^m3^m5^m6^m7^m41^m42^m43^m44^m47^m34^m35^m38^m39^m32^m25)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div3x6(a):

	col = len(a)/3
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36)

def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)

def mat366mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26, a31, a32, a33, a34, a35, a36 = div3x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a32^a36,b61^b64^b66)
	m2 =strassenItmod2( a23^a33^a25^a35,b12^b52^b13^b53^b14^b54^b15^b55)
	m3 =strassenItmod2( a35,b34^b46^b56)
	m4 =strassenItmod2( a23^a33^a25,b12^b22^b42^b52^b13^b23^b33^b43^b53^b63^b14^b24^b44^b54^b15^b25^b45^b55^b36^b66)
	m5 =strassenItmod2( a23^a26,b62^b13^b64^b65^b16^b66)
	m6 =strassenItmod2( a22^a24,b22^b13^b23^b63^b24^b65^b16^b26)
	m7 =strassenItmod2( a11^a12^a23^a24,b11^b51^b12^b52^b13^b53^b16^b56)
	m8 =strassenItmod2( a14^a24^a15^a25,b41^b44^b46)
	m9 =strassenItmod2( a34,b22^b42^b24^b25^b45^b26)
	m10 =strassenItmod2( a22^a32^a23^a33^a24^a34^a26^a36,b13^b23^b63^b65^b16^b26)
	m11 =strassenItmod2( a24,b12^b32^b52^b62^b14^b34^b54^b64^b25^b45^b26^b46)
	m12 =strassenItmod2( a31^a12^a23^a24^a16^a36,b61^b64)
	m13 =strassenItmod2( a33,b32^b62^b34^b64^b35^b65^b36^b66)
	m14 =strassenItmod2( a11^a21^a12^a22^a32^a16^a26^a36,b11^b14^b16)
	m15 =strassenItmod2( a11^a12^a14^a15,b32^b52^b35^b55)
	m16 =strassenItmod2( a11^a12^a24^a25,b31^b41^b23^b33^b43^b63^b15^b55^b16^b26^b36^b46^b66)
	m17 =strassenItmod2( a21^a31^a25^a35,b13^b23^b63^b15^b25^b65)
	m18 =strassenItmod2( a13^a23^a33^a14^a24^a34^a15^a25,b34^b44^b54)
	m19 =strassenItmod2( a31^a16^a26^a36,b11^b61^b64)
	m20 =strassenItmod2( a32,b61^b64^b26^b66)
	m21 =strassenItmod2( a12^a14,b45)
	m22 =strassenItmod2( a12^a22,b24)
	m23 =strassenItmod2( a21^a31^a22^a32^a24^a34^a25^a35,b13^b23^b63^b25^b65^b16)
	m24 =strassenItmod2( a12^a23^a33^a24^a16,b32^b62^b64^b35^b65^b66)
	m25 =strassenItmod2( a11^a21^a31^a12^a22^a32^a16^a26^a36,b11^b21^b14^b24^b16)
	m26 =strassenItmod2( a16^a26^a36,b11^b21^b64^b26^b66)
	m27 =strassenItmod2( a31,b61^b64^b16)
	m28 =strassenItmod2( a11^a21^a31^a16^a26^a36,b11^b21^b24)
	m29 =strassenItmod2( a13^a16,b35^b55)
	m30 =strassenItmod2( a31^a32^a34^a35,b12^b13^b14^b15)
	m31 =strassenItmod2( a33^a34,b34)
	m32 =strassenItmod2( a11^a21,b14)
	m33 =strassenItmod2( a16,b32^b62^b35^b65)
	m34 =strassenItmod2( a13^a23^a33^a15^a25,b31^b41^b51^b34^b36)
	m35 =strassenItmod2( a11^a13^a23^a14^a24^a15,b31^b32^b33^b35^b36)
	m36 =strassenItmod2( a11^a13^a15^a16,b55)
	m37 =strassenItmod2( a12^a14,b31^b41^b33^b43^b36^b46)
	m38 =strassenItmod2( a11^a25,b31^b41^b51^b13^b23^b33^b43^b53^b63^b16^b26^b36^b46^b56^b66)
	m39 =strassenItmod2( a11^a12^a24^a34^a25^a35,b22^b32^b42^b62^b24^b64)
	m40 =strassenItmod2( a11^a15,b31^b51^b33^b53^b36^b56)
	m41 =strassenItmod2( a13^a23^a33^a34^a15^a25,b41^b34^b46)
	m42 =strassenItmod2( a12^a22^a32^a16^a26^a36,b11^b21^b14^b16^b26)
	m43 =strassenItmod2( a11^a25^a35,b12^b22^b32^b42^b52^b62^b14^b24^b64)
	m44 =strassenItmod2( a23^a33^a26^a36,b13^b23^b63^b16^b26^b66)
	m45 =strassenItmod2( a25,b22^b42^b13^b23^b33^b43^b53^b63^b24^b44^b25^b45^b16^b36^b56^b66)
	m46 =strassenItmod2( a13^a23^a33^a15^a25^a35,b51^b34^b46)
	m47 =strassenItmod2( a11,b12^b22^b42^b52^b15^b35^b55^b65)
	m48 =strassenItmod2( a12^a14,b42^b52^b45^b55)
	m49 =strassenItmod2( a11^a12^a24^a25^a35,b22^b32^b42^b62^b24^b64^b15^b55^b16)
	m50 =strassenItmod2( a12^a32^a23^a33^a24^a34^a16^a36,b62^b63^b64^b65)
	m51 =strassenItmod2( a12^a16,b35^b65)
	m52 =strassenItmod2( a11,b15^b55)
	m53 =strassenItmod2( a21^a25,b12^b63^b14^b65)
	m54 =strassenItmod2( a13^a23^a33,b31^b41^b51^b44^b46)
	m55 =strassenItmod2( a11^a12^a24^a25,b15^b55^b16)
	m56 =strassenItmod2( a24^a25,b12^b22^b32^b42^b52^b62^b23^b43^b14^b24^b34^b44^b54^b64^b25^b45)
	m57 =strassenItmod2( a24,b22^b42^b24^b44^b25^b45^b26^b46)
	m58 =strassenItmod2( a15^a25,b31^b41^b51^b34^b44^b54^b36^b46^b56)
	m59 =strassenItmod2( a34^a35,b34^b46)
	m60 =strassenItmod2( a21^a22^a23^a24^a25^a26,b13^b63^b65^b16)
	m61 =strassenItmod2( a11^a12^a13^a14^a15^a16,b32^b35)
	m62 =strassenItmod2( a31^a32^a23^a34^a35^a26,b13^b16)
	m63 =strassenItmod2( a32^a23^a33^a34^a26^a36,b62^b13^b23^b63^b64^b65^b16^b26)
	m64 =strassenItmod2( a16^a26,b64)
	m65 =strassenItmod2( a32^a16^a26^a36,b21^b61^b64^b26^b66)
	m66 =strassenItmod2( a35,b12^b52^b14^b34^b15^b55^b16^b46^b56)
	m67 =strassenItmod2( a23^a33^a34^a25,b22^b32^b42^b62^b23^b43^b24^b34^b44^b64^b25^b45)
	m68 =strassenItmod2( a12^a23^a33^a24^a34^a16,b32^b62^b64)
	m69 =strassenItmod2( a23^a25,b32^b62^b33^b63^b34^b64^b36^b66)
	m70 =strassenItmod2( a12^a23^a24,b11^b12^b13^b21^b22^b23^b31^b32^b33^b16^b26^b25^b61^b62^b63^b65^b66^b56^b51^b52^b53^b46^b45^b41^b42^b43^b36^b35)
	m71 =strassenItmod2( a23^a33^a24^a34,b22^b42^b23^b43^b24^b44^b25^b45)
	m72 =strassenItmod2( a12^a24,b15^b25^b35^b45^b55^b65^b16^b26^b66)
	m73 =strassenItmod2( a21^a31^a32^a34^a25^a35,b12^b13^b23^b63^b14^b15^b25^b65)
	m74 =strassenItmod2( a13^a23^a33^a14^a24^a15^a25,b44^b46)
	m75 =strassenItmod2( a12^a23^a24^a16,b61^b62^b63^b35^b66)
	m76 =strassenItmod2( a11^a21^a31^a12^a22^a16^a26^a36,b21^b24)
	m77 =strassenItmod2( a13^a23^a33^a14^a24^a34^a15^a25^a35,b34^b54^b46)
	m78 =strassenItmod2( a13^a23^a15^a25,b31^b34^b36)
	m79 =strassenItmod2( a11^a12,b22^b42^b35^b65)
	m80 =strassenItmod2( a12^a23^a24^a16,b61^b32^b62^b35^b65^b66)
	m81 =strassenItmod2( a23^a33,b12^b22^b32^b42^b52^b62^b13^b23^b33^b43^b53^b63^b14^b24^b34^b44^b54^b64^b15^b25^b35^b45^b55^b65)
	m82 =strassenItmod2( a13^a23^a33^a14^a24^a34,b41^b34^b44^b54^b46)
	m83 =strassenItmod2( a12,b25^b35^b45^b65)
	m84 =strassenItmod2( a32^a34,b12^b22^b62^b13^b23^b63^b14^b24^b64^b15^b25^b65)
	m85 =strassenItmod2( a23^a24,b21^b41^b22^b42^b23^b43^b25^b35^b45^b65^b26^b46)
	m86 =strassenItmod2( a21^a32^a33^a34^a25^a36,b63^b65)
	
c11 = m51^m52^m54^m55^m57^m67^m68^m69^m70^m71^m16^m13^m7^m8^m45^m47^m78^m79^m80^m83^m85^m74^m34^m38^m31^m33^m24
	c12 = m15^m21^m29^m33^m36^m47^m48^m51^m52^m61^m79
	c13 = m51^m52^m56^m57^m58^m61^m69^m16^m18^m13^m4^m11^m41^m78^m80^m81^m82^m83^m72^m75^m40^m35^m37^m38^m31
	c14 = m3^m8^m11^m18^m33^m41^m43^m47^m49^m51^m52^m55^m56^m57^m66^m67^m68^m71^m79^m82
	c15 = m21^m29^m36^m51^m52^m83
	c16 = m4^m8^m11^m18^m24^m34^m41^m45^m51^m52^m54^m55^m56^m58^m67^m68^m71^m72^m74^m81^m82^m83
	c21 = m51^m52^m55^m57^m64^m67^m68^m69^m70^m71^m19^m16^m12^m7^m45^m47^m76^m79^m83^m85^m38^m31^m33^m28^m22
	c22 = m3^m6^m10^m22^m32^m33^m43^m47^m49^m50^m51^m52^m53^m55^m63^m64^m66^m75^m79^m80^m86
	c23 = m50^m51^m52^m55^m56^m57^m60^m63^m65^m69^m19^m12^m13^m14^m1^m4^m5^m10^m11^m42^m76^m81^m83^m86^m72^m75^m32^m28^m22
	c24 = m3^m11^m22^m31^m32^m33^m43^m47^m49^m51^m52^m55^m56^m57^m64^m66^m67^m68^m71^m79
	c25 = m50^m51^m52^m53^m55^m62^m63^m65^m19^m12^m14^m1^m5^m10^m42^m76^m83^m86^m72^m73^m75^m32^m28^m30^m22^m23
	c26 = m51^m52^m55^m56^m65^m67^m68^m71^m19^m12^m13^m14^m1^m4^m11^m42^m45^m76^m80^m81^m83^m72^m31^m32^m28^m22
	c31 = m12^m13^m19^m20^m24^m26^m34^m41^m46^m59^m64^m65^m78^m80
	c32 = m3^m14^m17^m19^m20^m25^m26^m27^m39^m49^m50^m53^m55^m64^m65^m66^m68^m73^m75^m76^m80^m84^m86
	c33 = m1^m2^m3^m4^m5^m9^m12^m13^m18^m20^m24^m27^m44^m50^m59^m62^m63^m66^m67^m68^m69^m74^m75^m77
	c34 = m14^m18^m19^m20^m25^m26^m27^m31^m59^m64^m65^m74^m76^m77
	c35 = m1^m5^m9^m12^m17^m20^m24^m27^m30^m39^m44^m49^m50^m53^m55^m62^m63^m68^m73^m75^m86
	c36 = m1^m3^m12^m13^m20^m24^m27^m31^m59^m80)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0)), axis=1)

	return result



def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)def mat444mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44 = div4x4(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44 = div4x4(b)


	m1 =strassenItmod2( -a32^a42^a33-a43^a34-a44,2*b12-b22-b32-b42-2*b14^b24^b34^b44)
	m2 =strassenItmod2( a31-2*a32^2*a33^2*a34,-b12^b13^b14)
	m3 =strassenItmod2( -2*a22^a23^a24,-b41^b42)
	m4 =strassenItmod2( a11^a21^a31-a41-3*a12-3*a22-3*a32^3*a42^2*a13^2*a23^2*a33-2*a43,-2*b22-2*b32^2*b23^2*b33^b24^b34)
	m5 =strassenItmod2( -a21-3*a22^a42^a23-a43,-b11^b21^2*b31^b22^2*b32-3*b13-b14)
	m6 =strassenItmod2( -a11-a21-2*a12-2*a22,b11-b21-2*b31^b41)
	m7 =strassenItmod2( -a11-a13-a14,-b12^b22^2*b32)
	m8 =strassenItmod2( -a11-a21-a31^a41^a12^3*a22^a32-3*a42-a13-2*a23-a33^2*a43,b11-2*b12-2*b22-2*b32^b13^2*b23^2*b33^b14^b24^b34)
	m9 =strassenItmod2( -2*a12^a13,-2*b11^b21^b31^b41)
	m10 =strassenItmod2( -2*a22^a23^a44,b41^2*b12-b22-b32^b42-6*b13^3*b23^3*b33-2*b14^b24^b34)
	m11 =strassenItmod2( -a12-a32^a13^a33,-2*b11^2*b21^4*b31^2*b41^2*b12-2*b22-4*b32-2*b42-b14^b24^2*b34^b44)
	m12 =strassenItmod2( 2*a22-a23,-b31^b41-b32^b42)
	m13 =strassenItmod2( a42-a43-a44,-2*b13^b23^2*b33)
	m14 =strassenItmod2( 2*a32^2*a42-a33-a43-a34-a44,-b13^b23^b33)
	m15 =strassenItmod2( -a12-a32^a13^a33-a14^a24-a34-a44,-b11^b21^2*b31^2*b41^2*b12-2*b22-4*b32-2*b42-b13^b23^2*b33-b14^b24^2*b34^b44)
	m16 =strassenItmod2( -a41^2*a42-2*a43-2*a44,b12-b22-b32-2*b13^2*b23^2*b33-b14^b24^b34)
	m17 =strassenItmod2( -a21-2*a22,b11-b21-2*b31-b12^b22^2*b32)
	m18 =strassenItmod2( a21-a41-3*a22^3*a42^2*a23-2*a43,b11-2*b12^b13^b14)
	m19 =strassenItmod2( a41^a43^a44,-b22-b32^2*b23^2*b33^b24^b34)
	m20 =strassenItmod2( -a11^a21-5*a12^5*a22-a32-a42^2*a13-2*a23^a33^a43-a34-a44,b22^2*b32-2*b13-b14)
	m21 =strassenItmod2( -a32^a42^a33-a43,b32-b42-b34^b44)
	m22 =strassenItmod2( a11^a21^a31-a41-a12-a22-a32^a42^a13^a23^a33-a43,-2*b12-2*b22-2*b32^2*b13^2*b23^2*b33^b14^b24^b34)
	m23 =strassenItmod2( -a11-a21-3*a12-a22^a13,2*b11-b21-2*b31-b32^b42)
	m24 =strassenItmod2( -a32^a33,2*b12-b22-2*b32-2*b13^b23^2*b33-2*b14^b24^2*b34)
	m25 =strassenItmod2( a12-a22^a32^a42-a13^a23-a33-a43^a14-a24^a34^a44,-b11^b21^2*b31^2*b12-2*b22-4*b32-b13^b23^2*b33-b14^b24^2*b34)
	m26 =strassenItmod2( a24-a44,-b41^b43)
	m27 =strassenItmod2( -a11-a31^a12^a32-a13-a33,-b11^b13)
	m28 =strassenItmod2( -2*a22^2*a42^a23-a43,b11^b21^b31-2*b12-2*b22-2*b32^b13^b23^b33^b14^b24^b34)
	m29 =strassenItmod2( -a41-2*a32^a33-a43^a34-a44,-b22-b32-b13^2*b23^2*b33^b24^b34)
	m30 =strassenItmod2( a12^a32-a13-a33^a14^a34,2*b41-2*b42^b44)
	m31 =strassenItmod2( a22-a42-a23^a43,b11-b21-2*b31-b13^b23^2*b33)
	m32 =strassenItmod2( a11^a21^3*a12^3*a22-a13-a23,-b32^b42)
	m33 =strassenItmod2( a32-a42-a33^a43^a44,2*b12-b22-b32-b42-2*b13^b23^2*b33-2*b14^b24^b34^b44)
	m34 =strassenItmod2( -a11-3*a12^a13,-2*b11^b21^2*b31)
	m35 =strassenItmod2( a44,-b33^b43)
	m36 =strassenItmod2( -a11-5*a12^2*a22-a32^2*a13-a23^a33-a34-a44,b41-b22-2*b32^b23^b33^b14)
	m37 =strassenItmod2( -a11-a21-2*a22-a13-a14,b41^b12-b22-2*b32)
	m38 =strassenItmod2( a11^5*a12^a32-2*a13-a33^a34,b41-2*b13^b23^b33)
	m39 =strassenItmod2( -a21-a22,-2*b11^b21^2*b31-2*b12^b22^2*b32)
	m40 =strassenItmod2( -2*a12^a13^a14,b12-b22-2*b32^b42)
	m41 =strassenItmod2( a14-a24^a34^a44,-b11^b21^2*b31^b41^2*b12-2*b22-4*b32-2*b42-b13^b23^2*b33^b43-b14^b24^2*b34^b44)
	m42 =strassenItmod2( -a11-3*a12-a32^a13^a33,-b11^b21^2*b31^b41-3*b13^b23^b33)
	m43 =strassenItmod2( 2*a32-a33-a34,-b22-b32^b23^b33^b24^b34)
	m44 =strassenItmod2( a34,2*b12-b22-b32-b42-2*b13^b23^b33^b43-2*b14^b24^b34^b44)
	m45 =strassenItmod2( 2*a12-2*a22-a13^a23^a34^a44,2*b12^b32^b42-6*b13^2*b23^2*b33-3*b14^b24^b34)
	m46 =strassenItmod2( a11^a21^a12^a22,-2*b12^b22^b32^b42)
	m47 =strassenItmod2( a31^a41^a33^a43^a34^a44,b13)
	m48 =strassenItmod2( -2*a12-2*a32^a13^a33,-b21-b31^b23^b33)
	m49 =strassenItmod2( a11^a21^a13^a23^a14^a24,b41)
	
c11 = m6-m7-m9-m17^m34-m37
	c12 = -m7-m23-m34-m39^m40-m46
	c13 = m1^m6-m7-m11^m13^m15-m17^m26^m33-m37^m38^m41^m42-m44
	c14 = -m1-2*m6-m10^m11-m13^2*m17-m23-m24^m30-m33-m34-m36^2*m37-3*m38-m39^2*m40-2*m42^m45-m46
	c21 = m7^m12^m17-m23-m32-m34^m37^m49
	c22 = m3^m7^m23^m32^m34^m37^m39^m49
	c23 = m5^m7-m13^m17^m20^m26-m31^m35^m36^m37^m38^m49
	c24 = 2*m3-2*m5-m10^m13^m15-2*m17-3*m20^m21^m23^m24^m25^m30^m31^m32^m33^m34-3*m36-3*m38^m39
	c31 = m9-m19^m27-m29-m34^m38^m42-m43^m47^m48
	c32 = m2^m4^m8-m10^m18-m19^m23^m27-m29^m34-m36-m38^m39^m45^m46^m47
	c33 = -m1-m13-m19-m29-m33-m43^m44^m47
	c34 = m1^2*m2^m4^m8-m10^m13^m18^m23^m24^m27^m33^m34-m36-m38^m39^2*m43^m45^m46
	c41 = -m5^m8^m12^m14^m19-m20^m22-m23^m27^m28^m29-m32-m34-m36-m38^m43
	c42 = m8^m10^m16^m18^m19^m20^m22^m23^m27^m32^m34^m36^m38^m39
	c43 = -m13^m14^m19^m29^m35^m43
	c44 = m8^m10^m13-2*m14^2*m16^m18^m20^m21^m22^m23^m24^m27-2*m29^m32^m33^m34^m36^m38^m39-2*m43)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0), np.concatenate(c13, c23, c33, c43), axis=0), np.concatenate(c14, c24, c34, c44), axis=0)), axis=1)

	return result



def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)def mat444(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44 = div4x4(a)
	b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44 = div4x4(b)


	m1 =strassenIt( a14,b31+b12+b22+b42+b13+b23+b33+b43+b14+b24+b34+b44)
	m2 =strassenIt( a41+a42+a23+a43+a14,b31+b12+b22+b42+b13+b23+b33+b43+b34)
	m3 =strassenIt( a41+a43+a44,b11+b21+b41+b12+b22+b42+b24+b34)
	m4 =strassenIt( a11+a33+a14,b11+b31+b12+b32)
	m5 =strassenIt( a41+a22+a24+a34+a44,b11+b21+b22+b32+b42+b43+b14+b24)
	m6 =strassenIt( a42+a43,b21+b31+b12+b22+b42+b13+b33+b43+b24+b34)
	m7 =strassenIt( a33,b11+b21+b12+b32+b23+b33+b24+b34)
	m8 =strassenIt( a11+a21+a31+a23+a14,b12+b32)
	m9 =strassenIt( a41+a12+a33+a43+a14,b21+b31+b23+b33+b24+b34)
	m10 =strassenIt( a41+a23+a24+a34+a44,b11+b21+b41+b22+b32+b42+b14+b24+b44)
	m11 =strassenIt( a41+a43,b11+b31+b41+b12+b22+b42+b23+b33+b24+b34)
	m12 =strassenIt( a34,b11+b21+b12+b32+b43+b44)
	m13 =strassenIt( a31+a12+a32+a33+a14,b21+b32)
	m14 =strassenIt( a11+a21+a31+a22+a32+a33+a14,b11+b32+b14)
	m15 =strassenIt( a11+a23+a14,b31+b32+b14)
	m16 =strassenIt( a41+a12+a42+a13+a23+a43+a14,b31+b32+b34)
	m17 =strassenIt( a41+a12+a32+a43+a14,b22+b32)
	m18 =strassenIt( a21+a23+a34,b11+b21+b41+b12+b32)
	m19 =strassenIt( a11+a21+a31+a12+a32+a13+a23+a33+a14,b32)
	m20 =strassenIt( a31+a33+a34,b11+b21+b12+b32)
	m21 =strassenIt( a41+a22+a42+a43+a24+a34+a44,b11+b21+b41+b22+b32+b14+b24+b44)
	m22 =strassenIt( a41+a12+a42+a33+a14,b21+b31+b22+b32+b24+b34)
	m23 =strassenIt( a11+a13+a14,b31+b32)
	m24 =strassenIt( a41+a44,b11+b21+b12+b22+b42+b43+b24+b34)
	m25 =strassenIt( a41+a43+a14,b11+b21+b41+b12+b22+b42)
	m26 =strassenIt( a31+a22+a32+a33+a24,b11+b21+b32+b14)
	m27 =strassenIt( a31+a32+a33,b11+b21+b12+b32+b13+b14)
	m28 =strassenIt( a21+a23,b21+b41+b12+b32+b13+b14)
	m29 =strassenIt( a11+a14,b31+b12+b32+b13+b14)
	m30 =strassenIt( a12+a13,b31+b33+b34)
	m31 =strassenIt( a41+a33+a44,b11+b21+b12+b22+b24+b34)
	m32 =strassenIt( a22+a23,b11+b22+b32+b42+b23+b43+b14)
	m33 =strassenIt( a41+a22+a42+a43+a24,b11+b21+b41+b32+b14+b44)
	m34 =strassenIt( a41+a43+a34,b11+b21+b41+b12+b32+b42)
	m35 =strassenIt( a12+a14,b31+b22+b23+b33+b24+b34)
	m36 =strassenIt( a41+a22+a42+a43+a14,b11+b21+b41+b32+b14+b24+b44)
	m37 =strassenIt( a41+a22+a32+a33+a24+a34+a44,b11+b21+b22+b32+b14+b24)
	m38 =strassenIt( a22+a24,b11+b21+b32+b42+b43+b14)
	m39 =strassenIt( a41+a23+a44,b11+b21+b41+b12+b22+b42+b24+b34+b44)
	m40 =strassenIt( a41+a23+a14,b11+b21+b41+b12+b22+b42+b14+b24+b44)
	m41 =strassenIt( a11+a21+a31+a32+a23+a33+a14,b11+b12+b32+b13+b14)
	m42 =strassenIt( a21+a23+a24,b11+b21+b41+b32+b14)
	m43 =strassenIt( a21+a23+a14,b11+b21+b41+b32)
	m44 =strassenIt( a41+a12+a42+a43+a14,b31+b32+b24+b34)
	m45 =strassenIt( a32+a33,b11+b21+b12+b32+b13+b23+b14+b24)
	m46 =strassenIt( a41+a42+a43,b31+b12+b22+b42+b13+b23+b33+b43+b24+b34)
	m47 =strassenIt( a23,b31+b12+b22+b42+b13+b23+b33+b43+b14)
	
c11 = m13+m19+m23+m27+m28+m29+m41+m43
	c12 = m4+m7+m9+m11+m13+m19+m25+m27+m28+m29+m35+m41+m43
	c13 = m2+m4+m7+m9+m11+m13+m15+m16+m19+m25+m27+m28+m30+m41+m43+m44+m46+m47
	c14 = m1+m2+m15+m16+m23+m44+m46+m47
	c21 = m14+m15+m26+m27+m28+m29+m41+m42
	c22 = m1+m2+m5+m10+m12+m18+m24+m33+m36+m38+m39+m43+m46+m47
	c23 = m1+m2+m5+m10+m12+m14+m15+m18+m24+m26+m27+m29+m32+m33+m36+m39+m41+m43+m46
	c24 = m1+m2+m33+m36+m42+m43+m46+m47
	c31 = m4+m8+m18+m20+m27+m28+m29+m41
	c32 = m4+m7+m8+m9+m11+m13+m17+m18+m27+m28+m29+m34+m35+m41
	c33 = m4+m5+m8+m9+m11+m13+m17+m18+m24+m26+m28+m29+m31+m34+m35+m37+m38+m41+m45
	c34 = m4+m5+m7+m8+m9+m11+m12+m13+m17+m18+m20+m24+m26+m27+m28+m29+m31+m34+m35+m37+m38+m41
	c41 = m1+m2+m3+m5+m7+m9+m11+m12+m21+m22+m24+m25+m31+m33+m34+m35+m38+m39+m40+m44+m46+m47
	c42 = m1+m2+m5+m12+m21+m24+m25+m33+m34+m38+m39+m40+m46+m47
	c43 = m1+m2+m5+m6+m7+m9+m12+m21+m22+m25+m31+m33+m34+m35+m38+m39+m40+m44+m47
	c44 = m1+m2+m3+m25+m39+m40+m46+m47)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41), axis=0), np.concatenate(c12, c22, c32, c42), axis=0), np.concatenate(c13, c23, c33, c43), axis=0), np.concatenate(c14, c24, c34, c44), axis=0)), axis=1)

	return result



def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def mat445mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44 = div4x4(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45 = div4x5(b)


	m1 =strassenItmod2( a41-a42,b14^b15)
	m2 =strassenItmod2( 2*a14-a34-a44,-b42-b43^b44)
	m3 =strassenItmod2( a11-a41^a42^a23^a43^a14^a24-a34,b11^b41-b22^b13-b33^b43^2*b14^b24-b34^3*b44-b35^b45)
	m4 =strassenItmod2( -2*a11-a21^a31^a41^2*a12^a22-a32-a42^a13^a23-a33^a14^a24-a34,-b32-b23-b24^b34-b25)
	m5 =strassenItmod2( a23,b11^b21-b31^b41^b13^b23-b33^b43^2*b14^2*b24-2*b34^2*b44)
	m6 =strassenItmod2( -2*a14-a24^a34^a44,-b32^b42-b33^b43-b35^b45)
	m7 =strassenItmod2( a11^a21-a31-a42-a43-a14-a24^a34,b11^b21^b13^b23^2*b14^2*b24)
	m8 =strassenItmod2( 2*a11^a21-a31-a41-2*a12-a22^a32^a42,b22-b32-b24^b34)
	m9 =strassenItmod2( -2*a11^a31^a41,-b12-b13^b14)
	m10 =strassenItmod2( a13-a33-a43,b11^b41^b12-b32^b42^b13-b33^b43^b14^b34^b44)
	m11 =strassenItmod2( 2*a13-a33-a43,-b21^b31-b22^b32-b23^b33-b24^b34)
	m12 =strassenItmod2( -a23^a44,b11^b21-b31^b41^b13^b23-b33^b43^2*b14^2*b24-2*b34^2*b44-b25^b35)
	m13 =strassenItmod2( -a11^a41^a12-a42^a14-2*a44,-b11-b21^b31-b41-b13-b23^b33-b43-2*b14-2*b24^2*b34-2*b44^b15^b25-b35^b45)
	m14 =strassenItmod2( -a12^a32^a42-a13^a33^a43-a14-a24^a34,-b21-b22-b23-b24^b25)
	m15 =strassenItmod2( a12^a13,b31^2*b34)
	m16 =strassenItmod2( -a21-a41^a22^a42^a23^a24,b11^b41^b13^b43^2*b14^3*b44^b45)
	m17 =strassenItmod2( a42^a43,b11^b21-b31^b41^b13^b23-b33^b43^4*b14^4*b24-3*b34^3*b44^3*b15^3*b25-b35^b45)
	m18 =strassenItmod2( a41-a42-a43-a44,b15)
	m19 =strassenItmod2( a13-a43^a14-a44,-b31-b32-b33-b34^b35)
	m20 =strassenItmod2( -a23-2*a14-a24^a34^a44,-b32-b33^b44-b35^b45)
	m21 =strassenItmod2( 2*a11^a21-a31-a41,b12^b22^b13^b23^b15^b25)
	m22 =strassenItmod2( a21^a41-a22-a42,b11^b41^b13^b43^3*b14^3*b44^b15^b45)
	m23 =strassenItmod2( a11-a41-a14^a44,b11^b21^b13^b23-b33^b43^2*b14^2*b24-b34^b44-b15-b25-b35^b45)
	m24 =strassenItmod2( -a12-2*a13^a33^a43,-b21^b31-b22-b23-b24^2*b34)
	m25 =strassenItmod2( -a21-a41^a22^a42^a23^a43^a24^a44,b41^b43^3*b44^b15^b45)
	m26 =strassenItmod2( -a23-a24,b11^b41^b13^b43^2*b14^2*b44)
	m27 =strassenItmod2( -a11^a31^a42^a43^a14-a34,b21^b22^b23^b24^b15)
	m28 =strassenItmod2( a11-a41-a12^a42,-b11^b31-b41-b13-b23^b33-b43-2*b14-b24^2*b34-2*b44^b15-b25-b35^b45)
	m29 =strassenItmod2( a14,b11^b41^2*b14^2*b44)
	m30 =strassenItmod2( a13^a23-a33^a14^a24-a34,b21-b31^b22-b32^b23-b33^b24-b34-b25^b35)
	m31 =strassenItmod2( -a42-a23-2*a43,b11^b21-b31^b41^b13^b23-b33^b43^4*b14^4*b24-3*b34^3*b44^2*b15^2*b25-b35^b45)
	m32 =strassenItmod2( a22^a42^2*a23^2*a43,b14^b24^b15^b25)
	m33 =strassenItmod2( a11^a21-a31-a12-a22^a32-a13-a23^a33-a14-a24^a34,b23^b24^b25)
	m34 =strassenItmod2( a11-a41^a42,b11^b41^b13^b23-b33^b43^3*b14^b24-b34^3*b44^b15^b25-b35^b45)
	m35 =strassenItmod2( -a22-a42-a23-a43,-b11-b21-b13-b23-2*b14-2*b24^b15^b25)
	m36 =strassenItmod2( -a11^a31^a41^a14-a34-a44,b41^b42^b43^b44^b15)
	m37 =strassenItmod2( a11-a31-2*a12^a32-2*a13^a33-a14^a34,b21^b22^b23^b24)
	m38 =strassenItmod2( a11-a41^a14^a24-a34,-b12-b22-b33^b43^b14^b24-b34^b44-b35^b45)
	m39 =strassenItmod2( -a11^a41,b13^b23-b33^b43^b14^b24-b34^b44^b15^b25-b35^b45)
	m40 =strassenItmod2( a44,-b11-b21^b31-b41-b13-b23^b33-b43-2*b14-2*b24^2*b34-2*b44^b15^b25-b35^b45)
	m41 =strassenItmod2( a12,-b21^b31-2*b24^2*b34)
	m42 =strassenItmod2( -a42-2*a43,b11^b21-b31^b41^b13^b23-b33^b43^3*b14^3*b24-3*b34^3*b44^b15^b25-b35^b45)
	m43 =strassenItmod2( a11^a21-a31-a14-a24^a34,-b12-b22^b14^b24)
	m44 =strassenItmod2( a11-a41-a12^a42^a14^a24-a34,-b11^b31-b41^b22-b13^b33-b43-2*b14-b24^2*b34-2*b44^b15-b35^b45)
	m45 =strassenItmod2( -a11^a41-a42-a43^a14-a44,b11^b21^b41^b13^b23-b33^b43^2*b14^2*b24-b34^3*b44-b15-b25-b35^b45)
	m46 =strassenItmod2( a11^a21-a31-2*a12-a22^a32-2*a13-a23^a33-a14-a24^a34,-b11-2*b21-b22-b13-2*b23-2*b14-3*b24^b15^b25)
	m47 =strassenItmod2( a11-a31-a41^a14,b11^b41^b42^b43^2*b14^b44)
	m48 =strassenItmod2( a23^a43,b11^b21-b31^b41^b13^b23-b33^b43^4*b14^4*b24-3*b34^3*b44^2*b15^b25^b45)
	m49 =strassenItmod2( -a13^a33^a43-a14-a24^a34,b11^b21-b31^b41^b12^b22-b32^b42^b13^b23-b33^b43^b14^b24-b34^b44-b25^b35)
	m50 =strassenItmod2( -a12^a32^a42,-b22-b23^b24)
	m51 =strassenItmod2( a13-a43^a14-a44,b32^b33^b35)
	m52 =strassenItmod2( -2*a11-a21^a31^a41^2*a12^a22-a32-a42^2*a13^a23-a33-a43^2*a14^a24-a34-a44,-b11-b21-b32-b13-b23-2*b14-2*b24^b34^b15^b25)
	m53 =strassenItmod2( -a14-a24^a34,-b11^b31-b41-b12^b32-b42-b13^b33-b43-b14^b34-b44^b15-b35^b45)
	m54 =strassenItmod2( -a11^a14,b11^2*b14)
	m55 =strassenItmod2( -a11-a21^a31^2*a12^3*a22-a32^a42^2*a13^3*a23-a33^a43^a14^a24-a34,-b11-b21-b13-b23-2*b14-2*b24^b15^b25)
	m56 =strassenItmod2( a24^a44,b15^b45)
	m57 =strassenItmod2( a43^a44,b11^b21-b31^b41^b13^b23-b33^b43^2*b14^2*b24-2*b34^3*b44-b25^b35^b45)
	m58 =strassenItmod2( -a13-a23^a33-a14-a24^a34,-b23^b33-b24^b34-b25^b35)
	m59 =strassenItmod2( a21-a22-a23-a24,-b11^b21^b22-b13^b23-2*b14^b24^b15)
	m60 =strassenItmod2( -a11-a21^a31^a22^a42^a23^a43^a14^a24-a34,b11-b22^b13^2*b14^b24-b15)
	m61 =strassenItmod2( -2*a11-a21^a31^a41^a22,b22^b23^b14^b15^b25)
	m62 =strassenItmod2( -a11^a31^a41-a13^a33^a43,b11^b41^b12^b42^b13^b43^b14^b44)
	
c11 = -2*m1^4*m3^4*m10^4*m11^4*m12^2*m13^3*m15^2*m18^2*m19^4*m20^4*m24-2*m28^m29^4*m30-2*m34^4*m40^m41^4*m44^2*m45^4*m49-2*m51^4*m53-m54-2*m57
	c12 = -3*m49^m51-m52-3*m53-m54^2*m57-m59-m19-3*m20-m15^m16-2*m18-3*m12-m13^m1-3*m3^m4^m9-2*m10-2*m11-m41-3*m44-2*m45-m46^m47-2*m40^m34-m37-m33^m62^2*m28-3*m30-2*m24-m25
	c13 = m49^m52^m53^m54-m57^m59^m20-m16^m18^m12^m3-m4^m10^m11^m41^m44^m45^m46^m37^m33-m28-m29^m30^m24^m25
	c14 = m1-2*m3-2*m10-2*m11-2*m12-m13-m15-m18-m19-2*m20-2*m24^m28-2*m30^m34-2*m40-m41-2*m44-m45-2*m49^m51-2*m53^m57
	c15 = m3^m10^m11^m12^m13^m15^m18^m19^m20^m24^m30^2*m40^m44^m45^m49^m53
	c21 = m54^3*m55^2*m56^2*m60-m21-2*m16^m18-2*m12^2*m1-m2^m3-4*m5^3*m7^m42-m43^m45^3*m46-m47-2*m40^4*m35-m36^3*m37-m38-m31-m32-m61-2*m26^3*m27-2*m22^m23
	c22 = m54-m56^m59-2*m60^m20^m16^m18^m12-m1^m3^2*m5-m6-m7-m9-m42-m43^m45-m47^m40^m35-m36-m38^m31^m32^2*m26-m27^m22^m23
	c23 = m2-m3-m5-m18^m21-m23-m26-m31-m32-2*m35^m36-m37^m38^m42^m43-m45-m46^m47-m54-m55-m59^m60^m61
	c24 = -m1^2*m5-m7^m12^m16^m22^m26-m27^m31^m32-m35-m37^m40-m42-m46-m55-m56-m60
	c25 = -m5^m7-m12^m27^m35^m37-m40^m46^m55^m56^m60
	c31 = 8*m49-m50-2*m51^8*m53^2*m56-2*m57-2*m58^2*m19^4*m20^6*m15-2*m16-3*m17^3*m18^2*m12^2*m13^2*m14-m2^6*m3-2*m4-4*m5-2*m8^8*m10^4*m11^m41^m42^6*m44^3*m45-m47-4*m48^2*m40-3*m34-m36^3*m37^m39-4*m31-2*m61-2*m26^3*m27-4*m28^m29^6*m30-2*m22^m23^7*m24
	c32 = -5*m49^m50^m51-m52-6*m53^m55-m56^2*m57^m58-m60-m19-2*m20-2*m15^2*m16^m17-m18-2*m12-m13-m14-3*m3^3*m4^2*m5-m6^2*m8-4*m10-2*m11-m41-m42-5*m44-m45^2*m48-m40^2*m34^2*m35-m36-m37-m38^2*m31-2*m33^m61^m62^2*m26-m27^4*m28-4*m30^m22^m23-3*m24-m25
	c33 = 2*m49-m50^m52^2*m53-m55-m57^m60^m20-m16^m12^m2^m3-2*m4-m5-m8^2*m10^m11^m41^m42^2*m44^m47-m48-m34-2*m35^m36-m39-m31^2*m33-m26-2*m28-m29^2*m30-m23^m24^m25
	c34 = -4*m49^m50^m51-4*m53-m56^m57^m58-m19-2*m20-2*m15^m16^m17-m18-m12-m13-m14-3*m3^m4^2*m5^m8-4*m10-2*m11-m41-m42-3*m44-m45^2*m48-m40^2*m34-m37^2*m31^m61^m26-m27^2*m28-3*m30^m22-3*m24
	c35 = m3-m5^2*m10^m11^m13^m14^2*m15-m17^m18^m19^m20^2*m24^m27^m30-m31^m37^m40^m44^m45-m48^2*m49^2*m53^m56
	c41 = -2*m1^4*m5^4*m12^3*m17^2*m18-m23^m29^4*m31-m34-m39^2*m40-m42-m45^4*m48-m54-2*m57
	c42 = -m49-m54-m55^2*m57-m59-m20^m16-m17-2*m18-3*m12^m1-m3-2*m5^m6^m9^m42-m45-m46^m47-2*m48-m40-2*m35-m37^m38-2*m31^m62-m30-m23-m25
	c43 = m5^m12-m16^m18^m23^m25-m29^m31^m34^2*m35^m37^m39-m42^m45^m46^m48^m54^m55-m57^m59
	c44 = m1-2*m5-2*m12-m17-m18-2*m31-m40^m42-2*m48^m57
	c45 = m5^m12^m17^m18^m31^m40^m48)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0), np.concatenate(c14, c24, c34, c44, c54), axis=0)), axis=1)

	return result



def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def mat445(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44 = div4x4(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45 = div4x5(b)


	m1 =strassenIt( a12+a42+a13+a23+a43+a14+a24,b32+b35)
	m2 =strassenIt( a12,b11+b13+b43+b24+b15+b25+b45)
	m3 =strassenIt( a21+a41+a43,b11+b15+b35)
	m4 =strassenIt( a42+a44,b11+b41+b12+b42+b13+b43)
	m5 =strassenIt( a11+a21+a13+a23+a14+a24,b31+b32+b33)
	m6 =strassenIt( a12+a22+a14+a24,b21+b41+b32+b42+b23+b24+b35+b45)
	m7 =strassenIt( a22+a32+a42,b24+b44)
	m8 =strassenIt( a11+a21+a41+a12+a42+a44,b11+b21+b41+b22+b42+b13+b23+b43+b15)
	m9 =strassenIt( a11+a21+a12+a42+a43,b21+b41+b22+b42+b25+b45)
	m10 =strassenIt( a22+a44,b41+b25)
	m11 =strassenIt( a12+a22+a32+a13+a33+a14+a24+a34,b41+b35+b45)
	m12 =strassenIt( a11+a21+a41+a12+a22+a32+a44,b21+b31+b41+b22+b32+b42+b23+b33+b43)
	m13 =strassenIt( a13,b41+b12+b42+b14+b34+b35+b45)
	m14 =strassenIt( a21+a41+a12+a22+a32+a13+a23+a33+a43+a14+a24+a34,b35)
	m15 =strassenIt( a31+a12+a22+a32+a14+a24+a34,b11+b31+b12+b32+b13+b33)
	m16 =strassenIt( a12+a22+a32+a42+a14+a24+a34+a44,b11+b41+b12+b42+b13+b43)
	m17 =strassenIt( a41+a12+a22+a32+a14+a24+a44,b21+b31+b41+b22+b32+b42+b23+b33+b43)
	m18 =strassenIt( a11+a21+a12+a22+a32+a23+a33,b33+b34)
	m19 =strassenIt( a12+a22+a32+a14+a24+a34,b11+b13+b43+b14+b44+b35+b45)
	m20 =strassenIt( a11+a31+a12+a42+a44,b11+b13+b43+b44+b15+b25+b45)
	m21 =strassenIt( a12+a22+a32+a13+a33+a14+a24,b31+b22+b32+b42+b33+b24+b44)
	m22 =strassenIt( a12+a22+a14+a24,b21+b22+b23)
	m23 =strassenIt( a12+a42+a13+a33+a14+a24,b41+b22+b32+b42+b24+b44+b35+b45)
	m24 =strassenIt( a11+a21+a13,b31+b12+b32+b14+b34)
	m25 =strassenIt( a12+a22+a13+a14+a24,b41+b32+b42+b35+b45)
	m26 =strassenIt( a11+a21,b11+b21+b31+b41+b22+b32+b42+b14+b34+b15+b25+b45)
	m27 =strassenIt( a22+a42,b41+b22+b32+b42+b35+b45)
	m28 =strassenIt( a22+a24,b41)
	m29 =strassenIt( a11+a31+a12+a22+a32+a14+a24+a34,b11+b13+b43+b14+b44)
	m30 =strassenIt( a13+a33,b41+b22+b32+b42+b24+b34+b44+b35+b45)
	m31 =strassenIt( a11+a31+a41+a12+a22+a32+a43,b11+b15)
	m32 =strassenIt( a23+a33+a43,b34)
	m33 =strassenIt( a22,b21+b41)
	m34 =strassenIt( a31+a12+a22+a32+a13+a14+a24+a34,b31+b12+b32+b33+b14)
	m35 =strassenIt( a11+a31+a12+a22+a32,b11+b15+b25+b45)
	m36 =strassenIt( a12+a22+a32+a13+a33+a14+a34+a44,b41+b45)
	m37 =strassenIt( a21,b11)
	m38 =strassenIt( a12+a22+a32+a13+a33,b31+b22+b32+b42+b24+b34+b44)
	m39 =strassenIt( a21+a31+a41,b14)
	m40 =strassenIt( a21+a41,b41+b12+b42+b35+b45)
	m41 =strassenIt( a11+a21+a41+a42+a44,b11+b21+b41+b12+b22+b42+b13+b23+b43)
	m42 =strassenIt( a11+a21,b31+b12+b32+b13+b23+b43+b14+b34+b15+b25+b45)
	m43 =strassenIt( a22+a32+a42+a24+a34+a44,b44)
	m44 =strassenIt( a11+a21+a12+a22+a32+a43,b11+b21+b31+b41+b22+b32+b42+b34+b15+b25+b45)
	m45 =strassenIt( a11+a31+a12+a22+a32+a44,b25+b45)
	m46 =strassenIt( a21+a41+a12+a42+a13+a14+a44,b41+b42+b45)
	m47 =strassenIt( a41+a44,b21+b31+b41+b22+b32+b42+b23+b33+b43)
	m48 =strassenIt( a43,b11+b21+b31+b41+b22+b32+b42+b15+b25+b45)
	m49 =strassenIt( a12+a22+a32,b11+b21+b31+b41+b22+b32+b42+b24+b34+b44+b15+b25+b45)
	m50 =strassenIt( a22+a14+a24,b21+b41+b23+b24)
	m51 =strassenIt( a31+a41+a33+a43+a34+a44,b31+b32+b33)
	m52 =strassenIt( a11+a21+a12,b11+b13+b23+b43+b15+b25+b45)
	m53 =strassenIt( a42+a44,b11+b13+b43+b15+b25+b45)
	m54 =strassenIt( a31+a33+a34,b31+b32+b33)
	m55 =strassenIt( a11+a31+a12+a22+a32+a24+a34,b43+b44)
	m56 =strassenIt( a23,b31)
	m57 =strassenIt( a11+a31,b11+b13+b43+b14+b44+b15+b25+b45)
	m58 =strassenIt( a22+a42+a43,b21+b41+b22+b32+b42+b25+b35+b45)
	m59 =strassenIt( a21+a41+a12+a22+a32+a13+a14+a24+a34,b41+b12+b42+b14+b35+b45)
	m60 =strassenIt( a21+a41+a42+a44,b41+b12+b42+b15+b45)
	
c11 = m2+m6+m13+m24+m25+m28+m37+m42+m50+m52
	c12 = m49+m52+m56+m58+m60+m21+m18+m13+m14+m1+m3+m5+m7+m8+m9+m10+m11+m41+m42+m44+m45+m46+m48+m35+m36+m37+m38+m31+m32+m33+m27+m30+m23+m24
	c13 = m4+m13+m15+m16+m19+m20+m24+m29+m34+m37+m39+m40+m42+m43+m52+m53+m55+m57+m59
	c14 = m2+m4+m13+m16+m19+m20+m39+m40+m43+m53+m57+m59
	c15 = m49+m50+m52+m56+m58+m21+m18+m13+m14+m1+m2+m3+m5+m6+m7+m9+m10+m11+m42+m44+m45+m48+m35+m36+m37+m38+m31+m32+m33+m27+m28+m30+m23+m24+m25
	c21 = m28+m33+m37+m56
	c22 = m1+m3+m8+m9+m10+m11+m14+m25+m26+m31+m33+m35+m36+m37+m41+m42+m45+m46+m52+m58+m60
	c23 = m49+m50+m53+m55+m57+m59+m19+m20+m21+m15+m16+m17+m18+m12+m13+m2+m4+m6+m7+m42+m43+m44+m48+m40+m34+m37+m38+m39+m32+m33+m27+m29+m30+m22+m23+m24
	c24 = m2+m4+m6+m7+m13+m16+m19+m20+m22+m23+m26+m27+m30+m32+m39+m40+m43+m44+m48+m49+m53+m57+m59
	c25 = m3+m10+m11+m14+m28+m31+m35+m36+m37+m45
	c31 = m2+m6+m11+m13+m19+m24+m25+m29+m30+m33+m35+m37+m38+m42+m49+m50+m52+m57
	c32 = m7+m11+m21+m23+m25+m27+m34+m39+m40+m54+m59
	c33 = m49+m50+m52+m57+m59+m19+m21+m15+m16+m17+m13+m2+m4+m6+m7+m42+m47+m40+m34+m35+m37+m38+m39+m33+m27+m29+m30+m22+m23+m24
	c34 = m4+m6+m7+m13+m16+m19+m22+m23+m27+m30+m39+m40+m59
	c35 = m49+m50+m52+m56+m57+m58+m19+m21+m18+m13+m14+m1+m2+m3+m5+m6+m7+m9+m42+m44+m48+m35+m37+m38+m31+m32+m33+m27+m29+m30+m23+m24+m25
	c41 = m3+m4+m10+m27+m33+m37+m40+m48+m53+m58+m60
	c42 = m3+m8+m9+m10+m26+m27+m31+m33+m35+m37+m40+m41+m42+m45+m52+m58+m60
	c43 = m8+m9+m31+m35+m45+m47+m48+m51+m52+m53+m54
	c44 = m2+m7+m20+m26+m39+m44+m48+m49+m53+m57
	c45 = m3+m4+m31+m35+m37+m40+m45+m53+m60)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0), np.concatenate(c14, c24, c34, c44, c54), axis=0)), axis=1)

	return result



def div4x4(a):

	col = len(a)/4
	row = len(a[1])/4

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]

	return (a11, a12, a13, a14, 
	  a21, a22, a23, a24, 
	  a31, a32, a33, a34, 
	  a41, a42, a43, a44)

def div4x6(a):

	col = len(a)/4
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46)

def mat446mod2(a,b):

	a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44 = div4x4(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46 = div4x6(b)


	m1 =strassenItmod2( a11^a21^a13^a23^a14^a24,b11^b21^b31^b41^b12^b22^b32^b42^b15^b25^b35^b45^b16^b26^b36^b46)
	m2 =strassenItmod2( a21^a23^a24,b14^b15)
	m3 =strassenItmod2( a33,b14^b24^b34^b44^b16^b26^b36^b46)
	m4 =strassenItmod2( a11^a21^a12^a22^a13^a23^a14^a24,b21^b31^b41^b22^b32^b42^b25^b35^b45^b26^b36^b46)
	m5 =strassenItmod2( a21^a41^a22^a42^a23^a43,b12^b14)
	m6 =strassenItmod2( a12,b13^b23^b33^b43)
	m7 =strassenItmod2( a23^a33^a43^a24^a34^a44,b14^b24^b44)
	m8 =strassenItmod2( a22^a23,b13^b33^b14^b34^b15^b35)
	m9 =strassenItmod2( a11^a12^a13^a14,b13)
	m10 =strassenItmod2( a31^a32,b12^b13)
	m11 =strassenItmod2( a11^a31^a41^a12^a32^a42,b13^b33^b15^b35^b16^b36)
	m12 =strassenItmod2( a11^a31^a41^a12^a32^a42^a13^a23^a14^a24,b11^b31^b12^b32^b14^b24^b44^b15^b35^b16^b36)
	m13 =strassenItmod2( a11^a31^a41^a12^a32^a42^a43,b31^b41^b12^b32^b33^b43^b34^b44^b15^b45)
	m14 =strassenItmod2( a22,b21^b31^b41^b22^b32^b42^b23^b33^b43^b25^b35^b45^b26^b36^b46)
	m15 =strassenItmod2( a11^a31^a41^a13^a33^a43^a14^a34^a44,b11^b21^b15^b25^b16^b26)
	m16 =strassenItmod2( a22^a24,b14^b44^b15^b45)
	m17 =strassenItmod2( a41^a42^a43,b12^b42^b15^b45)
	m18 =strassenItmod2( a22^a32^a42^a24^a34^a44,b34^b44)
	m19 =strassenItmod2( a22^a24,b13^b43)
	m20 =strassenItmod2( a43,b12^b32^b14^b34)
	m21 =strassenItmod2( a11^a31^a41^a12^a32^a42,b11^b31^b12^b32^b13^b33^b14^b34)
	m22 =strassenItmod2( a12^a13,b31^b41^b32^b42^b35^b45^b36^b46)
	m23 =strassenItmod2( a13^a33,b32^b42^b33^b43^b34^b44^b36^b46)
	m24 =strassenItmod2( a33,b12^b22^b32^b42^b14^b24^b34^b44^b16^b26^b36^b46)
	m25 =strassenItmod2( a13^a14,b11^b41^b12^b42^b15^b45^b16^b46)
	m26 =strassenItmod2( a11^a31^a41^a12^a22^a32^a42^a13^a43^a14^a24,b33^b43^b44^b15^b25^b45^b16^b26)
	m27 =strassenItmod2( a22^a42^a33^a24^a34^a44,b44^b15^b25^b45^b16^b26)
	m28 =strassenItmod2( a11^a31^a41^a12^a32^a42^a43,b31^b41^b12^b32^b14^b34^b35^b45^b36^b46)
	m29 =strassenItmod2( a21^a31^a41^a22^a32^a42,b25^b35^b45^b26^b36^b46)
	m30 =strassenItmod2( a22,b24^b34^b44^b25^b35^b45)
	m31 =strassenItmod2( a11^a31^a12^a32^a13^a14,b11^b41^b12^b42^b13^b43^b44^b15^b45^b16)
	m32 =strassenItmod2( a31^a32,b14^b16)
	m33 =strassenItmod2( a11^a31^a41^a12^a32^a42^a13^a33^a43^a14^a34^a44,b11^b21^b41^b15^b25^b45^b16^b26^b46)
	m34 =strassenItmod2( a22^a42^a24^a44,b42^b44)
	m35 =strassenItmod2( a33^a34,b42^b43)
	m36 =strassenItmod2( a21^a31^a41^a22^a32^a42,b24^b34^b44)
	m37 =strassenItmod2( a12^a33,b31^b41^b32^b42^b33^b43^b14^b24^b35^b45^b16^b26^b36^b46)
	m38 =strassenItmod2( a11^a31^a41^a12^a22^a13^a33^a43^a24^a34^a44,b34^b44^b15^b25^b16^b26)
	m39 =strassenItmod2( a12^a22^a14^a24,b33^b43^b15^b25^b16^b26)
	m40 =strassenItmod2( a22^a13^a14^a24,b31^b41^b32^b42^b13^b33^b35^b45^b36^b46)
	m41 =strassenItmod2( a12^a22^a14^a24,b31^b41^b32^b42^b33^b43^b35^b45^b36^b46)
	m42 =strassenItmod2( a22^a42^a23^a43,b12^b22^b42^b15^b25^b45)
	m43 =strassenItmod2( a13^a33,b31^b41^b35^b45^b36^b46)
	m44 =strassenItmod2( a22^a23,b14^b34^b15^b35)
	m45 =strassenItmod2( a11^a31^a41^a12^a32^a13^a33^a43^a14^a34^a44,b11^b21^b41^b43^b44^b15^b25^b45^b16^b26)
	m46 =strassenItmod2( a41^a22^a42^a43^a24,b42^b14^b15^b45)
	m47 =strassenItmod2( a13^a23^a14^a24,b11^b31^b12^b32^b13^b33^b15^b35^b16^b36)
	m48 =strassenItmod2( a11^a31^a41^a12^a32^a42^a13^a33^a43,b34^b44^b35^b45^b36^b46)
	m49 =strassenItmod2( a11^a31^a41^a12^a32^a42^a13^a23^a14^a24,b13^b33^b15^b25^b45^b16^b26^b46)
	m50 =strassenItmod2( a21^a31^a41^a22^a32^a42^a23^a43,b12^b24^b34^b44)
	m51 =strassenItmod2( a11^a31^a41^a13^a33^a43^a14^a34^a44,b14^b24^b15^b25^b16^b26)
	m52 =strassenItmod2( a11^a31^a41^a12^a22^a32^a42^a13^a43^a14^a24,b31^b41^b32^b14^b24^b44^b35^b45^b36^b46)
	m53 =strassenItmod2( a41^a43^a44,b41^b43^b44^b45)
	m54 =strassenItmod2( a33^a34,b42^b43^b44^b46)
	m55 =strassenItmod2( a11^a21^a12^a13^a23^a14^a24,b21^b31^b41^b22^b32^b42^b13^b25^b35^b45^b26^b36^b46)
	m56 =strassenItmod2( a32^a33,b14^b24^b16^b26)
	m57 =strassenItmod2( a23^a43,b22^b32^b42^b25^b35^b45)
	m58 =strassenItmod2( a42,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24^b44)
	m59 =strassenItmod2( a42,b11^b21^b41^b13^b23^b43)
	m60 =strassenItmod2( a12^a32,b12^b22^b13^b23^b14^b24^b16^b26)
	m61 =strassenItmod2( a41^a43^a44,b42^b45)
	m62 =strassenItmod2( a23^a33^a43^a24^a34^a44,b14^b24^b44^b15^b25^b45^b16^b26^b46)
	m63 =strassenItmod2( a11^a31^a12^a32^a13^a14,b42^b13)
	m64 =strassenItmod2( a21^a31^a41^a23^a33^a43^a24^a34^a44,b14^b24^b34^b44)
	m65 =strassenItmod2( a11^a31^a12^a32,b11^b41^b13^b43^b14^b44^b15^b45)
	m66 =strassenItmod2( a11^a21^a12^a22^a13^a23,b15^b25^b35^b45^b16^b26^b36^b46)
	m67 =strassenItmod2( a21^a23^a24,b11^b12^b13^b14^b16)
	m68 =strassenItmod2( a21^a31^a41^a22^a32^a42^a23^a43,b14^b25^b35^b45^b16^b26^b36^b46)
	m69 =strassenItmod2( a11^a31^a12^a32,b12^b42)
	m70 =strassenItmod2( a22^a23^a43,b12^b22^b42^b14^b34^b25^b35^b45)
	m71 =strassenItmod2( a32^a33,b12^b22^b14^b24^b16^b26)
	m72 =strassenItmod2( a11^a31^a12^a32^a13^a33^a14^a34,b42)
	m73 =strassenItmod2( a22^a42^a33^a24^a34^a44,b42^b14^b24^b44)
	m74 =strassenItmod2( a12^a33,b31^b41^b12^b22^b32^b42^b35^b45^b36^b46)
	
c11 = m1^m3^m10^m13^m16^m19^m22^m24^m26^m28^m31^m32^m39^m40^m41^m43^m55^m63^m65^m66^m67^m68^m74
	c12 = m3^m9^m10^m22^m24^m43^m63^m69^m74
	c13 = m6^m9^m19^m22^m40^m41
	c14 = m5^m9^m10^m16^m17^m22^m28^m38^m39^m41^m46^m50^m51^m52^m63^m64^m69
	c15 = m2^m3^m5^m9^m10^m13^m17^m23^m26^m37^m38^m41^m43^m46^m50^m51^m52^m63^m64^m66^m68^m69
	c16 = m50^m51^m52^m19^m16^m17^m3^m5^m9^m10^m43^m46^m40^m37^m38^m39^m63^m64^m65^m31^m32^m28^m22^m23^m25
	c21 = m49^m50^m52^m55^m57^m19^m20^m21^m16^m12^m13^m4^m8^m10^m44^m36^m67^m68^m70^m63^m65^m31^m32^m26^m29^m30
	c22 = m8^m9^m10^m11^m12^m20^m21^m28^m30^m36^m40^m44^m47^m50^m52^m57^m63^m69^m70
	c23 = m4^m8^m9^m14^m19^m44^m55
	c24 = m5^m8^m9^m10^m11^m12^m16^m17^m21^m28^m36^m40^m44^m46^m47^m50^m52^m63^m69
	c25 = m2^m5^m8^m9^m10^m11^m12^m17^m21^m28^m30^m36^m40^m46^m47^m50^m52^m63^m69
	c26 = m49^m50^m52^m19^m21^m16^m17^m12^m13^m5^m9^m10^m44^m46^m47^m40^m36^m68^m63^m65^m31^m32^m26^m29^m30^m25
	c31 = m1^m3^m10^m15^m18^m24^m27^m31^m32^m34^m35^m38^m45^m46^m48^m53^m55^m61^m66^m67^m68^m72^m74
	c32 = m3^m9^m10^m24^m56^m63^m71^m72
	c33 = m6^m9^m35^m37^m60^m63^m71^m72^m74
	c34 = m5^m9^m10^m18^m34^m50^m63^m64^m72^m73
	c35 = m2^m3^m5^m9^m10^m27^m38^m46^m48^m50^m56^m61^m63^m64^m66^m68^m72^m73
	c36 = m3^m5^m9^m10^m18^m32^m34^m35^m50^m54^m56^m63^m64^m72^m73
	c41 = m7^m8^m13^m16^m19^m20^m21^m26^m27^m33^m34^m35^m44^m45^m46^m49^m53^m61^m62^m63^m65^m72
	c42 = m7^m8^m11^m12^m20^m21^m28^m40^m44^m47^m52^m58^m59^m69^m72^m73
	c43 = m7^m8^m19^m26^m27^m33^m35^m44^m45^m49^m59^m62^m63^m72
	c44 = m7^m8^m11^m12^m16^m17^m21^m28^m34^m40^m44^m46^m47^m52^m69^m72^m73
	c45 = m7^m8^m11^m12^m17^m21^m28^m40^m42^m47^m52^m58^m59^m61^m69^m70^m72^m73
	c46 = m49^m52^m54^m58^m59^m19^m21^m16^m17^m12^m13^m42^m44^m46^m47^m40^m34^m35^m70^m72^m73^m65^m31^m62^m26^m27^m25)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0), np.concatenate(c14, c24, c34, c44, c54, c64), axis=0)), axis=1)

	return result



def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)

def mat455(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35, a41, a42, a43, a44, a45 = div4x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenIt( a21+a31+2*a23+2*a33+a24+a34,-b11+b21+b31+b12-b22-b32-b13+b23+b33)
	m2 =strassenIt( -a11+a41-a12+a42-a13+a43-a14+a44,-2*b13+b33-b53+2*b15-b35+b55)
	m3 =strassenIt( -a31-a32-a34+a35,-b23+b14-b44+b54)
	m4 =strassenIt( a11+a12+a13+a14,b21-b23+b25)
	m5 =strassenIt( a21+a22+a24-a25,b22+b52+2*b13-b33+b53+2*b14-b24-b34)
	m6 =strassenIt( a13+a15-a35,b11-b31+b51+b23+b33-b43+b15-b35+b55)
	m7 =strassenIt( a23+a33-a43+a24+a34-a44+a25+a35-a45,-b12+b22+b32)
	m8 =strassenIt( -a22-a32+a42+a23+a33-a43-a24-a34+a44+a25+a35-a45,b22)
	m9 =strassenIt( a31+3*a33+2*a34+a35,b13-b43-b14+b44)
	m10 =strassenIt( -a13-a23+a43-a15-a25+a45,-b22-b52+b13+b23-b33+2*b53+b24+b54-b15-b25+b35-2*b55)
	m11 =strassenIt( a22+a32-a23-a33+a24+a34-a44-a25-a35,b11+b21-b41+b51+b12+2*b22-b42+b52+b13+b23-b43+b53)
	m12 =strassenIt( a21+a22-a13+a43+a24-a25,-b12+b32-b52+2*b13-b33+b53+b14-b34+b54)
	m13 =strassenIt( -a21-a23-2*a24,2*b12-b32+b52)
	m14 =strassenIt( a11-a31+a12-a32+a13-a33+a14-a34-a15+a35,2*b14-b24-b34+b54)
	m15 =strassenIt( a11+a21-a41+a12+a22-a42+a14+a24-a44-a15-a25+a45,-b12+b32-b52-2*b13+b33-b53-b14+2*b15-b35+b55)
	m16 =strassenIt( -a22+a23+a25,2*b12-b22-b42+2*b13-b23-b43-2*b14+b24+b44-2*b15+b25+b45)
	m17 =strassenIt( -a31+a22-a23-a33-a34-a25,b11+b21-b31+b51+3*b13-b23-b33+b53-b15+b25)
	m18 =strassenIt( -a13+a43-a15+a35,b11-b31+b51-b13+b33-b53+b15-b35+b55)
	m19 =strassenIt( -a11-a31-3*a13-3*a33-2*a14-2*a34-a15-a35,-b14+b24)
	m20 =strassenIt( -a31-a32-a33-a34,b14+b24-b44+b54)
	m21 =strassenIt( -a31+a22-a23-2*a33-a34-a25,-b11+b21+b31+b12-b22-b32-b13+2*b23+b33-b43-b24+b44)
	m22 =strassenIt( -a31-a33-a34,-2*b11+b21+b41+2*b13-b23-b43-2*b15+b25+b45)
	m23 =strassenIt( a21+a22-a13+a43+a24-a15-a25+a45,b22+b52-2*b13+b33-b53-b24-b54+2*b15-b35+b55)
	m24 =strassenIt( -a11+a31-a12+a32-a13-a14+a34+a15-a35,-b23+2*b14-b24-b34+b54)
	m25 =strassenIt( a11-a31+a13-a33+2*a14+a24-a34-a44,-b11+b41+2*b12-b32+b52+b13-b43-b15+b45)
	m26 =strassenIt( -a24-a34+a44,b11-b41+b12+2*b22-b42+b52-b13+b43+b15-b45)
	m27 =strassenIt( -a11-a12-a13-a14+a15,b23)
	m28 =strassenIt( a35,b13+b23-b43+b53)
	m29 =strassenIt( a14-a44,b13-b43-b15+b45)
	m30 =strassenIt( -a41-a43-a44,-b11-2*b12+b32-b52-b13+b33-b53+b15-b35+b55)
	m31 =strassenIt( -a12+a42+a13-a43+a15-a45,-2*b13+2*b23+b33-b53+2*b15-b25-b35+b55)
	m32 =strassenIt( a31-a22-a13+a23+a33-a24-a44-a15+a25-a35,b21+b51+b12-b22-b32+b13+b23-b43+b53-b24+b44)
	m33 =strassenIt( a11+a13+a14,3*b11-b21-b31-b41+b51-b13+b23+b43+3*b15-b25-b35-b45+b55)
	m34 =strassenIt( a13+a23-a43,-b12+b32-b52+b14-b34+b54)
	m35 =strassenIt( -a11+a41-2*a13+2*a43-a14+a44,b33-b53+b15-b35+b55)
	m36 =strassenIt( -a21-a31-a23-a33-a43-a44+a25+a35-a45,b21+b51+b12-b22-b32+b23+b53)
	m37 =strassenIt( a31+2*a33+a34,2*b13-b23-b43-2*b14+b24+b44)
	m38 =strassenIt( -a11+a21+a41-a13+a23+a43-2*a14+2*a24+2*a44,2*b12-b32+b52)
	m39 =strassenIt( a11+a42+2*a13-a43+a14-a45,-b13+b23+b33-b53+b15-b35+b55)
	m40 =strassenIt( a33,b13-2*b23-b33+b43+2*b14-b24-b34+b54)
	m41 =strassenIt( a31-a22+a23+a33-a24+a25-a35,b21+b51-b22-b52+b13+b23-b43+b53-b14+b44)
	m42 =strassenIt( -a13-a14-a15,-b13+b43)
	m43 =strassenIt( a13-a43,2*b13-b33+b53)
	m44 =strassenIt( a42-a43-a45,-b21-b13+b33-b53+b15-b35+b55)
	m45 =strassenIt( -a22-a32+a23+a33+a25+a35,b11+2*b21-b41+b51+b12+2*b22-b42+b52+b13+2*b23-b43+b53)
	m46 =strassenIt( a21+a31-a41+a23+a33-a43-a25-a35+a45,b12-b32+b52)
	m47 =strassenIt( a11+a12-a42+a43+a14-a15+a45,-b21-2*b13+b23+b33-b53+2*b15-b25-b35+b55)
	m48 =strassenIt( -a13+a33-a15+a35,-b11+b21+b31+b13-b23-b33+b14+b24-b44+b54-b15+b25+b35)
	m49 =strassenIt( -a11-a13-2*a14,-b11+b41+b13-b43-b15+b45)
	m50 =strassenIt( -a31-a13-3*a33-a14-2*a34-a15-a35,b13-b43-2*b14+b24+b44)
	m51 =strassenIt( a11-a31+a13-a33+2*a14-2*a34,-b11+b41+b13-b43-b15+b45)
	m52 =strassenIt( a12+a22-a42-a13-a23+a43-a14-a24+a44-a15-a25+a45,b12+b22-b32+b52+b14-b24)
	m53 =strassenIt( -a21-a22-2*a23-a24,b21+b51)
	m54 =strassenIt( -a21-a22-a23-a24+a25,-b11-b21+b31-2*b51-b12+b32-b52+b14-b34+b54)
	m55 =strassenIt( -a11-2*a13-a14,b11-b31+b51+b23+b15-b35+b55)
	m56 =strassenIt( a13+a44+a15,b21+b51+b13+b23-b43+b53)
	m57 =strassenIt( a44,b21+b51+2*b13+b23-2*b43+b53-b15+b45)
	m58 =strassenIt( a11+a31+a12-a22-a42+a23+a33+a43+a14-a24-a44-2*a15+a25-a35+a45,b12-b32+b52+b14-b24)
	m59 =strassenIt( -a21-a22-a13-2*a23+a43-a24-a15+a45,-b21-b51-b13+b33-b53+b15-b35+b55)
	m60 =strassenIt( a11-a31+a12-a32+a14-a34-a15+a35,b21-b23+2*b14-b34+b54+b25)
	m61 =strassenIt( a22-a23-a14-a24+a44-a25,2*b12-b22-b42+b13-b43-2*b14+b24+b44-b15+b45)
	m62 =strassenIt( a14+a24-a44,2*b12-b22-b42-2*b14+b24+b44)
	m63 =strassenIt( -a22+a23+a24+a25,3*b12-b32-b42+b52+b13-b43-b14+b44-b15+b45)
	m64 =strassenIt( a21+a31+a23+a33-a25-a35,b21+b51-b22-b52+b23+b53)
	m65 =strassenIt( a31+a32+a13+a34+a15-a35,b21-b23+b14+b24-b44+b54+b25)
	m66 =strassenIt( a13+a33+a14+a34+a15+a35,-2*b14+b24+b44)
	m67 =strassenIt( a21+a31+a23+a33+a24+a34,2*b11-b31+b51+2*b12-b32+b52+2*b13-b33+b53)
	m68 =strassenIt( -a13+a43-a15+a45,b21+b51+2*b13-b23-b33-2*b15+b25+b35)
	m69 =strassenIt( a31+a33-a24+a34,-b11+b41+2*b12-b32+b52+b13-b43-b15+b45)
	m70 =strassenIt( a21-a41+a22-a42+a13+2*a23-2*a43+a24-a44+a15,-b13+b33-b53+b15-b35+b55)
	m71 =strassenIt( -a22-a32+a23+a33-a24-a34+a25+a35,b11+b21-b41+b51+b12+b22-b42+b52+b13+b23-b43+b53)
	m72 =strassenIt( a13+a33+a24+a34+a44+a15+a35,b12-b22-b32-b24+b44)
	m73 =strassenIt( a13+a15,b51+b13+b23-b43+b55)
	m74 =strassenIt( a11+2*a13-a43+a14,b11-b31+b51+b13+b15-b35+b55)
	m75 =strassenIt( a21+a22+a23+a24,-b22-b52+b24+b54)
	m76 =strassenIt( a43+a44+a45,b21+b51+b23+b53)
	
c11 = -m6-m18+m27-m28-m29-m31+m33+m39+m43-m44-m47-m49+m56-m57-m74
	c12 = m8-m9+m11+m19+m25+m29+m32-m41-m42+m49-m50+m52+m56+m57-m58+m61+m63+m69+m71
	c13 = m6+m18-m27+m28-m42-m43+m55+m74
	c14 = m3-m4-m9+m19+m24+m27-m42-m50+m60+m65
	c15 = m4+m6+m18-2*m27+m28+m29+m31-m39-m42-m43+m44+m47+m55-m56+m57+m73+m74
	c21 = -m12+m13+m16+m17-m22+m29-m34-m43-m53-m54+m61+m62+m67-m69
	c22 = m7-m9-m13-m29+m32+m36-m41-m42-m50+m56-m61-m62-m63+m64-m66+m72+m76
	c23 = m1+m7+m12+m21+m32+m34+m36-m37-m42+m43-m50+m53+m54+m56-m66+m72+m76
	c24 = m5+m7-m9-m12+m32-m34+m36-m41-m42-m43-m50+m56+m64-m66+m72+m75+m76
	c25 = -m50+2*m53+m54+m56+m59+m21-m16+m12+m1+m7+m10-m42+m43+m34+m36-m37-m66+m68+m72+m32-m61-m62-m29+m75+m76+m23
	c31 = -m11+m14-m16-m17-m21+m22+m24-m26+m27-m28-m29-m32+m40-m45-m49-m51-m56-m57-m61-m62-m72
	c32 = m9+m11+m26+m29-m32+m41+m42+m49+m50+m51-m56+m57+m61+m62+m63+m66+m69+m71-m72
	c33 = -m14-m24-m27+m28+m37-m40+m42+m50+m66
	c34 = m3+m9+m14-m20+m24+m27+m42+m50+m66
	c35 = m50+m56+m57+m20+m21+m16+m17-2*m14-m6+m11+m42+m45+m48-2*m40+m37+m66+m72+m73+m65+m32+m61+m62+m26-2*m27+m28+m29-2*m24
	c41 = -m6-m13-m18-m25-m28+m30-m38-m44-m49-m53+m56-m57-m59-m69-m70
	c42 = m8+m11+m13+m25+m36+m38+m46+m49+m57+m64+m69+m71+m76
	c43 = m6+m18+m28+m35+m39+m53+m55-m56+m59+m70+m74+m76
	c44 = m2+m3-m4+m5-m12+m15-m23+m24+m27-m32+m36+m41-m43+m46-m56+m58+m60+m64+m65+m76
	c45 = m2+m4+m6+m18+m28+m35+m39+m44+m47+2*m53+m55-2*m56+m57+2*m59+m68+2*m70+m73+m74+m76)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0), np.concatenate(c14, c24, c34, c44, c54), axis=0)), axis=1)

	return result



def div4x5(a):

	col = len(a)/4
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45)

def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def mat456mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35, a41, a42, a43, a44, a45 = div4x5(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56 = div5x6(b)


	m1 =strassenItmod2( a15^a35,b21^b51^b23^b53^b24^b54^b25^b55^b26^b56)
	m2 =strassenItmod2( a31^a41^a22^a32^a13^a24^a44^a35,b11^b21^b31^b51^b12^b22^b32^b13^b23^b33^b53^b24^b25^b16^b56)
	m3 =strassenItmod2( a15^a45,b22^b52^b23^b25^b56)
	m4 =strassenItmod2( a22^a42^a13^a23^a43^a24^a44^a15^a25^a45,b11^b21^b41^b51^b12^b22^b42^b13^b43^b14^b24^b54^b55^b26^b56)
	m5 =strassenItmod2( a22^a42,b21^b51)
	m6 =strassenItmod2( a11^a31^a34^a44,b41^b42^b13^b23^b43^b44^b15^b25^b45^b16^b26)
	m7 =strassenItmod2( a13^a23^a43,b33^b53^b36^b56)
	m8 =strassenItmod2( a24,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24^b44^b16^b26^b46)
	m9 =strassenItmod2( a13^a35,b21^b31^b41^b32^b42^b33^b43^b24^b54^b25^b55^b26^b36^b46^b56)
	m10 =strassenItmod2( a23^a25,b31^b32^b33^b14^b24^b44^b36)
	m11 =strassenItmod2( a35,b14^b34^b54)
	m12 =strassenItmod2( a22^a32^a33^a24^a34^a35,b31^b32^b33^b34^b44^b36)
	m13 =strassenItmod2( a11^a41^a22,b21^b14^b24)
	m14 =strassenItmod2( a22^a32^a24,b11^b21^b12^b22^b13^b23^b14^b24^b44^b16^b26^b46)
	m15 =strassenItmod2( a31^a41^a33^a43,b12^b22^b16^b26)
	m16 =strassenItmod2( a11^a23^a43,b13^b14^b34^b54^b15^b35^b55^b36^b56)
	m17 =strassenItmod2( a11^a31,b11^b21^b41^b42^b13^b23^b43^b14^b24^b44^b15^b25^b45^b16^b26)
	m18 =strassenItmod2( a13^a14,b31^b51^b33^b53^b36^b56)
	m19 =strassenItmod2( a24^a44,b51^b34^b44)
	m20 =strassenItmod2( a11^a41,b11^b21^b31^b12^b22^b32^b33^b14^b24^b34^b35^b16^b26)
	m21 =strassenItmod2( a12^a22^a42^a13^a23^a43^a15^a25^a45,b11^b21^b41^b12^b22^b42^b13^b23^b43^b14^b24)
	m22 =strassenItmod2( a33^a43,b12^b22^b32^b33^b35^b16^b26)
	m23 =strassenItmod2( a21^a41^a23^a43,b21^b13^b14^b24^b44^b15^b25^b45^b26^b46)
	m24 =strassenItmod2( a11^a31^a12^a32^a15^a35,b22^b23^b25)
	m25 =strassenItmod2( a13^a23^a43^a15^a25^a45,b23^b53^b26^b56)
	m26 =strassenItmod2( a21^a31^a22^a32^a25^a35,b31^b51^b32^b52^b33^b53^b34^b54^b36^b56)
	m27 =strassenItmod2( a11^a31^a32,b21^b14^b24)
	m28 =strassenItmod2( a11^a21^a41,b13^b16)
	m29 =strassenItmod2( a22^a42^a24^a44,b21^b51^b24^b54^b25^b55^b26^b56)
	m30 =strassenItmod2( a14^a24^a44,b11^b41^b12^b22^b42^b13^b23^b43^b44^b16^b26^b46)
	m31 =strassenItmod2( a31^a41^a32^a42^a15^a35,b21^b51^b22^b52^b53^b24^b54^b55^b26)
	m32 =strassenItmod2( a11,b11^b13^b14^b34^b54^b15^b35^b55^b36^b56)
	m33 =strassenItmod2( a22^a24,b11^b21^b12^b22^b13^b23^b14^b24^b44^b16^b26)
	m34 =strassenItmod2( a22^a32^a23^a25,b31^b32^b33^b14^b24^b44)
	m35 =strassenItmod2( a15^a35,b22^b52^b23^b53^b25^b55)
	m36 =strassenItmod2( a12,b11^b41^b12^b22^b42^b13^b23^b43^b14^b24)
	m37 =strassenItmod2( a31^a32^a35,b14)
	m38 =strassenItmod2( a23^a43,b31^b41^b51^b13^b14^b34^b54^b15^b35^b55^b36^b56)
	m39 =strassenItmod2( a21^a41^a23^a43^a24^a44,b11^b21^b13^b24^b44^b25^b45^b16^b26^b46)
	m40 =strassenItmod2( a11^a31^a14^a34,b41^b42^b43^b44^b45)
	m41 =strassenItmod2( a22^a42^a23^a43^a24^a44^a25^a45,b51^b54^b55^b56)
	m42 =strassenItmod2( a11^a41^a13^a43,b31^b32^b33^b34^b35)
	m43 =strassenItmod2( a34^a44,b42^b13^b23^b43^b15^b25^b45^b16^b26)
	m44 =strassenItmod2( a22^a32^a23^a33^a24^a34^a25^a35,b31^b32^b33^b34^b36)
	m45 =strassenItmod2( a21^a31^a22^a32^a35,b31^b51^b32^b52^b33^b53^b14^b34^b54^b36^b56)
	m46 =strassenItmod2( a31^a41^a32^a42^a35^a45,b51^b52^b53^b54^b55)
	m47 =strassenItmod2( a12^a14,b11^b41^b12^b22^b42^b13^b43^b14^b25)
	m48 =strassenItmod2( a11^a41^a33^a43,b31^b12^b22^b32^b33^b34^b35^b16^b26)
	m49 =strassenItmod2( a14^a24^a44,b21^b23^b43^b14^b24^b44^b16)
	m50 =strassenItmod2( a34,b41^b42^b43)
	m51 =strassenItmod2( a11^a13,b34^b54^b35^b55^b36^b56)
	m52 =strassenItmod2( a22^a42^a13^a23^a43^a15^a25^a45,b11^b21^b41^b51^b12^b22^b42^b13^b23^b43^b14^b24)
	m53 =strassenItmod2( a32^a33^a34^a35,b44)
	m54 =strassenItmod2( a21^a31^a22^a32,b11^b31^b51^b12^b32^b52^b13^b33^b53^b14^b34^b54^b16^b36^b56)
	m55 =strassenItmod2( a13^a14^a35,b11^b41^b12^b22^b42^b13^b23^b43^b16^b26^b46)
	m56 =strassenItmod2( a32,b11^b21^b12^b22^b13^b23^b14^b24^b44)
	m57 =strassenItmod2( a11^a31^a32^a13^a14^a35,b11^b21^b12^b22^b13^b23^b24^b25^b16)
	m58 =strassenItmod2( a12^a22^a42^a13^a23^a43^a14^a24^a44^a15^a25^a45,b11^b21^b41^b12^b22^b42^b13^b43^b14^b24^b26)
	m59 =strassenItmod2( a21^a22,b14^b34^b54^b16^b36^b56)
	m60 =strassenItmod2( a25^a35,b11^b31^b51^b12^b32^b52^b13^b33^b53)
	m61 =strassenItmod2( a21^a41^a23^a43^a14^a24^a44,b21^b24^b44^b25^b45^b26^b46)
	m62 =strassenItmod2( a13^a15,b53^b54^b55)
	m63 =strassenItmod2( a23^a43^a24^a44,b11^b41^b13^b16)
	m64 =strassenItmod2( a13^a23^a43^a25,b53^b34^b54^b55^b36)
	m65 =strassenItmod2( a13^a33^a14^a44,b42^b33^b35^b36^b46)
	m66 =strassenItmod2( a13^a33,b31^b42^b33^b34^b35^b36^b46)
	m67 =strassenItmod2( a14^a44,b41^b42^b33^b44^b35^b36^b46)
	m68 =strassenItmod2( a21^a22^a25,b34^b54^b36^b56)
	m69 =strassenItmod2( a13^a24^a44^a35,b11^b41^b51^b12^b22^b42^b13^b23^b43^b34^b16^b26^b46)
	m70 =strassenItmod2( a23^a43^a24^a44^a25^a35,b51^b34)
	m71 =strassenItmod2( a11^a41^a22^a14^a24^a44,b23^b14^b25^b16^b26)
	m72 =strassenItmod2( a22^a23^a25,b14^b24^b44)
	m73 =strassenItmod2( a31^a41^a32^a42,b21^b51^b22^b52^b23^b53^b24^b54^b25^b55)
	m74 =strassenItmod2( a21^a22,b11^b12^b13^b14^b34^b54^b36^b56)
	m75 =strassenItmod2( a22^a32^a24^a34,b31^b32^b33^b34^b44^b36^b46)
	m76 =strassenItmod2( a13^a43^a14^a44,b33^b35^b36)
	m77 =strassenItmod2( a11^a21^a41^a23^a43^a24^a44,b11^b13^b16)
	m78 =strassenItmod2( a33^a35,b31^b32^b33^b34^b44)
	m79 =strassenItmod2( a31^a41^a22^a32^a24^a44,b11^b21^b31^b51^b12^b22^b32^b13^b33^b53^b14^b24^b26^b56)
	m80 =strassenItmod2( a31^a41^a22^a32^a23^a43^a24^a44^a25^a35,b31^b51^b32^b33^b53^b56)
	m81 =strassenItmod2( a15^a45,b22^b52^b23^b53^b25^b55)
	m82 =strassenItmod2( a25,b31^b51^b32^b52^b33^b53^b36^b56)
	m83 =strassenItmod2( a11^a41^a12^a42,b23^b25^b26)
	m84 =strassenItmod2( a31^a41^a32^a42^a35^a45,b22^b23^b25)
	m85 =strassenItmod2( a22^a32,b31^b32^b33^b14^b24^b44^b16^b26^b46)
	m86 =strassenItmod2( a13^a33^a14^a34,b42^b46)
	m87 =strassenItmod2( a31^a41^a34^a44,b13^b23^b15^b25^b16^b26)
	m88 =strassenItmod2( a22^a42^a23^a43^a25^a45,b51)
	m89 =strassenItmod2( a22^a32^a23^a33^a25^a35,b31^b32^b33)
	m90 =strassenItmod2( a21^a31^a22^a32^a25^a35,b11^b31^b51^b12^b32^b52^b13^b33^b53^b34^b54^b36^b56)
	m91 =strassenItmod2( a14,b11^b31^b51^b12^b22^b42^b13^b33^b53^b14^b44^b25^b45^b36^b56)
	m92 =strassenItmod2( a11^a31^a12^a32^a15^a35,b21^b23^b24^b25^b26)
	m93 =strassenItmod2( a23^a43^a14,b31^b41^b51^b33^b53^b36^b56)
	
c11 = m7^m16^m18^m21^m32^m36^m38^m52^m88^m93
	c12 = m9^m11^m18^m21^m24^m31^m39^m45^m47^m52^m54^m55^m57^m59^m61^m62^m73^m74^m77^m83^m88^m91^m92
	c13 = m54^m55^m58^m59^m60^m16^m1^m2^m4^m7^m9^m11^m41^m47^m37^m38^m39^m68^m71^m32^m61^m27^m77^m79^m90^m91^m92^m93
	c14 = m11^m19^m21^m27^m30^m31^m35^m36^m37^m52^m55^m69^m73^m83^m88^m92
	c15 = m51^m52^m54^m58^m59^m60^m19^m21^m1^m2^m4^m9^m41^m35^m39^m68^m69^m71^m73^m31^m32^m61^m62^m30^m77^m79^m83^m88^m90
	c16 = m1^m2^m9^m11^m21^m27^m37^m47^m52^m54^m55^m59^m60^m62^m68^m71^m79^m88^m90^m92
	c21 = m7^m10^m12^m13^m18^m20^m22^m28^m30^m44^m48^m53^m55^m63^m65^m66^m67^m69^m70^m72^m77^m93
	c22 = m49^m56^m57^m59^m18^m13^m14^m2^m10^m42^m48^m34^m66^m71^m74^m63^m65^m33^m30^m76^m22^m77^m80^m82^m85^m93
	c23 = m49^m53^m55^m57^m59^m20^m12^m2^m7^m8^m42^m44^m45^m37^m67^m68^m69^m70^m71^m33^m26^m28^m76^m80^m82
	c24 = m10^m12^m26^m37^m44^m45^m53^m72^m82
	c25 = m51^m53^m55^m56^m57^m59^m20^m16^m12^m14^m2^m6^m8^m10^m42^m44^m40^m34^m68^m69^m70^m64^m61^m28^m23^m80^m85^m87
	c26 = m10^m14^m26^m33^m34^m37^m45^m56^m59^m68^m82^m85
	c31 = m6^m7^m16^m17^m18^m19^m27^m30^m32^m34^m38^m43^m53^m55^m65^m66^m67^m69^m72^m78^m89^m93
	c32 = m54^m56^m57^m59^m15^m18^m12^m14^m2^m11^m42^m45^m48^m39^m66^m71^m74^m33^m61^m27^m75^m77^m78^m79^m86^m91
	c33 = m50^m53^m54^m55^m57^m59^m60^m19^m15^m16^m17^m12^m14^m2^m6^m7^m11^m42^m43^m48^m37^m38^m39^m67^m68^m69^m71^m65^m32^m33^m61^m30^m75^m77^m79^m86^m90^m91^m93
	c34 = m11^m34^m37^m53^m72^m78^m89
	c35 = m9^m15^m17^m32^m39^m40^m42^m48^m50^m51^m53^m54^m55^m56^m57^m59^m60^m61^m68^m77^m78^m90
	c36 = m11^m12^m14^m33^m37^m54^m56^m59^m60^m68^m75^m78^m90
	c41 = m5^m7^m10^m12^m13^m16^m18^m20^m22^m30^m32^m38^m44^m48^m53^m55^m65^m66^m67^m69^m70^m72^m88^m93
	c42 = m52^m54^m56^m57^m59^m18^m13^m14^m4^m9^m10^m11^m42^m45^m46^m48^m34^m39^m66^m69^m70^m71^m73^m74^m64^m65^m33^m61^m62^m29^m76^m22^m25^m77^m85^m88^m91
	c43 = m53^m54^m55^m57^m59^m60^m20^m16^m12^m13^m1^m3^m7^m8^m9^m11^m41^m42^m44^m46^m37^m38^m39^m67^m68^m71^m64^m31^m32^m33^m61^m27^m29^m30^m76^m77^m79^m80^m84^m90^m91^m93
	c44 = m5^m10^m11^m12^m13^m19^m27^m35^m37^m44^m46^m53^m70^m72^m73^m81^m84^m88
	c45 = m51^m52^m53^m54^m55^m56^m57^m59^m60^m19^m20^m12^m14^m1^m3^m4^m6^m8^m9^m10^m41^m42^m44^m40^m34^m35^m39^m68^m70^m73^m31^m32^m61^m62^m25^m77^m79^m80^m81^m85^m87^m88^m90
	c46 = m52^m54^m56^m59^m60^m13^m14^m1^m2^m3^m4^m9^m10^m11^m46^m34^m37^m68^m69^m70^m64^m31^m33^m62^m27^m29^m25^m79^m84^m85^m88^m90)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0), np.concatenate(c14, c24, c34, c44, c54, c64), axis=0)), axis=1)

	return result



def div4x6(a):

	col = len(a)/4
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46)

def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)

def mat466mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26, a31, a32, a33, a34, a35, a36, a41, a42, a43, a44, a45, a46 = div4x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a43,b13^b33)
	m2 =strassenItmod2( a33^a34^a25^a35^a36^a46,b12^b32^b13^b33^b15^b35^b16^b36)
	m3 =strassenItmod2( a11,b31^b32^b13^b33^b34^b35^b16)
	m4 =strassenItmod2( a24^a26,b65)
	m5 =strassenItmod2( a32^a42^a25,b23^b53^b54^b56)
	m6 =strassenItmod2( a22^a32^a26^a36,b62^b64^b65^b66)
	m7 =strassenItmod2( a24^a34^a44,b41^b43^b45^b46)
	m8 =strassenItmod2( a31^a41^a33^a43^a34^a25^a35^a36^a46,b12^b32^b42^b13^b33^b43^b44^b15^b35^b16^b36^b46)
	m9 =strassenItmod2( a21^a41,b12^b13^b16)
	m10 =strassenItmod2( a32^a42^a35^a45,b52^b53^b54^b55^b56)
	m11 =strassenItmod2( a34^a25^a35^a36^a46,b41^b12^b32^b13^b33^b43^b44^b15^b35^b16^b36)
	m12 =strassenItmod2( a12^a22^a32^a42^a14^a24^a44^a16^a26,b23^b43^b53^b63)
	m13 =strassenItmod2( a22^a32^a42,b21^b25)
	m14 =strassenItmod2( a11^a12^a22^a32^a42^a13^a23^a43^a14^a24^a44^a15^a45^a16^a26,b32^b13^b14^b34^b15^b35^b16)
	m15 =strassenItmod2( a22^a25,b25)
	m16 =strassenItmod2( a11^a41^a12^a22^a32^a42^a14^a24^a44^a15^a45^a16^a26,b11^b31^b12^b32^b13^b33^b14^b34)
	m17 =strassenItmod2( a12^a22^a32^a42^a16^a26,b21^b51^b22^b52^b23^b43^b53^b63^b24^b54)
	m18 =strassenItmod2( a32^a42^a44^a25^a45,b52^b53^b56)
	m19 =strassenItmod2( a22^a32^a26^a36,b61^b65^b66)
	m20 =strassenItmod2( a24,b41^b61)
	m21 =strassenItmod2( a12^a22^a32^a42^a14^a24^a44^a15^a45,b11^b51^b12^b32^b52^b53^b14^b34^b54^b15^b35^b16^b56)
	m22 =strassenItmod2( a31^a41^a33^a43,b12^b32^b42^b13^b33^b43^b14^b44^b15^b35^b36^b46)
	m23 =strassenItmod2( a12^a22^a32^a42^a14^a24^a44^a16^a26,b21^b41^b51^b61^b23^b43^b53^b63^b24^b44^b54^b64^b25^b45^b55^b65^b26^b46^b56^b66)
	m24 =strassenItmod2( a14^a24^a44^a16^a26,b42^b52^b24^b64^b45^b55)
	m25 =strassenItmod2( a44^a25^a35,b42^b52^b53^b45^b56)
	m26 =strassenItmod2( a11^a41^a12^a22^a32^a42^a13^a43^a14^a24^a44^a15^a45^a16^a26,b31^b32^b33^b34)
	m27 =strassenItmod2( a25^a35,b43^b53^b44^b54^b45^b55^b46^b56)
	m28 =strassenItmod2( a31^a33,b12^b13^b15^b16)
	m29 =strassenItmod2( a44^a25^a35,b41^b42^b52^b43^b44^b54^b45^b56)
	m30 =strassenItmod2( a16^a26,b21^b41^b51^b61^b23^b43^b53^b63^b24^b44^b54^b64^b25^b45^b55^b65)
	m31 =strassenItmod2( a14^a24^a44^a25^a35^a16^a26,b41^b51^b43^b53^b44^b54)
	m32 =strassenItmod2( a12^a22^a32^a42,b21^b41^b51^b61^b23^b43^b53^b63^b24^b44^b54^b64)
	m33 =strassenItmod2( a14^a24^a44^a16^a26,b21^b41^b51^b61^b23^b43^b53^b63^b44^b54^b25^b45^b55^b65^b26^b66)
	m34 =strassenItmod2( a32^a42^a35^a45,b53^b55^b56)
	m35 =strassenItmod2( a24^a34^a25^a35,b41^b45^b46)
	m36 =strassenItmod2( a12^a22^a32^a42^a14^a24^a44^a15^a45^a16^a26,b13^b33^b34^b54^b15^b35^b16^b36)
	m37 =strassenItmod2( a12^a22^a32^a42^a14^a24^a44^a15^a45^a16^a26,b32^b13^b34^b15^b35^b16^b56)
	m38 =strassenItmod2( a22^a32^a46,b61^b24^b64^b65^b26^b66)
	m39 =strassenItmod2( a33^a43,b14^b34^b16^b36)
	m40 =strassenItmod2( a13^a23^a33^a43,b15^b35^b16^b36)
	m41 =strassenItmod2( a12^a22^a16^a26,b22^b52^b25^b55)
	m42 =strassenItmod2( a22^a32^a14^a24^a44^a16^a26,b21^b61^b24^b64^b25^b65^b26^b66)
	m43 =strassenItmod2( a23^a33^a43,b32^b34^b35^b36)
	m44 =strassenItmod2( a24^a36^a46,b42^b43^b44^b65^b46)
	m45 =strassenItmod2( a14^a24^a44^a16^a26,b21^b41^b51^b61^b42^b52^b43^b53^b24^b44^b54^b64^b25^b45^b55^b65^b26^b66)
	m46 =strassenItmod2( a14^a24^a44^a25^a35^a16^a26,b41^b51^b42^b52^b43^b53^b44^b54^b45^b55)
	m47 =strassenItmod2( a23^a43,b32^b33^b36)
	m48 =strassenItmod2( a12^a22^a16^a26,b23^b53^b24^b54^b26^b56)
	m49 =strassenItmod2( a12^a22^a32^a42^a16^a26^a36^a46,b41^b61^b43^b63^b44^b64)
	m50 =strassenItmod2( a11^a12^a22^a32^a42^a14^a24^a44^a15^a25^a35^a16^a26,b51^b53^b55^b56)
	m51 =strassenItmod2( a21,b12^b32^b15^b35)
	m52 =strassenItmod2( a21^a31^a43,b32^b13^b33^b34^b15^b16)
	m53 =strassenItmod2( a21^a31^a41,b12^b14^b15^b16)
	m54 =strassenItmod2( a36^a46,b42^b62^b44^b64^b45^b65)
	m55 =strassenItmod2( a11^a13,b31^b32^b33^b53^b34^b35^b56)
	m56 =strassenItmod2( a34^a44^a36^a46,b43^b45^b46)
	m57 =strassenItmod2( a26^a36^a46,b61^b62^b63^b64)
	m58 =strassenItmod2( a12^a22^a32^a42^a24^a16^a26,b41^b61^b44^b64)
	m59 =strassenItmod2( a21^a23,b32^b35)
	m60 =strassenItmod2( a23,b31^b32^b35^b36)
	m61 =strassenItmod2( a21^a31,b12^b32^b13^b33^b14^b34)
	m62 =strassenItmod2( a21,b11^b12^b15^b16)
	m63 =strassenItmod2( a14^a24^a16^a26,b42^b52)
	m64 =strassenItmod2( a22^a25,b21^b22^b23^b24)
	m65 =strassenItmod2( a14^a24^a44,b21^b41^b51^b61^b25^b45^b55^b65^b26^b46^b56^b66)
	m66 =strassenItmod2( a11^a12^a22^a32^a42^a13^a14^a24^a44^a15^a45^a16^a26,b32^b53^b34^b35^b56)
	m67 =strassenItmod2( a21^a31,b11^b31^b12^b32^b14^b34)
	m68 =strassenItmod2( a21^a33^a43,b32^b14^b35^b16)
	m69 =strassenItmod2( a21^a31^a33,b31^b12^b13^b33^b15^b16)
	m70 =strassenItmod2( a22^a32^a46,b61^b25^b65^b26^b66)
	m71 =strassenItmod2( a24^a26,b61^b65)
	m72 =strassenItmod2( a11^a12^a22^a32^a42^a14^a24^a44^a15^a45^a16^a26,b11^b51^b12^b53^b14^b15^b55^b16^b56)
	m73 =strassenItmod2( a12^a22^a32^a42^a13^a23^a43^a14^a24^a44^a15^a45^a16^a26,b13^b33^b14^b34^b15^b35^b16^b36)
	m74 =strassenItmod2( a22^a32,b22^b62^b25^b65^b26^b66)
	m75 =strassenItmod2( a41^a43,b15^b16)
	m76 =strassenItmod2( a14^a24^a44^a16^a26^a46,b23^b63^b24^b64)
	m77 =strassenItmod2( a25,b21^b51^b22^b52^b24^b54)
	m78 =strassenItmod2( a16^a26,b11^b51^b12^b22^b32^b42^b62^b53^b14^b34^b54^b15^b25^b35^b45^b55^b65^b16^b56)
	m79 =strassenItmod2( a32^a42,b22^b52^b24^b54)
	m80 =strassenItmod2( a11^a21^a41^a12^a22^a32^a42^a13^a23^a43^a14^a24^a44^a15^a45^a16^a26,b13^b14^b15^b16)
	m81 =strassenItmod2( a11^a41^a12^a22^a32^a42^a13^a23^a43^a14^a24^a44^a15^a45^a16^a26,b31^b32^b13^b33^b14^b34^b15^b16)
	m82 =strassenItmod2( a42^a46,b23^b24)
	m83 =strassenItmod2( a24,b45^b65)
	m84 =strassenItmod2( a22^a32^a46,b62^b23^b64^b65^b26^b66)
	m85 =strassenItmod2( a11,b11^b51^b32^b53^b34^b35^b55^b16^b56)
	m86 =strassenItmod2( a21^a43,b32^b13^b15^b35^b16)
	m87 =strassenItmod2( a13^a23^a33,b15^b35^b16^b36)
	m88 =strassenItmod2( a12^a22^a32^a42^a14^a24^a44^a15^a45^a16^a26,b13^b53^b15^b55^b16^b56)
	m89 =strassenItmod2( a41^a43,b13)
	m90 =strassenItmod2( a22^a32^a14^a24^a44^a16^a26,b24^b64)
	m91 =strassenItmod2( a12^a22^a32^a42^a16^a26^a36^a46,b41^b61^b44^b64^b45^b65^b46^b66)
	m92 =strassenItmod2( a21^a31^a23^a33,b31^b33)
	m93 =strassenItmod2( a44,b42^b52^b43^b53^b44^b54)
	m94 =strassenItmod2( a24^a34^a44,b41^b42^b44)
	m95 =strassenItmod2( a44,b44^b54^b46^b56)
	m96 =strassenItmod2( a11^a21^a31^a13^a23^a33,b31^b33^b15^b16)
	m97 =strassenItmod2( a44^a25^a35,b41^b42^b54^b46^b56)
	m98 =strassenItmod2( a21^a31^a13^a23^a33,b31^b32^b34^b15^b16)
	m99 =strassenItmod2( a44^a45,b54^b56)
	m100 =strassenItmod2( a24^a36^a46,b41^b61^b43^b44^b64)
	m101 =strassenItmod2( a32^a25^a46,b23^b25)
	m102 =strassenItmod2( a21^a31^a23^a33,b31^b32^b34)
	m103 =strassenItmod2( a25,b25^b55)
	m104 =strassenItmod2( a12^a22^a32^a42^a16^a26,b41^b61^b23^b43^b53^b63^b24^b44^b54^b64^b45^b65^b26^b46^b56^b66)
	m105 =strassenItmod2( a24^a36^a46,b41^b42^b43^b64^b45^b65)
	m106 =strassenItmod2( a32^a42^a25,b21^b22^b52^b24^b54^b25)
	m107 =strassenItmod2( a46,b23^b63^b25^b65)
	m108 =strassenItmod2( a13,b31^b32^b34^b35^b36)
	m109 =strassenItmod2( a46,b23^b63^b24^b64^b25^b65^b26^b66)
	m110 =strassenItmod2( a11^a12^a22^a32^a42^a13^a14^a24^a15^a16^a26,b53^b56)
	m111 =strassenItmod2( a11^a41^a12^a22^a32^a42^a43^a14^a24^a44^a15^a45^a16^a26,b31^b32^b13^b33^b34^b15^b16)
	m112 =strassenItmod2( a42^a46,b24^b26)
	m113 =strassenItmod2( a32^a42^a25,b21^b22^b52^b53^b24^b54^b55^b56)
	m114 =strassenItmod2( a12^a22^a32^a42^a25^a16^a26,b21^b51^b22^b52^b23^b53^b24^b54)
	m115 =strassenItmod2( a22^a32^a24^a26^a46,b64)
	m116 =strassenItmod2( a12^a22^a32^a42^a16^a26,b41^b61^b22^b52^b44^b64^b25^b55)
	
c11 = m50^m20^m15^m17^m13^m3^m4^m45^m34^m111^m113^m116^m96^m98^m102^m104^m106^m71^m63^m65^m31^m32^m33^m26^m29^m75^m23^m25^m85^m88^m89^m92^m93
	c12 = m54^m55^m58^m19^m20^m21^m15^m17^m18^m13^m14^m3^m4^m5^m6^m47^m36^m38^m108^m110^m115^m100^m105^m106^m71^m72^m73^m63^m64^m32^m30^m78^m82^m83^m84^m85^m88
	c13 = m49^m55^m57^m58^m19^m15^m18^m12^m5^m6^m10^m45^m46^m34^m37^m111^m95^m96^m97^m98^m99^m100^m101^m102^m66^m70^m63^m31^m33^m26^m27^m29^m75^m24^m25^m84^m89^m92
	c14 = m58^m20^m15^m17^m18^m12^m14^m5^m10^m46^m47^m34^m36^m38^m108^m110^m111^m115^m116^m95^m97^m101^m104^m66^m70^m73^m65^m31^m26^m27^m29^m75^m23^m24^m25^m82^m89^m93
	c15 = m3^m4^m15^m17^m25^m26^m30^m31^m32^m34^m46^m55^m63^m75^m83^m88^m89^m106^m110^m111^m113^m116
	c16 = m58^m19^m15^m17^m18^m3^m5^m10^m44^m46^m34^m37^m108^m110^m111^m112^m116^m96^m97^m98^m99^m101^m102^m105^m66^m70^m71^m31^m33^m26^m27^m29^m30^m75^m23^m24^m25^m82^m83^m89^m91^m92^m93
	c21 = m1^m4^m13^m15^m20^m26^m39^m40^m43^m47^m51^m59^m62^m68^m71^m77^m79^m80^m81^m86^m87^m106
	c22 = m54^m58^m59^m60^m19^m20^m15^m13^m1^m4^m5^m6^m41^m47^m40^m38^m113^m115^m116^m100^m103^m105^m69^m71^m64^m28^m82^m83^m84^m86^m87^m92
	c23 = m49^m51^m57^m58^m59^m19^m15^m17^m1^m6^m43^m47^m40^m39^m114^m100^m101^m68^m69^m70^m26^m28^m77^m80^m81^m84^m86^m87^m92
	c24 = m58^m59^m60^m20^m15^m1^m5^m41^m47^m40^m38^m113^m115^m116^m101^m103^m106^m70^m26^m79^m80^m81^m82^m86^m87
	c25 = m1^m4^m15^m28^m40^m47^m51^m60^m69^m83^m86^m87^m92^m103
	c26 = m58^m60^m19^m15^m17^m1^m41^m43^m44^m47^m48^m40^m39^m112^m113^m114^m116^m101^m103^m104^m105^m106^m68^m70^m71^m26^m77^m79^m80^m81^m82^m83^m86^m87^m91
	c31 = m51^m52^m56^m59^m20^m15^m13^m7^m42^m44^m47^m39^m108^m109^m98^m100^m105^m106^m67^m68^m70^m63^m31^m33^m61^m62^m26^m29^m76^m24^m25^m77^m79^m80^m81^m86^m87^m90^m93
	c32 = m52^m54^m58^m59^m20^m15^m13^m2^m5^m7^m11^m41^m43^m45^m47^m35^m38^m109^m113^m116^m94^m97^m102^m103^m105^m70^m74^m63^m64^m33^m28^m29^m76^m82^m83^m84^m86^m92
	c33 = m49^m51^m52^m58^m59^m15^m17^m7^m45^m46^m47^m35^m38^m39^m108^m114^m95^m98^m100^m101^m68^m69^m70^m63^m31^m33^m26^m27^m28^m29^m76^m24^m77^m80^m81^m86^m87^m90
	c34 = m56^m58^m59^m20^m15^m1^m2^m5^m11^m41^m44^m46^m47^m40^m35^m38^m108^m113^m116^m95^m98^m101^m103^m105^m106^m69^m70^m31^m61^m26^m27^m24^m25^m79^m80^m81^m82^m86^m90^m93
	c35 = m52^m53^m59^m15^m2^m7^m8^m9^m43^m44^m45^m46^m47^m38^m107^m94^m97^m102^m103^m68^m70^m63^m31^m33^m28^m29^m75^m76^m22^m24^m83^m89^m90^m92
	c36 = m51^m52^m53^m56^m58^m59^m15^m17^m2^m8^m9^m41^m44^m46^m47^m48^m35^m38^m39^m107^m108^m109^m112^m113^m114^m116^m94^m97^m98^m100^m101^m103^m104^m106^m69^m70^m31^m26^m27^m75^m22^m24^m25^m77^m79^m80^m81^m82^m83^m87^m89^m90^m91^m93
	c41 = m13^m15^m16^m24^m25^m29^m31^m33^m34^m42^m50^m52^m53^m61^m63^m70^m72^m76^m90^m93^m106^m109^m111^m113
	c42 = m52^m53^m60^m15^m18^m13^m14^m5^m45^m47^m40^m38^m109^m110^m106^m66^m70^m74^m63^m64^m33^m61^m26^m76^m81^m82^m84^m87^m89
	c43 = m1^m5^m10^m15^m18^m24^m25^m27^m29^m31^m33^m34^m38^m45^m46^m63^m70^m76^m89^m90^m95^m97^m99^m101
	c44 = m60^m15^m18^m14^m1^m5^m10^m46^m47^m40^m34^m38^m110^m95^m97^m101^m66^m70^m31^m26^m27^m29^m75^m24^m25^m81^m82^m87^m89^m90^m93
	c45 = m51^m52^m53^m60^m15^m14^m9^m45^m46^m47^m40^m34^m38^m107^m110^m113^m106^m66^m70^m63^m31^m33^m61^m26^m75^m76^m24^m25^m81^m86^m87^m90
	c46 = m51^m52^m53^m60^m15^m18^m14^m5^m9^m10^m46^m47^m34^m38^m107^m109^m110^m112^m97^m99^m101^m66^m70^m31^m61^m26^m27^m29^m24^m25^m81^m82^m86^m90^m93)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0), np.concatenate(c14, c24, c34, c44, c54, c64), axis=0)), axis=1)

	return result



def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)def mat555mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35, a41, a42, a43, a44, a45, a51, a52, a53, a54, a55 = div5x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenItmod2( -a51^2*a52^2*a54-2*a55,3*b11^b21^b41)
	m2 =strassenItmod2( a53,2*b12-b32-b52-2*b14^b34^b54^4*b15-2*b35-2*b55)
	m3 =strassenItmod2( a51-2*a52-a54^2*a55,2*b11^b41)
	m4 =strassenItmod2( -a53^a55,b21^b51)
	m5 =strassenItmod2( a41-a42-2*a44^2*a45,-2*b11-b21^2*b12^b22)
	m6 =strassenItmod2( a44,3*b12^b22^b42)
	m7 =strassenItmod2( -a51^2*a52-a44^2*a54-2*a55,2*b11^b41^b12^b22)
	m8 =strassenItmod2( -a44^a54,-2*b11-b41^2*b12^b42)
	m9 =strassenItmod2( -a41^2*a42^a44-2*a45,b12^b22)
	m10 =strassenItmod2( a45,2*b11-b31-b51-2*b12^b32^b52)
	m11 =strassenItmod2( -a43^a45,-b11-b21-b31^b12^b22^b32)
	m12 =strassenItmod2( a41-a51-2*a42^2*a52^a43-2*a44^2*a54^a45-2*a55,-b11-b21^b12^b22)
	m13 =strassenItmod2( -a31^2*a32^2*a34-2*a35,3*b14^b24^b44-6*b15-2*b25-2*b45)
	m14 =strassenItmod2( a31-a41-2*a32^2*a42-2*a34^2*a44^2*a35-2*a45,-b11-b21-b31^b32^b14^b24^b34-2*b15-2*b25-2*b35)
	m15 =strassenItmod2( -a31^2*a32^2*a34-a44-2*a35,b12^b22^2*b14^b44-4*b15-2*b45)
	m16 =strassenItmod2( -a31^a41^2*a32-2*a42^a43^2*a34-2*a44-2*a35^a45,-b11-b21-b31^b12^b22^b32^b34-2*b35)
	m17 =strassenItmod2( -a31^a51^a32-a52^2*a34-2*a54-2*a35^2*a55,b22^b52)
	m18 =strassenItmod2( -a31^a41^a32-a42^2*a34-2*a44-2*a35^2*a45,b21^b31^b51-b22-b32-b52^b24^b34^b54-2*b25-2*b35-2*b55)
	m19 =strassenItmod2( a33-a53,-2*b12^b32^b52)
	m20 =strassenItmod2( -a33^a43^a53,b32)
	m21 =strassenItmod2( -a34^a54,b12-b42^b52-b14^b44-b54^b15-b45^b55)
	m22 =strassenItmod2( -a34^a44,-2*b11-b41^2*b12^b42)
	m23 =strassenItmod2( -a34^a44,-2*b12-b42^2*b14^b44-4*b15-2*b45)
	m24 =strassenItmod2( a31-2*a32-a34^2*a35,2*b14^b44-4*b15-2*b45)
	m25 =strassenItmod2( a35,b24^b34^b54-2*b25-2*b35-2*b55)
	m26 =strassenItmod2( -a53^a35-a45,b21^b31^b51-b32)
	m27 =strassenItmod2( -a31^a32^2*a34-a35,2*b14^b24-4*b15-2*b25)
	m28 =strassenItmod2( a31-a41-a32^a42-2*a34^2*a44^a35-2*a45,-2*b11^b31^b51^2*b12-b32-b52^b24^b34^b54-2*b25-2*b35-2*b55)
	m29 =strassenItmod2( a31-a51-a32^a52-2*a34^2*a54^a35^a45-a55,2*b11^b21-2*b12^b52)
	m30 =strassenItmod2( -a31^a41^a32-a42^2*a34-2*a44-a35^a45,-2*b11^b31^b51^2*b12-b32-b52-2*b14^b34^b54^4*b15-2*b35-2*b55)
	m31 =strassenItmod2( a31-a41-a32^a42^a53-2*a34^2*a44^a35-a45,b21^b31^b51^2*b12-b32-b52-2*b14^b34^b54^4*b15-2*b35-2*b55)
	m32 =strassenItmod2( -a31^a41^a51^a32-a42-a52^2*a34-2*a44-2*a54-a35^a45^a55,2*b11^b21)
	m33 =strassenItmod2( -a33^a35,b34-2*b35)
	m34 =strassenItmod2( -a31^a41^2*a32-2*a42-a33^a43^2*a34-2*a44-a35^a45,-b31^b32^b34-2*b35)
	m35 =strassenItmod2( -a31^a51^a32-a52-a33^a53^2*a34-2*a54-a35^a55,-2*b12^b52)
	m36 =strassenItmod2( -a34^a54-a35^a55,-2*b12^b32^b52^2*b14-b34-b54-2*b15^b35^b55)
	m37 =strassenItmod2( a23,b21^b31-b22-b32-b23-b33^b25^b35)
	m38 =strassenItmod2( -a22^a23,-b11^b21-b41^b13-b23^b43)
	m39 =strassenItmod2( a41^a22-2*a42-a23^2*a24-4*a44^2*a25^2*a45,b11^b21^b31-b12-b22-2*b32-b13-b23-b33^b15^b25^b35)
	m40 =strassenItmod2( a22-a42-a23^a43,-2*b13^b33^b53)
	m41 =strassenItmod2( a41^a22-2*a42-a23^a43^2*a24-4*a44^2*a25^a45,-2*b21-b31^b41-2*b12^2*b22^3*b32-b42^b52-2*b13^2*b23^2*b33-b43^b53^2*b14-b34-b54-2*b15-2*b25^b45^b55)
	m42 =strassenItmod2( -a24^a44,b15-b45^b55)
	m43 =strassenItmod2( a25,-b11^b41-b51^2*b12-2*b42^2*b52^b13-b43^b53-2*b15^2*b45-2*b55)
	m44 =strassenItmod2( a21-a41-2*a22^2*a42-4*a24^4*a44-5*a25-2*a45,b11^b21^b31-2*b12-2*b22-2*b32-b13-b23-b33^b15^b25^b35)
	m45 =strassenItmod2( -a21^a22^2*a24^3*a25,2*b11^b21^b31-4*b12-2*b22-2*b32-2*b13-b23-b33^2*b15^b25^b35)
	m46 =strassenItmod2( a24-a44^a25,-2*b22^b42^b15-b45^b55)
	m47 =strassenItmod2( -a23^a43^a24-a44^a25-a45,3*b12^b22^b32-3*b14-b24-b34^3*b15^b25^b35)
	m48 =strassenItmod2( a22-a23^a24^a25,-2*b11-b41^2*b13^b43)
	m49 =strassenItmod2( a41^a22-2*a42-a23^a43^a24-3*a44^a25^a45,-2*b21^b41-4*b12^b22^b32-b42^b52-4*b13^b23^b33-b43^b53^4*b14^b24-b34-b54-4*b15-3*b25^b35^b45^b55)
	m50 =strassenItmod2( -a22^a42^a23-a43-a24^a44-a25^a45,b23^b33^b53)
	m51 =strassenItmod2( a11-a41-a51-2*a12^2*a42^2*a52^2*a14-2*a44-2*a54^2*a15-2*a45-2*a55,3*b12^b22^b32^3*b13^b23^b33-b43^b53-3*b14-b24-b34^4*b15^b25^b35-b45^b55)
	m52 =strassenItmod2( a11-a21-a51-2*a12^2*a22^2*a52^2*a14-2*a24-2*a54^2*a15-2*a25-2*a55,b13)
	m53 =strassenItmod2( -a11^a21^a31^2*a12-2*a22-2*a32-2*a14^2*a24^2*a34-2*a15^2*a25^2*a35,3*b12^b22-b42^b52^3*b13^b23-b43^b53-3*b14-b24^b44-b54^3*b15^b25-b45^b55)
	m54 =strassenItmod2( a11-a21-a31-2*a12^2*a22^2*a32^2*a14-2*a24-3*a34^a54^2*a15-2*a25-2*a35,b12-b42^b52-b43^b53-b14^b44-b54^b15-b45^b55)
	m55 =strassenItmod2( a11-a41-a51-2*a12^2*a42^2*a52^2*a14^a24-3*a44-2*a54^2*a15-2*a45-2*a55,-b43^b53^b15-b45^b55)
	m56 =strassenItmod2( a11-a41-a51-2*a12^2*a42^2*a52-a23^a43^2*a14^a24-3*a44-2*a54^2*a15^a25-3*a45-2*a55,3*b12^b22^b32^2*b13^b23^b33-3*b14-b24-b34^3*b15^b25^b35)
	m57 =strassenItmod2( -a11^a31^a41^2*a12-2*a32-2*a42^a23-a43-2*a14-a24^3*a34^3*a44-a54-2*a15-a25^2*a35^3*a45,b12-b14^b15)
	m58 =strassenItmod2( -a11^a41^a51^2*a12-2*a42-2*a52^a23^a33-a43-a53-2*a14-a24-a34^3*a44^3*a54-2*a15-a25-a35^3*a45^3*a55,2*b12^b22^b32^2*b13^b23^b33-2*b14-b24-b34^2*b15^b25^b35)
	m59 =strassenItmod2( a31-a41^a12-a22-2*a32^a42-2*a34^2*a44^2*a35-2*a45,-5*b12-b42^b52^4*b14^b24-b54-3*b15-2*b25^b45^b55)
	m60 =strassenItmod2( -a12^a42^a52^a23-a43-a24^a44-a25^a45,2*b13^b23^b33)
	m61 =strassenItmod2( a12-a32-a42-a23^a43^a24-a44^a25-a45,2*b12^b22-2*b14-b24^2*b15^b25)
	m62 =strassenItmod2( a12-a42-a52-a23-a33^a43^a53^a24^a34-a44-a54^a25^a35-a45-a55,2*b12^b22^2*b13^b23^b33-2*b14-b24^2*b15^b25)
	m63 =strassenItmod2( a11-a21-a41-a12^a22^a42-2*a14^2*a24^2*a44-2*a15^2*a25^2*a45,-b12^b42-b52^b15-b45^b55)
	m64 =strassenItmod2( a11-a41-a12^a42^a23-2*a14^2*a44-2*a15^2*a45,b11-b12-b13^b15)
	m65 =strassenItmod2( -a11^a21^a41^a12-a22-a42^2*a14-2*a24-2*a44^2*a15-3*a25-2*a45,b11-2*b12^b42-b52-b13^2*b15-b45^b55)
	m66 =strassenItmod2( a13-a43,2*b15^b25^b35)
	m67 =strassenItmod2( -a41-a22^2*a42-a13^2*a23-a43-2*a24^4*a44-2*a25,-2*b21^b41-3*b12^b22^b32-b42^b52-4*b13^b23^b33-b43^b53^2*b14-b34-b54-b15-b25^b35^b45^b55)
	m68 =strassenItmod2( a13-a23-a43,-b11-b21-b31^2*b12^2*b22^2*b32^b13^b23^b33-2*b15-2*b25-2*b35)
	m69 =strassenItmod2( -a13^a23^a43,-b12-b22-b32^b15^b25^b35)
	m70 =strassenItmod2( a13-a23-a45,-4*b12-b42^b52^2*b14-b34-b54^2*b35^b45^b55)
	m71 =strassenItmod2( -a21^a22^a13-a43^2*a24^3*a25,b11^b21^b31-2*b12-2*b22-2*b32-b13-b23-b33^b25^b35)
	m72 =strassenItmod2( a13-a23^a24-a44^a25-a45,-2*b21^b41-4*b13^b23^b33-b43^b53)
	m73 =strassenItmod2( a51^a12-a42-2*a52^a13-2*a23^a43^2*a24-2*a44-2*a54^2*a25-2*a45^2*a55,3*b11^b21^b41-3*b13-b43^b53)
	m74 =strassenItmod2( -a12^a42^a52^a13-a43,2*b15^b25)
	m75 =strassenItmod2( a12-a22-a42-a13^a23^a43,-b12-b22^b15^b25)
	m76 =strassenItmod2( a14-a44-a54,-b42^b52^b44-b54-b45^b55)
	m77 =strassenItmod2( a14-a24-a54,-b43^b53)
	m78 =strassenItmod2( -a11^a41^a51^2*a12-2*a42-2*a52-3*a14^3*a44^3*a54-2*a15^2*a45^2*a55,-b43^b53-b45^b55)
	m79 =strassenItmod2( -a11^a21^a31^2*a12-2*a22-2*a32-3*a14^3*a24^3*a34-2*a15^2*a25^2*a35,-b42^b52-b43^b53^b44-b54-b45^b55)
	m80 =strassenItmod2( a15-a45,-b41^b51^b42-b52^b43-b53-b45^b55)
	m81 =strassenItmod2( a11-a21-a41-a12^a22^a42-2*a14^2*a24^2*a44-3*a15^3*a25^3*a45,b42-b52-b45^b55)
	m82 =strassenItmod2( a14-a44^a15-a45,b11-b21^b41-b12^b22-b42-b13^b23-b43^b15-b25^b45)
	m83 =strassenItmod2( a14-a44-a54^a15-a45,3*b12^b22^b42-3*b15-b45^b55)
	m84 =strassenItmod2( -a14^a44^a54-a15^a45^a55,-2*b13^b33^b53)
	m85 =strassenItmod2( a14-a44-a54^a15-a45-a55,-2*b12^b32^b52^2*b14-b34-b54-2*b15^b35^b55)
	m86 =strassenItmod2( a53^a14-a44-a54^a15-a45-a55,2*b12-b32-b52-2*b14^b34^b54^4*b15-b35-2*b55)
	m87 =strassenItmod2( a22-a23^a14-a44^a15-a45,-b11^b21-b41-b12-b22^b13-b23^b43^b15^b25)
	m88 =strassenItmod2( a22-a42-a23^a43^a14-a34-a44^a15-a35-a45,2*b12^b22^b23^b33^b53-2*b14-b24^2*b15^b25)
	m89 =strassenItmod2( -a14^a24^a44-a15^a25^a45,-2*b12-b42^2*b15^b45)
	m90 =strassenItmod2( -a14^a24^a34-a15^a25^a35,b22^b32^b52^b23^b33^b53-b24-b34-b54^b25^b35^b55)
	m91 =strassenItmod2( a11-a21-a31-2*a12^3*a22^3*a32-a42-a52-a23-a33^a43^a53^3*a14-2*a24-2*a34-a44-a54^3*a15-2*a25-2*a35-a45-a55,2*b12^b22^2*b13^b23-2*b14-b24^2*b15^b25)
	m92 =strassenItmod2( -a51-a12^a42^2*a52-2*a13^3*a23-a43^a14-3*a24^2*a44^a54^a15-3*a25^2*a45-2*a55,2*b11^b41-4*b13-b43^b53)
	m93 =strassenItmod2( a13-a23-a33-a14^a24^a34-a15^a25^a35,b32-b34^b35)
	m94 =strassenItmod2( -a12^a42^a13-a43-a14^a44-a15^a45,b11^b21-b12-b22-b13-b23^b15^b25)
	m95 =strassenItmod2( a51^a12-a42-2*a52-a13^a43-a14^a44-a54-a15^a45^2*a55,b12^b22^b15)
	m96 =strassenItmod2( a12-a42-a52-a13^a43^a53^a14-a44-a54^a15-a45-a55,b33)
	m97 =strassenItmod2( -a31^a41-a12^a22^2*a32-a42^a13-a23-a14^a24^3*a34-2*a44-a15^a25-2*a35^2*a45,-4*b12-b42^b52^2*b14-b54^b45^b55)
	
c11 = m51-m55-m56^m19^m20^m12^2*m1^m3-m7^m9-m10^m11-m42^m45^m47^m35^2*m37-m66-2*m68^2*m69-m71^m72^m73^2*m64^m65^m32^m29-m77^m80^m81^m92
	c12 = m55^m19^m20^m3^m5^2*m6^m7^m8^m9^m42^m45^m35^m37^m95-m68^m69-m71^m64^m65^m32^m29^m77^m78^m81^m83
	c13 = m50^m51-m55-m56^m12^2*m1^m3-m7^m9^m11^m41-m42^m47^m48^m40^2*m38^m39^m94^m67^m69^m70^2*m72^m73^m75-m77^m87^m92
	c14 = 3*m49^2*m50^2*m55^m57^m59^2*m19^2*m20^m21-m15^m16^2*m13^m14^2*m3^2*m5^4*m6^2*m7^2*m8^3*m9-m10^m11^2*m42^m45^m47^2*m35^2*m36^m37^4*m38^2*m95^m97^m66^3*m67-m68^3*m69^2*m70-m71^3*m72^m64^m65^2*m32^m27^m28^2*m29^m30^2*m75^m76^m24^2*m77^2*m78^m81^4*m82^2*m83^2*m85^4*m87^2*m88^2*m89^2*m90
	c15 = m49^m50^m55^m19^m20^m3^m5^2*m6^m7^m8^m9-m10^m42^m35^m36^2*m38^m95^m66^m67^m69^m70^m72^m32^m27^m28^m29^m30^m75^m77^m78^2*m82^m83^m85^2*m87^m88^m89^m90
	c21 = m51-m52-m55-m56^m12^m1-m7^m9^m11^m41-m42-m43^m45^m47^2*m37^m39-m66^m67-m68^m69^m70-m71^m72^2*m63^2*m64^2*m65
	c22 = m6^m9^m37^m39^m42^m44^m45^m46^m63^m64^m65
	c23 = m1-m7^m9^m11^m12^m38^m39^m41-m42^m47^m48^m51-m52-m55-m56^m67^m69^m70^m72
	c24 = m49^m54^m57-m15^m16^m13^m14^2*m6^3*m9^m11^2*m42^2*m44^m45^2*m46^m47^m37^2*m38^2*m39^m66^m67^m68^m69^m70^m71^m72^m63^m64^m65^m76^m77^m79^2*m82^2*m87^2*m89
	c25 = m6^m9^m38^m39^m42^m44^m46^m66^m68^m71^m82^m87^m89
	c31 = m1-m2-m7-m10^m12^m15-m16^m19^m22^m23^m24^m26^m29^m30^m31^m32-m33^m34^m35
	c32 = -m2^m5^m6-m10^m15^m18^m19^m23^m24^m25^m26^m28^m29^m30^m31^m32^m35
	c33 = m1^m3-m21^m38^m40^m52^m53^m54^m61-m62^m72^m73^m75^m87-m88^m91^m92^m94^m96
	c34 = 2*m49^2*m59^2*m19^2*m15^2*m18^m13-2*m2^2*m5^2*m6-2*m10^2*m35^2*m36^2*m38^2*m97^2*m67^2*m72^2*m31^2*m32^m33^2*m61^2*m26^m27^2*m28^2*m29^2*m30^2*m75^2*m23^3*m24^m25^2*m82^2*m85^2*m87^2*m93
	c35 = m49^m59^m19^m15^m18-m2^m5^m6-m10^m35^m36^m38^m97^m67^m72^m31^m32^m33^m61^m26^m27^m28^m29^m30^m75^m23^m24^m82^m85^m87^m93
	c41 = m1-m7^m9-m10^m11^m12^m19^m20^m29^m32^m35
	c42 = m5^m6^m9^m19^m20^m29^m32^m35
	c43 = m1-m7^m9^m11^m12^m38^m39^m40^m41^m48^m50^m67^m69^m70^m72
	c44 = 2*m49^2*m50^2*m19^2*m20-m15^m16^m13^m14^2*m5^2*m6^3*m9-m10^m11^2*m35^2*m36^2*m38^2*m67^2*m69^2*m70^2*m72^2*m32^m27^m28^2*m29^m30^2*m82^2*m85^2*m87^2*m88^2*m89^2*m90
	c45 = m49^m50^m19^m20^m5^m6^m9-m10^m35^m36^m38^m67^m69^m70^m72^m32^m27^m28^m29^m30^m82^m85^m87^m88^m89^m90
	c51 = m1-m2^m3^m4^m30^m31^m32
	c52 = -m2^m3^m5^m6^m7^m8-m10^m17^m18^m25^m26^m28^m29^m30^m31^m32
	c53 = m1^m3^m38^m60^m72^m73^m75^m84^m87^m92^m94^m96
	c54 = m49^m56^m57^m58^m59^m60^m21^m17^m18^m13-2*m2^2*m3^m5^2*m6^2*m7^2*m8-m10^2*m38^m95^m97^m67^m72^m74^m31^m32^m62^m26^m28^m29^m30^2*m75^m24^m25^2*m82^m83^2*m85^m86^2*m87^m93
	c55 = -m2^m3^m6^m7^m8^m38^m74^m75^m82^m83^m85^m86^m87^m95)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0), np.concatenate(c14, c24, c34, c44, c54), axis=0), np.concatenate(c15, c25, c35, c45, c55), axis=0)), axis=1)

	return result



def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)def mat555(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35, a41, a42, a43, a44, a45, a51, a52, a53, a54, a55 = div5x5(a)
	b11, b12, b13, b14, b15, b21, b22, b23, b24, b25, b31, b32, b33, b34, b35, b41, b42, b43, b44, b45, b51, b52, b53, b54, b55 = div5x5(b)


	m1 =strassenIt( a22,b24)
	m2 =strassenIt( a22+a42+a43,b23+b33+b34)
	m3 =strassenIt( a22+a42+a45,b22+b52+b54)
	m4 =strassenIt( a41+a22+a42,b14+b15+b25)
	m5 =strassenIt( a21,b14)
	m6 =strassenIt( a21+a51+a53,b13+b33+b34)
	m7 =strassenIt( a22+a42,b22+b52+b23+b33+b14+b24+b34+b54+b15+b25)
	m8 =strassenIt( a23,b34)
	m9 =strassenIt( a11+a13+a23,b14+b15+b35)
	m10 =strassenIt( a13+a23,b21+b31+b32+b52+b14+b24+b34+b54+b15+b35)
	m11 =strassenIt( a13+a23+a15,b32+b52+b54)
	m12 =strassenIt( a21+a51+a55,b12+b52+b54)
	m13 =strassenIt( a12+a13+a23,b21+b31+b24)
	m14 =strassenIt( a21+a51+a22+a42+a13+a23+a15+a25+a45+a55,b52+b54)
	m15 =strassenIt( a21+a51,b11+b21+b12+b52+b13+b33+b14+b24+b34+b54)
	m16 =strassenIt( a21+a51+a52,b11+b21+b24)
	m17 =strassenIt( a25,b54)
	m18 =strassenIt( a25+a35,b21+b51+b33+b53+b14+b24+b34+b54+b15+b55)
	m19 =strassenIt( a32+a25+a35,b21+b51+b24)
	m20 =strassenIt( a33+a25+a35,b33+b53+b34)
	m21 =strassenIt( a11+a21+a31+a41+a22+a42+a13+a23+a25+a35,b14+b15)
	m22 =strassenIt( a21+a51+a22+a42+a23+a33+a43+a53+a25+a35,b33+b34)
	m23 =strassenIt( a31+a25+a35,b14+b15+b55)
	m24 =strassenIt( a33,b31+b33+b53+b44+b35+b45)
	m25 =strassenIt( a31+a24+a34+a44+a54+a45+a55,b55)
	m26 =strassenIt( a31+a24+a34,b13+b43+b44)
	m27 =strassenIt( a11+a31+a41+a51+a53+a14+a24+a34+a44,b42+b13+b44+b35)
	m28 =strassenIt( a11+a31+a41+a51+a13+a33+a43+a53,b35)
	m29 =strassenIt( a43,b32+b23+b33+b35)
	m30 =strassenIt( a24+a44+a54,b41)
	m31 =strassenIt( a33+a24+a34,b44+b35+b45)
	m32 =strassenIt( a24+a34,b13+b43+b44+b35+b45)
	m33 =strassenIt( a44,b41)
	m34 =strassenIt( a14+a24+a34+a54,b41)
	m35 =strassenIt( a24+a54+a55,b43+b53+b44)
	m36 =strassenIt( a11,b11+b12+b42+b44+b15+b35)
	m37 =strassenIt( a42+a43,b23)
	m38 =strassenIt( a14+a34+a44+a54+a15+a35+a45+a55,b32+b53)
	m39 =strassenIt( a44,b41+b42+b43+b45)
	m40 =strassenIt( a31,b11+b13+b43+b44+b15+b55)
	m41 =strassenIt( a11+a31+a41+a51+a12+a42+a52,b11+b25)
	m42 =strassenIt( a12,b21+b31+b22+b25)
	m43 =strassenIt( a42+a52+a43,b31+b23)
	m44 =strassenIt( a11+a41+a12+a42,b11)
	m45 =strassenIt( a32,b21+b51+b23+b25)
	m46 =strassenIt( a11+a31+a51+a52,b11+b25)
	m47 =strassenIt( a11+a31+a51+a12+a32+a52,b25)
	m48 =strassenIt( a31+a41+a51+a53+a24+a34,b42+b13+b44+b35)
	m49 =strassenIt( a12+a42+a52+a13+a33+a43,b31+b23)
	m50 =strassenIt( a12+a32+a42+a52+a35+a45+a55,b51+b22)
	m51 =strassenIt( a32+a35,b51)
	m52 =strassenIt( a52,b11+b21+b22+b23)
	m53 =strassenIt( a42+a52+a43+a53,b31)
	m54 =strassenIt( a55,b51+b12+b52+b43+b53+b44)
	m55 =strassenIt( a32+a35+a55,b51+b22)
	m56 =strassenIt( a13+a33+a43+a53+a15+a35+a45+a55,b32)
	m57 =strassenIt( a41,b12+b13+b15+b25)
	m58 =strassenIt( a45,b22+b52+b53+b55)
	m59 =strassenIt( a11+a31+a41+a51+a14+a34+a44+a54,b45+b55)
	m60 =strassenIt( a33+a14+a24+a34+a44+a15,b32+b53+b44+b45)
	m61 =strassenIt( a42+a45,b22)
	m62 =strassenIt( a31+a41+a24+a34+a44+a54+a55,b12)
	m63 =strassenIt( a33+a14+a24+a34+a15,b44+b45)
	m64 =strassenIt( a24+a34+a44+a54,b12+b22+b32+b42+b52)
	m65 =strassenIt( a53+a24+a54,b32+b42+b44)
	m66 =strassenIt( a31+a51+a53+a24+a34,b13)
	m67 =strassenIt( a54,b41)
	m68 =strassenIt( a24+a54,b32+b42+b43+b53+b44)
	m69 =strassenIt( a12+a42+a52,b11+b21+b31+b51)
	m70 =strassenIt( a24,b44)
	m71 =strassenIt( a14+a24+a15,b44+b45+b55)
	m72 =strassenIt( a12+a13,b31)
	m73 =strassenIt( a53,b31+b32+b42+b13+b33+b44)
	m74 =strassenIt( a31+a41+a51+a53+a24+a34+a44,b42+b44)
	m75 =strassenIt( a15,b51+b32+b52+b44+b45+b55)
	m76 =strassenIt( a31+a24+a34+a54+a55,b43+b44)
	m77 =strassenIt( a32+a52+a35+a55,b22)
	m78 =strassenIt( a41+a42,b25)
	m79 =strassenIt( a31+a41+a51+a24+a34+a44+a54,b12+b42+b44)
	m80 =strassenIt( a51+a52,b11)
	m81 =strassenIt( a31+a41+a51+a43+a53+a24+a34,b35)
	m82 =strassenIt( a33+a24+a54+a35+a55,b53)
	m83 =strassenIt( a13+a33+a43,b41+b13+b23+b33+b43+b53)
	m84 =strassenIt( a12+a32+a42+a13+a33+a43,b23)
	m85 =strassenIt( a31+a24+a34+a44+a54+a55,b12+b43+b44+b55)
	m86 =strassenIt( a13+a33+a43+a14+a24+a34+a44,b41+b32+b13+b43+b53+b35)
	m87 =strassenIt( a11+a31+a41+a51+a24+a34+a44+a54,b12+b42+b44+b45+b55)
	m88 =strassenIt( a21+a51+a12+a22+a32+a52+a13+a23+a25+a35,b21+b24)
	m89 =strassenIt( a24+a34+a44+a54+a35+a45+a55,b22+b32+b52)
	m90 =strassenIt( a33+a43+a24+a54+a35+a45+a55,b32)
	m91 =strassenIt( a14+a34+a44+a54+a15+a35+a45+a55,b32+b53+b55)
	m92 =strassenIt( a12+a42+a52+a15+a45+a55,b51)
	m93 =strassenIt( a11+a53+a14+a24+a54,b42+b44)
	m94 =strassenIt( a11+a31+a41+a51,b15+b25+b35+b45+b55)
	m95 =strassenIt( a14+a54,b41)
	
c11 = m41+m42+m44+m46+m50+m51+m61+m67+m72+m77+m78+m92+m95
	c12 = m50+m51+m56+m59+m61+m65+m70+m71+m75+m77+m79+m87+m90+m92+m93
	c13 = m24+m27+m28+m29+m31+m32+m34+m39+m43+m48+m49+m56+m60+m63+m65+m67+m72+m81+m83+m86+m90+m93
	c14 = m8+m9+m10+m11+m13+m36+m41+m42+m44+m46+m50+m51+m59+m61+m70+m71+m75+m77+m78+m79+m87+m92
	c15 = m28+m31+m36+m41+m44+m46+m59+m63+m70+m71+m78+m79+m81+m87
	c21 = m1+m13+m16+m19+m30+m33+m51+m67+m72+m80+m88
	c22 = m3+m11+m12+m14+m17+m56+m61+m62+m65+m70+m74+m79+m90
	c23 = m2+m6+m8+m20+m22+m26+m35+m37+m66+m70+m76+m82
	c24 = m1+m5+m8+m17+m70
	c25 = m4+m5+m9+m21+m23+m25+m28+m31+m38+m63+m70+m71+m78+m81+m91
	c31 = m30+m33+m34+m37+m41+m43+m44+m45+m47+m49+m51+m67+m72+m78+m80+m84+m95
	c32 = m25+m33+m35+m38+m39+m51+m54+m55+m58+m60+m63+m64+m68+m76+m82+m85+m89
	c33 = m24+m26+m31+m32+m35+m37+m43+m49+m70+m72+m76+m82+m84
	c34 = m17+m18+m19+m20+m23+m24+m26+m31+m32+m37+m40+m41+m43+m44+m45+m47+m49+m70+m72+m78+m80+m84
	c35 = m25+m26+m31+m32+m38+m40+m41+m44+m47+m63+m70+m71+m78+m80+m91
	c41 = m33+m37+m41+m42+m43+m46+m50+m52+m55+m61+m69+m78
	c42 = m25+m33+m38+m39+m58+m60+m61+m62+m63+m76+m82+m85+m90
	c43 = m29+m33+m37+m38+m39+m48+m60+m63+m66+m74+m81+m82+m90
	c44 = m1+m2+m3+m4+m7+m25+m29+m33+m38+m39+m48+m57+m58+m60+m62+m63+m66+m74+m76+m81+m82+m85+m90
	c45 = m25+m33+m39+m48+m57+m62+m66+m74+m76+m78+m81+m85
	c51 = m37+m43+m51+m52+m53+m55+m67+m77+m80
	c52 = m35+m51+m54+m55+m62+m65+m68+m70+m74+m77+m79
	c53 = m26+m35+m37+m43+m53+m65+m66+m68+m70+m73+m76
	c54 = m5+m6+m12+m15+m16+m35+m37+m43+m51+m52+m53+m54+m55+m65+m68+m70+m73+m77
	c55 = m26+m32+m33+m36+m39+m40+m46+m48+m57+m62+m66+m74+m76+m79+m80+m85+m87+m94)
	m1 =strassenIt( -a12-a22-2*a42+a52-a23-a33-3*a43+a53-a14-a24-2*a44+a54,2*b31+2*b41+b32+b42)
	m2 =strassenIt( a12-a13+a14-a15+a25+2*a45,b11+2*b21-b31-b41-b51+2*b22-2*b13+2*b23+2*b33+2*b43+2*b53-b14+2*b24+b34+b44+b54-b15+b25+b35+b45+b55)
	m3 =strassenIt( -a23-a33-3*a43+a53,b21+b31+b22+b32+b23+b33+b25+b35)
	m4 =strassenIt( -a31-2*a41+a51-a23-3*a43,b11-b21-b31+b12-b22-b32+2*b13-b23-b33-b24-b34+b25+b35)
	m5 =strassenIt( a22+3*a42-a23-3*a43-a24-3*a44+a35+2*a45-a55,b41+b42+b43+b44)
	m6 =strassenIt( a22+3*a42-a52-a14-a24-3*a44+a54,b41+b51+b42+b52-b13+b23+b33+b43+b53)
	m7 =strassenIt( -4*a11+4*a21+2*a31+12*a41-2*a51-2*a12+a22+a32+3*a42-a52-2*a13+3*a23+a33+9*a43-a53+2*a14-a24-a34-3*a44+a54-2*a15+2*a25+4*a45,b31+b32+b33+b34)
	m8 =strassenIt( a22+3*a42-a52-a24-3*a44+a54,-2*b41-2*b51-b12+b32-b42-b52-b13+b33+b43+b53-b14+b34+b44+b54-b15+b35+b45+b55)
	m9 =strassenIt( -2*a11+2*a21+2*a31+8*a41-2*a51-a12+a32+a42-a52-a13+2*a23+a33+7*a43-a53+a14-a34-a44+a54-a15+a25+2*a45,b25)
	m10 =strassenIt( a11-a21-a31-4*a41+a51+a13-a23-3*a43-a14+a15-a25-2*a45,b11+b21+b31+b41+b22+b32+b42+b52-b13+b23+b33+b43+2*b53-b14+b24+b34+b44+b54-b15+b25+b35+b55)
	m11 =strassenIt( a12+a22+3*a42-a52-a13-a23-3*a43+a53-a24-3*a44+a54+a25+3*a45-a55,b11-b31+b12-b32+b53)
	m12 =strassenIt( a12-a13+a14,-b41-b51+2*b43+2*b53+b44+b54+b45+b55)
	m13 =strassenIt( a11-a21-a31-4*a41+a51,-b11-b12-b13+b21+b22+b23+b31+b32+b33+b34-b15+b25-b14+b24+b51+b52+b53+b54+b55+b45+b41+b42+b43+b44+b35)
	m14 =strassenIt( -a11+a21+a31+4*a41-a51-a13+a23+a33+4*a43-a53,-b25+b35)
	m15 =strassenIt( a24+3*a44-a54-a25-3*a45+a55,-b31-b51+b12-b32+b53+b14+b54+b15+b55)
	m16 =strassenIt( a11-a21-2*a41+a12+a42-a23-3*a43-2*a14+a24+a34+3*a44-a54+2*a15-2*a25-4*a45,b21+b22+b23+b24+b25)
	m17 =strassenIt( -a15-a35-a45+2*a55,2*b51+b52)
	m18 =strassenIt( a15-a25+a35-a45-2*a55,-b51+b54)
	m19 =strassenIt( -a11+a51-a13+a53-a24-3*a44+a54+a25+3*a45-a55,-b11+b52+b53+b14+b54+b15+b55)
	m20 =strassenIt( -a12-a22-2*a42+a52-a23-a33-3*a43+a53+a24+a34+3*a44-a54,-2*b21+2*b41-b22+b42)
	m21 =strassenIt( a14,b41+b51+b42+b52)
	m22 =strassenIt( a11+a13-a25+a35-a45-a55,-b11-b12+b53)
	m23 =strassenIt( -a11+a21-a31+a41+2*a51-a13+a53,-b11+b14)
	m24 =strassenIt( -a21-2*a41,-b11-b51+b13+b53+b15+b55)
	m25 =strassenIt( -a13+a53,-b11+b31-b12+b32-b13+b33-b15+b35)
	m26 =strassenIt( 2*a11-2*a21-a31-6*a41+a51+2*a12-a22-a32-3*a42+a52-a23-3*a43-2*a14+a24+a34+3*a44-a54+2*a15-2*a25-4*a45,-b21+b31-b22+b32-b23+b33-b24+b34)
	m27 =strassenIt( -a12-a22-2*a42+a52+a13+a23+2*a43-a53-a14-a24-2*a44+a54,2*b31+b32)
	m28 =strassenIt( -a21-3*a41-a23-3*a43+a25-a35+a45+a55,b11+b12)
	m29 =strassenIt( -a12+a13,b11+2*b21-b31-b41-b51+2*b22-2*b13+2*b23+2*b33+2*b43+2*b53-b14+2*b24+b34+b44+b54-b15+b35+b45+b55)
	m30 =strassenIt( -a22-3*a42+a52+a23+3*a43-a53+a24+3*a44-a54-a25-3*a45+a55,-b11+b31-b12+b32)
	m31 =strassenIt( -a21-3*a41+a51-a23-3*a43+a53-a24-3*a44+a54+a25+3*a45-a55,-b11+b14+b15)
	m32 =strassenIt( -a12-a22-3*a42+a52+a14+a24+3*a44-a54,-b13+b23+b33)
	m33 =strassenIt( -a14+a24+a34+4*a44-a54+a15-a25-a35-4*a45+a55,b41+b42+b43+b44+b45)
	m34 =strassenIt( 2*a14-a24-a34-3*a44+a54-2*a15+2*a25+4*a45,3*b31+3*b41+2*b32+2*b42+b34+b44)
	m35 =strassenIt( a11-a51+a13-a53,b12+b52+b13+b53+b14+b54+b15+b55)
	m36 =strassenIt( 3*a11-3*a21-2*a31-10*a41+2*a51+2*a12-a22-a32-3*a42+a52+a13-2*a23-a33-7*a43+a53-2*a14+a24+a34+3*a44-a54+2*a15-2*a25-4*a45,b31+b32+b33+b34+b25)
	m37 =strassenIt( -a11+a21+2*a41-a13+a14-a15+a25+2*a45,-2*b21-2*b31-b22-b32-b13+b23+b33)
	m38 =strassenIt( -a13+a53,2*b31-b12+2*b32-b13+b33-b14+b34-b15+b35)
	m39 =strassenIt( -a12-a22-2*a42+a52,3*b21+3*b31+2*b22+2*b32+b23+b33+b25+b35)
	m40 =strassenIt( -a11+a21+a31+4*a41-a51-a13+a23+3*a43,b21+b31+b41-b12+b22+b32+b42+b52-2*b13+b23+b33+b43+2*b53-b14+b24+b34+b44+b54-b15+b55)
	m41 =strassenIt( 2*a11-2*a21-4*a41+2*a13-a23-a33-3*a43+a53-2*a14+a24+a34+3*a44-a54+2*a15-2*a25-4*a45,3*b21+3*b31+2*b22+2*b32+b24+b34)
	m42 =strassenIt( -a12-a22-2*a42+a52+a23+2*a43,3*b31+3*b41+2*b32+2*b42+b33+b43+b35+b45)
	m43 =strassenIt( a35+a45-a55,2*b51+b52)
	m44 =strassenIt( a12+a22+3*a42-a52-a23-3*a43,-b11+b31-b41+b51-b12+b32-b42+b52-b13+b33-b43-b44-b25-b45)
	m45 =strassenIt( -a21-3*a41+a51-a23-3*a43+a53,b13)
	m46 =strassenIt( -a31-2*a41+a51-a35-2*a45+a55,-b15+b25+b35)
	m47 =strassenIt( -a11-a13,b13+b53)
	m48 =strassenIt( -a12-a22-3*a42+a52+a23+3*a43+a14+a24+3*a44-a54-a35-2*a45+a55,-b41+b51-b42+b52-b43-b44-b45)
	m49 =strassenIt( a11-a21-3*a41+a13-a23-3*a43,b11+b12+b13)
	m50 =strassenIt( -a14+a15-a25+a35-a45-a55,b51+b52+b53)
	m51 =strassenIt( a12+a22+2*a42-a52+a23+a33+3*a43-a53,b21+3*b31+2*b41+b22+2*b32+b42+b23+b33+b25+b35)
	m52 =strassenIt( a12+a22+2*a42-a52-a23-2*a43+a14+a24+2*a44-a54,2*b31+3*b41+b32+2*b42+b43+b45)
	m53 =strassenIt( -a11+a21+2*a41,-b11+b21+b31-b12+b22+b32-b13+b23+b33-b14+b24+b34)
	m54 =strassenIt( -a22-3*a42+a23+3*a43+a14-a34-a44+a54-a15+a25+2*a45,b41+b42+b43+b44-b25)
	m55 =strassenIt( -a11+a21+2*a41-a13+a23+2*a43+2*a14-a24-a34-3*a44+a54-2*a15+2*a25+4*a45,-3*b31-3*b41-2*b32-2*b42-b34-b44+b25+b45)
	m56 =strassenIt( -a11+a21+a31+4*a41-a51-a13+a23+3*a43-a24-3*a44+a54-a15+a25+a35+4*a45-a55,b41+b42+b52+b43+2*b53+b44+b54+b55)
	m57 =strassenIt( a12+a22+a32+3*a42-2*a52-a23-a33-3*a43+a53,-b21+b41-b22+b42-b23+b43-b25+b45)
	m58 =strassenIt( -a11+a21+2*a41+a12-a13+a14-a15+a25+2*a45,b11-b21-b31-2*b13+2*b23+2*b33-b14+b24+b34-b15+b25+b35)
	m59 =strassenIt( -a22-3*a42+a52,-b11+b21+b31+b41+b51-b12+b22+b32+b42+b52-b13+b23+b33+b43+b53)
	m60 =strassenIt( a22+3*a42-a52+a23+3*a43-a53-a24-3*a44+a54,-b12+b32-b13+b33-b14+b34-b15+b35)
	m61 =strassenIt( -a12-a22-2*a42+a52+a23+2*a43-a24-2*a44,-3*b21+3*b41-2*b22+2*b42+b43-b24+b45)
	m62 =strassenIt( a12-a52,b23-b24+b25)
	m63 =strassenIt( a11-a12-a22-3*a42+a52+2*a13+a23+3*a43-a53+a14+a24+3*a44-a54-a15-a25-3*a45+a55,b53)
	m64 =strassenIt( -2*a14+a24+a34+3*a44-a54+2*a15-2*a25-4*a45,b21-3*b31-2*b41+b22-2*b32-b42+b23+b43+b24-b34)
	m65 =strassenIt( -a14+a15-a25-2*a45,b21-2*b31-2*b41+b22-b32-b42-b13+b23+b33+b43+b53+b24)
	m66 =strassenIt( a25-a35+a45+a55,b13+b53+b15+b55)
	m67 =strassenIt( a22+3*a42-a23-3*a43+2*a14-a24-a34-3*a44+a54-2*a15+2*a25+4*a45,b21+b41+b22+b42+b23+b43+b24+b44)
	m68 =strassenIt( -a15+a25+2*a45,b41+b51+b42+b52+b43+b53+b44+b54)
	m69 =strassenIt( a35+2*a45-a55,-b15+b25+b35+b45+b55)
	m70 =strassenIt( -a14+a54,b43-b44+b45)
	m71 =strassenIt( a12-a13,b21-b41-b51-b12+b22+b32-2*b13+b23+2*b33+2*b43+2*b53-b14+b24+b34+b44+b54-b15+b35+b45+b55)
	m72 =strassenIt( a11-a31-a41,2*b11+b12)
	m73 =strassenIt( -a11+a21+a31+4*a41-a51+a35+2*a45-a55,b41+b51+b42+b52+b43+b53+b44+b54-b15+b25+b35+b45+b55)
	m74 =strassenIt( -a21-2*a41+a25+2*a45,-b51+b53+b55)
	m75 =strassenIt( -a25+a35-a45-a55,b11+b51+b12+b52+b13+b53+b15+b55)
	m76 =strassenIt( -a12-a22-a32-3*a42+2*a52+a23+a33+3*a43-a53-a24-a34-3*a44+a54,-b21+b41-b22+b42+b43-b24+b45)
	m77 =strassenIt( a14+a24+3*a44-a54,-b13+b23+b33+b43+b53)
	m78 =strassenIt( a12+a22+a32+3*a42-2*a52-a23-a33-3*a43+a53+a14+a24+a34+3*a44-2*a54,b41+b42+b43+b45)
	m79 =strassenIt( -a32-a42+a52+a33+a43-a53-a34-a44+a54,3*b21+2*b22+b24)
	m80 =strassenIt( -a22-2*a42+a23+2*a43-a24-2*a44,3*b21+2*b22+b24)
	m81 =strassenIt( a11-a51+a13-a53-a15+a55,b52+b53+b54+b55)
	m82 =strassenIt( a11-a21-a31-4*a41+a51+a15-a25-a35-4*a45+a55,b41+b51+b42+b52+b43+b53+b44+b54+b45+b55)
	m83 =strassenIt( a11-a21-2*a41+a13-a23-2*a43,-2*b31-3*b41-b32-2*b42+b33-b44+b25+b35+b45)
	m84 =strassenIt( -a11+a21+2*a41-a13+a23+2*a43+a14-a24-2*a44-a15+a25+2*a45,3*b21-3*b41+2*b22-2*b42+b24-b44+b25+b45)
	m85 =strassenIt( -a22-a32-3*a42+a52+a23+a33+3*a43-a53-a24-a34-3*a44+a54,b21+b22+b24)
	m86 =strassenIt( a22+3*a42-a52,3*b11-3*b21-3*b31-3*b41-3*b51+3*b12-2*b22-3*b32-2*b42-2*b52+b13-b33+b24+b44+b54+b25+b45+b55)
	m87 =strassenIt( a12,-b11+b21+b31-b12+b22+b32)
	m88 =strassenIt( a31+2*a41-a51+a23+3*a43,b11+b12+b13+b25+b35)
	m89 =strassenIt( a21+2*a41-a25+a35-a45-a55,b11-b51+b12+b13+b53+b15+b55)
	m90 =strassenIt( -a11+a51,2*b11+b12)
	m91 =strassenIt( -a12-a22-3*a42+a52+a13+a24+3*a44-a54,-b41-b51-b12+b32-b13+b33+2*b43+2*b53-b14+b34+b44+b54-b15+b35+b45+b55)
	m92 =strassenIt( a21-a31+a41+a51-a25+a35-a45-a55,b11+b12+b13+b15)
	m93 =strassenIt( a14-a34-a44+a54-a15+a25+2*a45,b25+b45)
	m94 =strassenIt( a14+a24+3*a44-a54-a35-2*a45+a55,b41+b42+b43+b53+b44)
	m95 =strassenIt( -a12-a22-3*a42+a52+a13+a23+3*a43-a53,-b13+b33+b53)
	m96 =strassenIt( -a12-a22-3*a42+a52+a23+3*a43,b21+b22-b13+b23+b33+b24)
	m97 =strassenIt( -a11+a51-a13+a53+a25-a35+a45+a55,b11+b12+b52+b13+b53+b54+b15+b55)
	
c11 = -m50+m53-m58-2*m21-m12+m2-m6-m8-m11+m43+m46+m37+m66-m71+m73-m63+m65-m32+m30+m22+m24+m82-m87+m89-m91
	c12 = 2*m50-m53+m58+3*m21+m12-m2+m6+m8+2*m11-m43-m46-m37-2*m66+m71-m73+2*m63-m65+m32-2*m30-m75-2*m22-m24-m82+2*m87-m89+m91
	c13 = -m6-m8-m11-m21-m29+m30-m32-m47-m63-2*m71-m91
	c14 = m49-m50+m53+m56-m19+m4+m6+m8-m11-m40+m35+m94+m97+m66-m68+m71-m74-m63+m31+m32+m30+m75+m22+m23+m24-m81-m87+m88+m91+m92
	c15 = m2+m10+m22+m29+m40+m43+m46+m47-m50+m65+m66+m68+m73+m74+m82+m88+m89
	c21 = -3*m50-9*m51-7*m52-2*m53+m54+2*m56+2*m58-6*m59+2*m60-3*m16+2*m12-2*m13-9*m1+3*m2-9*m3-2*m6+5*m10-3*m11-3*m42+3*m43-2*m46+3*m40-4*m34-5*m37+2*m38-6*m39+2*m94+m66+m67-2*m70-3*m71-2*m72-2*m73-3*m63+4*m64+2*m32-2*m33-4*m61+m62+2*m27-2*m28+3*m30+3*m76+3*m22+m24-4*m77+3*m78-m80-3*m83-3*m84+3*m85+2*m86+2*m87+3*m88+m89-2*m90+2*m91-2*m93
	c22 = 6*m50+15*m51+13*m52+2*m53-2*m54-2*m56-2*m58+8*m59-2*m60+6*m16-2*m12+2*m13+15*m1-6*m2+15*m3+4*m6-8*m10+6*m11+6*m42-3*m43+2*m44+2*m46+2*m48-6*m40+8*m34+8*m37-2*m38+9*m39-2*m94+2*m96-2*m66-2*m67+4*m70+6*m71+2*m72+2*m73+6*m63-8*m64-2*m32+4*m33+7*m61-2*m62-2*m27+4*m28-6*m30-m75-5*m76-6*m22-m24+6*m77-5*m78+m80+6*m83+6*m84-5*m85-2*m86-4*m87-6*m88-m89+2*m90-2*m91+4*m93
	c23 = 2*m49-3*m51-3*m52+3*m54+3*m55-3*m16-3*m1-3*m3+2*m5+3*m7+3*m9-3*m11-m47-m34+3*m36-3*m37-3*m39+2*m94-2*m96+m67-2*m70-3*m71-3*m63+4*m64-3*m65+2*m32-3*m61-2*m28-3*m29+3*m30+m76+2*m22-2*m77+m78-3*m84+m85-3*m93
	c24 = 3*m49-3*m50-3*m51-3*m52-2*m53+m54-3*m55+3*m56-2*m59-3*m19-3*m16-2*m13-3*m1+3*m2-3*m3+m4-2*m6+3*m10-3*m11-3*m42-2*m44-2*m48-7*m34+m35+m94+m97+m66+m67+2*m69-3*m71-2*m72-2*m73-3*m74-3*m63+4*m64+3*m65+3*m31-2*m32-2*m33+m62-2*m28+3*m30+m75+m76+3*m22+m23+m24+m78-3*m81-3*m83+m85+2*m87+4*m88-2*m89-2*m90+3*m92+m93
	c25 = -2*m49-3*m50-2*m54-3*m55+3*m2-2*m5-3*m7-3*m9+3*m10+3*m43-2*m46+m47+3*m40-3*m34-3*m36+m66-2*m69+3*m74+3*m65-2*m33+3*m29+m22-3*m83+m88+3*m89-2*m92+m93
	c31 = -m49-2*m50+2*m51-m55+m56+m57-3*m59+m60+m19+2*m20-2*m21+m15+m17-m13+m14+3*m2+3*m3-m4-2*m6-m8+3*m10-2*m11+m41+4*m43+m44+m45+m48+2*m40-m34+m35-m36-2*m37+m38+2*m39+m94+m96+m66-3*m71-2*m72-2*m63+m64+m65+m62+m26-m28+3*m30+m76+2*m22+m24-2*m77-m79-m80+m82-m83+3*m85+m86+m89-m90
	c32 = 2*m49+4*m50-3*m51+2*m55-m56-2*m57+4*m59-m60-2*m19-3*m20+3*m21-2*m15-m17+m13-2*m14-5*m2-5*m3+2*m4+3*m6+m8-5*m10+4*m11-2*m41-4*m43-m44-2*m45-m48-4*m40+2*m34-2*m35+2*m36+4*m37-m38-3*m39-m94-m96-2*m66+5*m71+2*m72+4*m63-2*m64-m65-2*m62-2*m26+2*m28-6*m30-m75-2*m76-4*m22-m24+3*m77+m79+m80-m82+2*m83-5*m85-m86-m89+m90
	c33 = m49+m51+m20-m21+m3-m4-m6+m7-m8-3*m11+m41+m45-m47-2*m37+m39-m95-4*m71-2*m63+m64-2*m65+m26-m28-3*m29+3*m30+m22-m77+m85-m88-m91
	c34 = 2*m49-2*m50-m55+3*m56+m57-m59-2*m19+m15+m17-m18-m13+m14+2*m2+m3+m4+m8+2*m10-2*m11+m43+m45-m40-2*m34+m35-m36+m38+2*m94+m96+m66-m68+m69-m71-2*m72-m73-3*m74-2*m63+m64+2*m65+3*m31+m62+m26-m28+3*m30+m76+2*m22+m23+m24-m25-3*m81-m83+m85+2*m88-2*m89-m90+m91+3*m92
	c35 = -2*m49-2*m50-m55+m19+m15+m18+m14+3*m2-m7+3*m10+m11+3*m43+m44+m47+m48+3*m40-m34+m35-m36+m94+m95+m97+m66+m68-m69+m73+3*m74+3*m65+3*m29+m75+m22+m25+m81+m82-m83+m88+3*m89-2*m92
	c41 = m50+3*m51+2*m52+m53-m56-m58+3*m59-m60+m16-m12+m13+3*m1-m2+3*m3+m6-2*m10+m11+m42-m43+m46-m40+m34+2*m37-m38+2*m39-m94+m70+m71+m72+m73+m63-m64-m32+m33+m61-m27+m28-m30-m22+2*m77+m83+m84-m86-m87-m88+m90-m91+m93
	c42 = -2*m50-5*m51-4*m52-m53+m56+m58-4*m59+m60-2*m16+m12-m13-5*m1+2*m2-5*m3-2*m6+3*m10-2*m11-2*m42+m43-m44-m46-m48+2*m40-2*m34-3*m37+m38-3*m39+m94-m96-2*m70-2*m71-m72-m73-2*m63+2*m64+m32-2*m33-2*m61+m27-2*m28+2*m30+2*m22-3*m77-2*m83-2*m84+m86+2*m87+2*m88-m90+m91-2*m93
	c43 = -m49+m51+m52-m54-m55+m16+m1+m3-m5-m7-m9+m11-m36+m37+m39-m94+m96+m70+m71+m63-m64+m65-m32+m61+m28+m29-m30-m22+m77+m84+m93
	c44 = -m49+m50+m51+m52+m53+m55-m56+m59+m19+m16+m13+m1-m2+m3+m6-m10+m11+m42+m44+m48+2*m34-m69+m71+m72+m73+m74+m63-m64-m65-m31+m32+m33+m28-m30-m22+m81+m83-m87-m88+m89+m90-m92
	c45 = -m2+m5+m7+m9-m10-m29+m33+m34+m36-m40-m43+m46+m49+m50+m54+m55-m65+m69-m74+m83-m89+m92
	c51 = -m49-m52+m53+m54-m58+m19-2*m21+m15+m17-m12+m2-m6-m8+2*m43+m44+m45+m46+m48-m34+m35+m37+m96+m66+m67+m70-m71+m73+m64+m65-m32+m33-m61+m62-m27+m28+m30+3*m76+m24+3*m78-m80+m82+3*m85-m87+m89+m90-m91+m93
	c52 = 2*m49+m52-m53-2*m54+m58-2*m19+3*m21-2*m15-m17+m12-m2+m6+m8-2*m43-2*m44-2*m45-m46-2*m48+2*m34-2*m35-m37-2*m96-2*m66-2*m67-2*m70+m71-m73-2*m64-m65+m32-2*m33+m61-2*m62+m27-2*m28-2*m30-m75-5*m76-m24-5*m78+m80-m82-5*m85+2*m87-m89-m90+m91-2*m93
	c53 = -m49-m21-m5-m6-m8-m11+m45-m47-m34-m94-m95+m96+m67+m70-2*m71+m64-m32+m28-m29+m30+m76-m22+m78+m85-m91
	c54 = m53+m54+m56+m15+m17-m18+m4+m6+m8+m43+m44+m45+m48-m40-m34+m35+m38+m94+m96+m66+m67-m68+m71-m74+m64+m31+m32+m33+m62+m28+m30+m76+m23+m24-m25+m78-m81+m85-m87+m88+m90+m91+m92+m93
	c55 = m54+m19+m15+m18+m2+m5+m10+m11+m43+m44+m46+m47+m48+m40+m35+m94+m95+m97+m66+m68+m73+m74+m65+m33+m29+m75+m22+m25+m81+m82+m88+m89+m93)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51), axis=0), np.concatenate(c12, c22, c32, c42, c52), axis=0), np.concatenate(c13, c23, c33, c43, c53), axis=0), np.concatenate(c14, c24, c34, c44, c54), axis=0), np.concatenate(c15, c25, c35, c45, c55), axis=0)), axis=1)

	return result



def div5x5(a):

	col = len(a)/5
	row = len(a[1])/5

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, 
	  a21, a22, a23, a24, a25, 
	  a31, a32, a33, a34, a35, 
	  a41, a42, a43, a44, a45, 
	  a51, a52, a53, a54, a55)

def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def mat556mod2(a,b):

	a11, a12, a13, a14, a15, a21, a22, a23, a24, a25, a31, a32, a33, a34, a35, a41, a42, a43, a44, a45, a51, a52, a53, a54, a55 = div5x5(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56 = div5x6(b)


	m1 =strassenItmod2( a51^a13^a23^a43^a53^a14^a24^a44^a15^a25^a45^a55,b12^b22^b42)
	m2 =strassenItmod2( a51^a23^a43^a24^a44^a54^a25^a45,b22^b42^b15)
	m3 =strassenItmod2( a32^a52^a33^a53^a34^a54,b21^b22)
	m4 =strassenItmod2( a22^a52^a13^a23^a14^a54^a15^a25,b11^b21^b41^b15^b25^b35^b55^b16^b26^b36^b56)
	m5 =strassenItmod2( a23^a43^a24^a44^a25^a45,b22^b42^b25^b45)
	m6 =strassenItmod2( a13^a23^a43^a14^a24^a44^a15^a25^a45,b32^b35)
	m7 =strassenItmod2( a33^a53^a35^a55,b22^b32^b23^b33^b24^b34^b26^b36)
	m8 =strassenItmod2( a33^a53^a35^a55,b26^b46^b56)
	m9 =strassenItmod2( a11^a21^a41^a12^a22^a42^a52^a54,b22^b13)
	m10 =strassenItmod2( a11^a21^a31^a12^a22^a32^a33^a43^a53^a35^a45^a55,b21^b31^b23^b24^b34)
	m11 =strassenItmod2( a33^a43^a53^a35^a55,b21^b41^b51^b22^b32^b33^b43^b53^b34^b44^b54^b26^b36)
	m12 =strassenItmod2( a53^a55,b33)
	m13 =strassenItmod2( a12^a52^a23^a43^a24^a44^a54^a15^a25^a45,b12^b22^b42^b52^b33^b53^b45^b55)
	m14 =strassenItmod2( a13^a53^a15^a55,b12^b22^b42^b52)
	m15 =strassenItmod2( a32^a33^a34,b34^b54^b35^b55^b36^b56)
	m16 =strassenItmod2( a21^a51^a22^a52,b25^b45^b55^b26^b46^b56)
	m17 =strassenItmod2( a31^a41^a51^a42^a43^a44,b21^b12^b22^b42^b13^b43^b14^b44^b16^b46)
	m18 =strassenItmod2( a54,b13^b23^b43)
	m19 =strassenItmod2( a11^a21^a31^a14^a24^a34,b31^b41^b51^b34^b44^b54)
	m20 =strassenItmod2( a23^a43^a14^a24^a44^a15^a25^a45,b12^b22^b32^b42^b35^b45)
	m21 =strassenItmod2( a11^a21^a12^a22^a13^a23^a15^a25,b15^b25^b45^b55^b16^b26^b46^b56)
	m22 =strassenItmod2( a23^a43^a24^a44^a54^a25^a45^a55,b53^b55)
	m23 =strassenItmod2( a32^a34,b21^b31^b25^b35^b26^b36)
	m24 =strassenItmod2( a21^a51^a24^a54,b21^b41^b51^b25^b45^b55^b26^b46^b56)
	m25 =strassenItmod2( a32^a33^a35,b54^b55^b56)
	m26 =strassenItmod2( a23^a43^a24^a44^a54^a25^a45,b53^b15^b25^b45^b55)
	m27 =strassenItmod2( a11^a31^a51^a22^a52^a23^a53^a14^a24^a34^a15^a35^a55,b31^b54^b35^b55^b36^b56)
	m28 =strassenItmod2( a41^a32^a42^a52^a33^a43^a53^a44^a35^a55,b22^b42^b23^b43^b24^b44^b26^b46)
	m29 =strassenItmod2( a11^a21^a31^a12^a22^a43^a34^a35^a45^a55,b21^b31^b23^b24^b34^b15^b25^b45^b55^b26^b46^b56)
	m30 =strassenItmod2( a41^a44^a45,b22^b42^b23^b43^b24^b44^b16^b26^b46)
	m31 =strassenItmod2( a21^a51^a22^a32^a52^a23^a33^a53^a25^a35^a55,b11^b21^b41^b54^b15^b25^b45^b55^b16^b26^b46^b56)
	m32 =strassenItmod2( a11^a21^a12^a22^a43^a45,b15^b25^b45^b55^b26^b46^b56)
	m33 =strassenItmod2( a21^a23^a43^a25^a45,b21^b41^b51^b12^b15^b25^b45^b55^b26^b46^b56)
	m34 =strassenItmod2( a21^a31^a51^a24^a34^a54^a25^a35^a55,b11^b21^b41^b51)
	m35 =strassenItmod2( a12^a22^a32^a13^a23^a33^a14^a24^a34,b31^b34)
	m36 =strassenItmod2( a11^a21^a41^a51^a12^a22^a42^a52,b13)
	m37 =strassenItmod2( a21^a51^a22^a52^a23^a53^a24^a54,b31^b34^b54^b35^b55^b36^b56)
	m38 =strassenItmod2( a21^a51^a24^a54^a25^a55,b51)
	m39 =strassenItmod2( a11^a31^a51^a12^a52,b21^b41^b51^b13^b24^b44^b54^b15^b25^b45^b55^b26^b46^b56)
	m40 =strassenItmod2( a34^a35^a55,b21^b41^b51^b23^b43^b24^b44^b54^b15^b25^b45^b55^b26^b46^b56)
	m41 =strassenItmod2( a32^a42^a52^a33^a43^a53^a35^a45^a55,b22^b42^b23^b43^b24^b44^b46)
	m42 =strassenItmod2( a11^a21^a41^a14^a24^a44,b12^b22)
	m43 =strassenItmod2( a14^a24^a44,b12^b22^b42^b52^b13^b23^b33^b43)
	m44 =strassenItmod2( a31^a51^a34^a54^a35^a55,b21^b41^b22^b42)
	m45 =strassenItmod2( a13^a23^a43^a53^a14^a24^a44^a15^a25^a45^a55,b12^b22^b42^b52^b33)
	m46 =strassenItmod2( a13^a23^a43^a53^a14^a24^a44^a15^a25^a45,b32^b52^b33^b35)
	m47 =strassenItmod2( a33^a43^a53,b31^b41^b51^b33^b43^b53^b34^b44^b54)
	m48 =strassenItmod2( a42^a43^a44,b12^b42^b13^b43^b14^b44^b16^b26^b46)
	m49 =strassenItmod2( a32^a52^a33^a53^a44^a35^a45^a55,b26)
	m50 =strassenItmod2( a53,b33^b35)
	m51 =strassenItmod2( a23^a43^a24^a34^a44^a54^a25^a35^a45^a55,b31^b41^b51^b42^b35^b55^b36^b46^b56)
	m52 =strassenItmod2( a31^a41^a51,b11^b21^b22^b42^b13^b43^b14^b44^b46)
	m53 =strassenItmod2( a11^a21^a12^a22,b25^b45^b55^b26^b46^b56)
	m54 =strassenItmod2( a23^a43,b32^b52)
	m55 =strassenItmod2( a12^a52^a14^a54,b11^b21^b41^b34^b44^b54^b15^b25^b35^b55^b16^b26^b36^b56)
	m56 =strassenItmod2( a12^a52^a14^a54,b31^b41^b51^b12^b22^b42^b52^b13^b23^b33^b53^b34^b44^b54^b15^b25^b45^b55)
	m57 =strassenItmod2( a31,b21^b41^b51^b13^b14^b16)
	m58 =strassenItmod2( a43,b21^b41^b51^b22^b42^b52^b26^b36)
	m59 =strassenItmod2( a22^a32^a52^a23^a33^a53^a25^a35^a55,b11^b21^b41)
	m60 =strassenItmod2( a11^a21^a31,b11^b21^b41^b14^b24^b44)
	m61 =strassenItmod2( a22^a32^a52^a23^a33^a53^a24^a34^a54,b11^b21^b31^b41)
	m62 =strassenItmod2( a14^a24^a15^a25,b35^b55^b36^b56)
	m63 =strassenItmod2( a11^a31^a51^a12^a32^a52^a13^a33^a53^a15^a35^a55,b11^b21^b31^b41^b15^b25^b35^b45^b16^b26^b36^b46)
	m64 =strassenItmod2( a13^a53,b32^b52)
	m65 =strassenItmod2( a43^a45,b21^b41^b51^b22^b42^b52)
	m66 =strassenItmod2( a22^a32^a52^a23^a33^a53^a44^a25^a35^a45^a55,b31^b41^b51^b42^b35^b55^b16^b26^b36^b56)
	m67 =strassenItmod2( a11^a21^a31^a14^a24^a34^a15^a25^a35,b51^b54)
	m68 =strassenItmod2( a32^a23^a33^a43^a53^a24^a44^a54^a25^a35^a45^a55,b31^b41^b51^b42^b15^b25^b35^b45^b55^b36^b46^b56)
	m69 =strassenItmod2( a15^a25^a45^a55,b33^b53)
	m70 =strassenItmod2( a32^a34,b24^b34)
	m71 =strassenItmod2( a22^a42^a24^a44,b22^b25)
	m72 =strassenItmod2( a52^a54,b22^b25)
	m73 =strassenItmod2( a11^a21^a31^a12^a22^a32,b21^b31^b24^b34)
	m74 =strassenItmod2( a21^a51,b31^b14^b24^b34^b44^b54^b35^b55^b36^b56)
	m75 =strassenItmod2( a44^a45,b16^b26^b46)
	m76 =strassenItmod2( a23^a43,b12^b22^b42^b52^b15^b25^b35^b45)
	m77 =strassenItmod2( a45,b21^b41^b51^b22^b42^b52^b26^b46^b56)
	m78 =strassenItmod2( a33^a53,b36^b46^b56)
	m79 =strassenItmod2( a31^a51^a22^a32^a52^a23^a33^a53^a25^a35^a55,b11^b51^b22^b42^b15^b25^b45^b55^b26^b46^b56)
	m80 =strassenItmod2( a25^a45,b12^b22^b42^b52^b15^b25^b45^b55)
	m81 =strassenItmod2( a11^a21^a41^a12^a52^a24^a44^a54,b22^b15)
	m82 =strassenItmod2( a51^a54,b22^b42^b13)
	m83 =strassenItmod2( a22^a52^a24^a54,b21^b31^b25^b45^b55^b26^b46^b56)
	m84 =strassenItmod2( a15^a25^a45,b33^b53)
	m85 =strassenItmod2( a13^a23^a14^a24^a15^a25,b35^b45^b55^b36^b46^b56)
	m86 =strassenItmod2( a52^a54,b23^b25)
	m87 =strassenItmod2( a11^a21^a31^a14^a24^a34^a35^a45^a55,b31^b41^b51^b13^b23^b34^b44^b54)
	m88 =strassenItmod2( a11^a21^a31^a12^a22^a34,b21^b31^b24^b34^b25^b45^b55^b26^b46^b56)
	m89 =strassenItmod2( a11^a51^a12^a52,b15^b25^b45^b55^b26^b46^b56)
	m90 =strassenItmod2( a12^a52^a23^a43^a24^a44^a54,b12^b22^b42^b52^b33^b53^b15^b25^b45^b55)
	m91 =strassenItmod2( a11^a21^a41^a12^a22^a42,b22)
	m92 =strassenItmod2( a32^a33^a53^a34,b21^b41^b51^b42^b23^b24^b34^b15^b25^b45^b55^b26^b46^b56)
	m93 =strassenItmod2( a43,b31^b41^b51^b32^b42^b52)
	m94 =strassenItmod2( a33^a43^a53^a35^a45^a55,b21^b41^b51^b23^b43^b53^b24^b44^b54)
	m95 =strassenItmod2( a22^a52^a43^a24^a54,b31^b41^b51^b42)
	m96 =strassenItmod2( a12^a22^a13^a23^a15^a25,b15^b25^b16^b26)
	m97 =strassenItmod2( a11^a31^a51^a12^a52^a34,b24^b44^b54)
	m98 =strassenItmod2( a11^a31^a51^a14^a34^a54^a15^a35^a55,b31^b51^b35^b55^b36^b56)
	m99 =strassenItmod2( a11^a21^a31^a12^a52^a24^a34^a54,b21^b31^b34^b44^b54^b25^b45^b55^b26^b46^b56)
	m100 =strassenItmod2( a11^a51^a12^a52,b21^b41^b51^b13)
	m101 =strassenItmod2( a13^a23^a43^a53^a15^a25^a45^a55,b12^b22^b42^b52)
	m102 =strassenItmod2( a31^a41^a51^a32^a42^a52^a33^a43^a53^a34^a44^a54,b21^b22^b42^b43^b44^b46)
	m103 =strassenItmod2( a51^a22^a52^a23^a25,b21^b41^b51^b22^b42^b15^b25^b45^b55^b26^b46^b56)
	m104 =strassenItmod2( a35^a55,b32^b42^b52^b33^b43^b53^b34^b44^b54^b36^b46^b56)
	m105 =strassenItmod2( a34^a44^a54^a35^a45^a55,b21^b41^b22^b42^b46)
	m106 =strassenItmod2( a11^a31^a51^a12^a22^a13^a23^a24^a34^a54^a15^a35^a55,b11^b21^b31^b41^b35^b55^b36^b56)
	m107 =strassenItmod2( a34^a44^a54^a35^a45^a55,b21^b41^b22^b42^b13^b23^b43^b46)
	m108 =strassenItmod2( a41^a42^a43^a44,b12^b22^b42^b13^b23^b43^b14^b24^b44^b16^b26^b46)
	m109 =strassenItmod2( a21^a51^a22^a32^a52^a23^a33^a53^a24^a34^a54,b11^b21^b31^b41^b34^b54^b35^b55^b36^b56)
	m110 =strassenItmod2( a14^a54,b13^b23^b43^b53^b15^b25^b45^b55)
	m111 =strassenItmod2( a32^a13^a33^a53^a14^a54^a15^a35^a55,b11^b21^b41^b15^b25^b45^b16^b26^b46)
	m112 =strassenItmod2( a31^a51,b11^b21^b41^b12^b22^b42)
	m113 =strassenItmod2( a12^a22^a42^a52^a14^a24^a44^a54,b13^b23)
	m114 =strassenItmod2( a31^a51^a44^a45,b21^b41^b22^b42^b16)
	m115 =strassenItmod2( a31^a34,b21^b41^b51^b25^b45^b55^b26^b46^b56)
	m116 =strassenItmod2( a21^a41^a23^a43^a25^a45,b12^b15)
	
c11 = m53^m55^m19^m16^m3^m4^m9^m10^m44^m36^m115^m96^m98^m99^m103^m106^m32^m61^m62^m29^m24^m79^m82^m91^m92
	c12 = m2^m6^m9^m12^m14^m16^m36^m42^m45^m46^m50^m53^m64^m81^m82^m89^m91^m116
	c13 = m9^m12^m14^m16^m18^m19^m24^m26^m36^m45^m53^m56^m72^m80^m84^m86^m90^m91^m99^m100^m110^m115
	c14 = m49^m55^m60^m15^m17^m18^m3^m4^m44^m40^m35^m39^m108^m109^m112^m114^m96^m100^m102^m103^m105^m106^m72^m74^m62^m27^m28^m75^m79^m82^m86^m89^m92
	c15 = m2^m5^m9^m12^m13^m14^m16^m20^m36^m45^m46^m50^m53^m64^m72^m80^m82^m84^m89^m90^m91
	c16 = m49^m50^m51^m59^m20^m12^m13^m14^m4^m10^m44^m45^m46^m111^m114^m96^m105^m106^m68^m63^m64^m32^m61^m62^m29^m75^m80^m84^m89^m90^m92
	c21 = m3^m9^m10^m16^m24^m29^m32^m34^m36^m44^m61^m79^m82^m83^m91^m92^m103
	c22 = m9^m14^m16^m24^m32^m33^m36^m54^m65^m82^m83^m89^m91^m93^m95^m101^m103
	c23 = m56^m58^m16^m14^m7^m9^m11^m43^m40^m36^m39^m107^m110^m94^m97^m99^m101^m105^m72^m32^m26^m29^m24^m80^m86^m87^m88^m89^m90^m91^m93
	c24 = m49^m57^m21^m17^m18^m3^m44^m40^m108^m109^m112^m114^m97^m99^m102^m103^m105^m106^m72^m74^m63^m31^m28^m75^m79^m82^m83^m86^m88^m92
	c25 = m58^m59^m16^m14^m2^m4^m5^m9^m36^m111^m95^m101^m66^m68^m72^m65^m32^m75^m76^m77^m80^m82^m85^m89^m91
	c26 = m10^m14^m21^m29^m44^m49^m51^m58^m61^m63^m65^m66^m76^m77^m80^m89^m92^m95^m101^m105^m106^m114
	c31 = m15^m34^m37^m38^m53^m59^m70^m73^m88^m109^m115
	c32 = m50^m53^m58^m59^m12^m1^m6^m8^m10^m11^m45^m46^m47^m112^m115^m103^m104^m70^m73^m32^m29^m78^m79^m88^m92^m93
	c33 = m7^m10^m11^m12^m29^m32^m39^m40^m47^m53^m58^m69^m73^m84^m88^m89^m93^m97^m100^m115
	c34 = m21^m27^m31^m37^m38^m39^m57^m59^m63^m67^m70^m89^m97^m98^m100^m106^m109
	c35 = m8^m10^m12^m22^m23^m26^m29^m32^m50^m51^m53^m68^m69^m70^m73^m78^m84^m88^m92
	c36 = m50^m51^m59^m21^m15^m12^m8^m10^m37^m38^m109^m98^m106^m67^m68^m69^m63^m31^m32^m26^m27^m29^m22^m25^m78^m84^m92
	c41 = m2^m17^m24^m28^m30^m32^m33^m41^m48^m49^m52^m53^m81^m83^m91^m95^m103^m112^m114^m116
	c42 = m2^m24^m32^m33^m53^m65^m81^m83^m91^m93^m95^m103^m116
	c43 = m53^m58^m19^m18^m7^m9^m11^m40^m39^m107^m113^m115^m94^m97^m100^m105^m72^m32^m29^m86^m87^m88^m89^m91^m93
	c44 = m19^m18^m2^m9^m48^m40^m39^m107^m108^m113^m115^m116^m95^m97^m100^m103^m105^m72^m33^m29^m30^m75^m24^m81^m83^m86^m87^m88^m89
	c45 = m4^m32^m53^m58^m59^m65^m66^m68^m71^m72^m75^m77^m81^m85^m91^m95^m111
	c46 = m28^m30^m41^m49^m58^m65^m75^m77
	c51 = m3^m9^m10^m15^m29^m32^m34^m36^m37^m38^m44^m79^m82^m91^m92^m103^m109
	c52 = m1^m6^m9^m12^m36^m45^m46^m50^m82^m91
	c53 = m9^m12^m18^m36^m69^m72^m84^m86^m91
	c54 = m49^m57^m21^m17^m18^m3^m44^m40^m37^m38^m108^m109^m112^m114^m98^m102^m103^m105^m106^m67^m72^m63^m31^m27^m28^m75^m79^m82^m86^m92
	c55 = m2^m5^m9^m12^m22^m26^m36^m50^m69^m72^m82^m84^m91
	c56 = m49^m50^m51^m59^m21^m15^m12^m10^m44^m37^m38^m109^m114^m98^m105^m106^m67^m68^m69^m63^m31^m32^m26^m27^m29^m75^m22^m25^m84^m92)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0), np.concatenate(c14, c24, c34, c44, c54, c64), axis=0), np.concatenate(c15, c25, c35, c45, c55, c65), axis=0)), axis=1)

	return result



def div5x6(a):

	col = len(a)/5
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56)

def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)

def mat566mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26, a31, a32, a33, a34, a35, a36, a41, a42, a43, a44, a45, a46, a51, a52, a53, a54, a55, a56 = div5x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a41^a13^a43^a14^a44^a15^a35^a45,b32^b34)
	m2 =strassenItmod2( a31^a34,b11^b13^b14^b16)
	m3 =strassenItmod2( a53^a55,b22^b52^b23^b53^b24^b54^b25^b55)
	m4 =strassenItmod2( a23^a33,b34^b44^b35^b45)
	m5 =strassenItmod2( a11^a21^a41^a12^a32^a42,b12^b42^b13^b43)
	m6 =strassenItmod2( a51^a12^a22^a32^a52,b11^b21^b31^b41^b51^b23^b53^b14^b24^b34^b44^b54^b15^b25^b35^b45^b55^b16^b36^b46)
	m7 =strassenItmod2( a51^a53^a56,b52^b62^b56^b66)
	m8 =strassenItmod2( a25^a35,b54^b55)
	m9 =strassenItmod2( a51^a12^a22^a32^a52,b21^b51^b12^b22^b32^b42^b52^b14^b24^b34^b44^b54^b25^b55)
	m10 =strassenItmod2( a32^a35^a36,b22^b23^b24^b25)
	m11 =strassenItmod2( a11^a21^a33^a34,b11^b41^b12^b13^b43^b46)
	m12 =strassenItmod2( a12^a22^a32^a35,b21^b22^b52^b53^b54^b25^b56)
	m13 =strassenItmod2( a31^a34,b12^b13^b14^b15)
	m14 =strassenItmod2( a51^a52,b21^b51^b22^b52^b24^b54^b25^b55)
	m15 =strassenItmod2( a22^a32,b21^b23^b26)
	m16 =strassenItmod2( a11^a33,b11^b31^b41^b14^b15)
	m17 =strassenItmod2( a12^a32^a36,b22^b62^b24^b26)
	m18 =strassenItmod2( a13^a14,b31^b32^b34)
	m19 =strassenItmod2( a41^a43^a44^a45,b51^b61^b56^b66)
	m20 =strassenItmod2( a41^a12^a32^a42^a23^a33^a44^a15^a35^a45^a16^a36^a46,b33^b43)
	m21 =strassenItmod2( a11^a41^a12^a32^a42^a14^a44^a15^a35^a45^a16^a36^a46,b32^b42^b34^b44^b35^b45)
	m22 =strassenItmod2( a12^a22^a32^a25,b51^b52^b54^b55)
	m23 =strassenItmod2( a51^a12^a22^a32^a52^a23^a33^a24^a34^a54^a15^a25^a35^a55^a16^a26^a36^a56,b42^b46)
	m24 =strassenItmod2( a51^a53^a54^a56,b22^b52^b23^b53^b24^b54^b25^b65^b56^b66)
	m25 =strassenItmod2( a41^a44,b11^b21^b31^b16^b26^b36)
	m26 =strassenItmod2( a11^a21^a14^a24,b42^b43^b45^b46)
	m27 =strassenItmod2( a12^a32^a42^a15^a35^a45,b35^b55^b65)
	m28 =strassenItmod2( a11^a51^a12^a22^a32^a52,b12^b32^b42^b14^b34^b44)
	m29 =strassenItmod2( a51^a53^a56,b22^b52^b24^b54^b26^b66)
	m30 =strassenItmod2( a41^a43^a44^a15^a35^a45,b51^b61^b52^b62^b35)
	m31 =strassenItmod2( a41^a12^a32^a42^a44^a15^a35^a45^a16^a36^a46,b61^b32^b42^b62^b33^b43^b34^b44^b35^b45^b66)
	m32 =strassenItmod2( a12^a22^a32^a52^a15^a25^a35^a55^a16^a26^a36^a56,b51^b61^b43^b53^b55^b65^b46^b56)
	m33 =strassenItmod2( a15^a35^a45,b31^b51^b61^b32^b52^b62^b33^b53^b63^b34^b54^b64)
	m34 =strassenItmod2( a41^a43^a44,b31^b51^b61^b32^b52^b62)
	m35 =strassenItmod2( a12^a35,b21^b23^b24)
	m36 =strassenItmod2( a33^a53^a35^a55,b12^b32^b42^b14^b34^b44^b16^b36^b46)
	m37 =strassenItmod2( a51^a12^a22^a32^a52^a15^a25^a35^a55^a16^a26^a36^a56,b51^b61^b42^b52^b43^b53^b55^b65)
	m38 =strassenItmod2( a41^a12^a32^a42,b11^b41^b22^b62^b23^b63^b14^b24^b44^b64^b15^b25^b45^b65)
	m39 =strassenItmod2( a21^a31,b13^b14^b15)
	m40 =strassenItmod2( a11^a14,b31^b41^b32^b42^b34^b44^b35^b45)
	m41 =strassenItmod2( a12^a22^a32^a52^a53^a54^a15^a35^a45,b12^b22^b32^b42^b52^b14^b24^b34^b44^b54)
	m42 =strassenItmod2( a31^a34,b12^b14^b16)
	m43 =strassenItmod2( a51^a53^a56,b51^b61^b22^b52^b53^b63^b24^b54^b55^b65^b26^b56)
	m44 =strassenItmod2( a41^a12^a32^a42^a44^a45^a36^a46,b65^b66)
	m45 =strassenItmod2( a41^a42,b21^b61^b26^b66)
	m46 =strassenItmod2( a51^a12^a22^a32^a52^a54^a35^a55^a56,b51^b23^b25^b55^b26)
	m47 =strassenItmod2( a41^a44,b11^b21^b41^b61^b32^b42^b62^b35^b45^b65^b16^b26^b36)
	m48 =strassenItmod2( a11^a33,b12^b32^b42^b13^b14^b34^b44^b15^b35^b45)
	m49 =strassenItmod2( a12^a22^a32^a15^a25^a35^a16^a26^a36,b51^b53^b55^b56)
	m50 =strassenItmod2( a51^a53^a15^a35^a45,b31^b51^b61^b12^b22^b42^b62^b33^b53^b63^b14^b24^b44^b64)
	m51 =strassenItmod2( a23^a33,b32^b42^b33^b43^b34^b44^b35^b45^b36^b46)
	m52 =strassenItmod2( a41^a43^a44,b31^b51^b61^b36^b56^b66)
	m53 =strassenItmod2( a16^a26^a36,b54^b64^b56^b66)
	m54 =strassenItmod2( a41^a12^a32^a42^a36,b21^b61^b23^b63^b24^b64^b25^b65)
	m55 =strassenItmod2( a12^a22^a32^a52,b11^b21^b31^b41^b51^b14^b24^b34^b44^b54^b15^b25^b35^b45^b55^b16^b26^b36^b46^b56)
	m56 =strassenItmod2( a26^a36,b64^b65)
	m57 =strassenItmod2( a23^a14,b31^b43^b35)
	m58 =strassenItmod2( a35,b23^b53^b25^b55^b26^b56)
	m59 =strassenItmod2( a51^a12^a22^a32^a52^a54^a15^a25^a35^a55^a16^a26^a36^a56,b51^b42^b43^b53^b54^b55)
	m60 =strassenItmod2( a11^a21^a51^a12^a22^a32^a52^a14^a24^a54^a15^a25^a35^a55^a16^a26^a36^a56,b42^b43)
	m61 =strassenItmod2( a51,b11^b21^b31^b41^b51^b22^b52^b13^b33^b43^b24^b54^b25^b65^b56^b66)
	m62 =strassenItmod2( a41^a13^a23^a43^a44^a15^a35^a45,b31^b33^b35)
	m63 =strassenItmod2( a11^a21^a41^a12^a32^a42,b11^b41^b13^b43^b15^b45)
	m64 =strassenItmod2( a33^a34,b11^b41^b12^b42^b13^b43)
	m65 =strassenItmod2( a53^a54^a35^a55,b12^b22^b32^b42^b52^b14^b24^b34^b44^b54^b16^b26^b36^b46^b56)
	m66 =strassenItmod2( a12^a32^a42^a53^a54^a15^a35^a45,b12^b22^b32^b14^b24^b34)
	m67 =strassenItmod2( a41^a43^a53^a44,b11^b21^b31^b41^b51^b13^b23^b33^b43^b53^b14^b24^b34^b44^b54^b15^b25^b35^b45^b55)
	m68 =strassenItmod2( a51^a54,b41^b51^b12^b32^b52^b43^b53^b14^b34^b44^b45^b55^b16^b36^b56)
	m69 =strassenItmod2( a32^a35^a36,b23^b25^b26)
	m70 =strassenItmod2( a51^a12^a22^a32^a52^a35,b21^b51^b23^b53^b24^b54^b25^b55)
	m71 =strassenItmod2( a11,b15^b35^b45)
	m72 =strassenItmod2( a11^a41^a12^a32^a42^a14^a44^a15^a35^a45^a16^a36^a46,b32^b42^b34^b44)
	m73 =strassenItmod2( a11^a21^a14^a24,b41^b42^b45)
	m74 =strassenItmod2( a44,b11^b21^b41^b61^b16^b26^b46^b66)
	m75 =strassenItmod2( a41^a51^a43^a53^a44,b11^b13^b21^b23^b31^b32^b33^b34^b15^b25^b14^b24^b62^b66^b56^b51^b52^b53^b54^b55^b45^b41^b43^b44^b36^b35)
	m76 =strassenItmod2( a35,b23^b53^b26^b56)
	m77 =strassenItmod2( a41^a42^a44^a45^a46,b62)
	m78 =strassenItmod2( a23^a33^a24^a34,b42^b43^b46)
	m79 =strassenItmod2( a51^a12^a22^a32^a52^a54^a15^a25^a35^a55^a16^a26^a36^a56,b51^b42^b52^b53^b55^b46)
	m80 =strassenItmod2( a23^a14,b31^b42^b46)
	m81 =strassenItmod2( a11^a21^a33^a34,b13^b15^b45^b16^b46)
	m82 =strassenItmod2( a11,b11^b31^b41^b15^b35^b45)
	m83 =strassenItmod2( a23^a14,b31^b32^b42^b43^b34^b44^b35^b45^b46)
	m84 =strassenItmod2( a25^a35,b51^b53^b54^b55^b56)
	m85 =strassenItmod2( a13^a23,b31^b32^b36)
	m86 =strassenItmod2( a53^a35^a55,b12^b22^b32^b42^b52^b23^b53^b14^b24^b34^b44^b54^b25^b55^b16^b36^b46)
	m87 =strassenItmod2( a15^a35^a16^a26^a36,b51^b61^b62^b53^b55^b65^b56)
	m88 =strassenItmod2( a41^a12^a32^a42^a15^a35^a45^a16^a36^a46,b11^b21^b41^b61^b12^b22^b42^b62)
	m89 =strassenItmod2( a12^a32^a42^a15^a35^a45^a16^a36^a46,b32^b42^b62^b33^b43^b63^b34^b44^b64)
	m90 =strassenItmod2( a21^a31,b14^b15)
	m91 =strassenItmod2( a12^a32^a26,b62^b63^b66)
	m92 =strassenItmod2( a51^a12^a22^a32^a52^a33,b11^b31^b41^b12^b32^b42^b15^b35^b45^b16^b36^b46)
	m93 =strassenItmod2( a12^a32,b21^b61^b22^b62^b23^b63)
	m94 =strassenItmod2( a12^a22^a32,b21^b51^b23^b53^b25^b55^b26^b56)
	m95 =strassenItmod2( a11^a21,b12^b42^b13^b43^b15^b45^b16^b46)
	m96 =strassenItmod2( a51^a53^a16^a36^a46,b32^b42^b62^b34^b44^b64)
	m97 =strassenItmod2( a33^a34,b11^b41^b12^b42^b15^b45^b16^b46)
	m98 =strassenItmod2( a12^a32^a36,b61^b23^b25^b26^b66)
	m99 =strassenItmod2( a41^a12^a32^a42,b21^b61^b22^b62^b13^b23^b43^b63^b14^b24^b44^b64^b25^b65^b26^b66)
	m100 =strassenItmod2( a41^a43^a44^a15^a35^a45,b31^b32^b33^b53^b63^b34^b54^b64^b35^b55^b65^b56^b66)
	m101 =strassenItmod2( a41^a43^a44^a15^a35^a45,b31^b52^b62^b33^b53^b63^b54^b64^b35^b55^b65)
	m102 =strassenItmod2( a51^a53,b31^b51^b61^b32^b52^b62^b33^b53^b63^b34^b54^b64^b35^b55^b65^b36^b56^b66)
	m103 =strassenItmod2( a41^a12^a32^a42^a33^a34,b11^b41^b14^b44^b15^b45)
	m104 =strassenItmod2( a13^a23,b35^b36)
	m105 =strassenItmod2( a51^a54,b41^b51^b22^b52^b43^b53^b24^b54^b55^b65^b16^b36^b66)
	m106 =strassenItmod2( a12^a32^a42^a15^a35^a45^a16^a36^a46,b11^b21^b41^b61^b12^b22^b42^b62^b35^b45^b65)
	m107 =strassenItmod2( a12^a32^a42,b32^b42^b62^b13^b23^b43^b63^b14^b24^b44^b64)
	m108 =strassenItmod2( a11^a21^a33^a34,b12^b42^b43^b14^b45^b16^b46)
	m109 =strassenItmod2( a41^a12^a32^a42^a44^a15^a35^a45^a16^a36^a46,b61^b62^b35^b45^b65)
	m110 =strassenItmod2( a51^a12^a32^a42^a53^a15^a35^a45,b12^b22^b32^b14^b24^b34^b35^b55^b65)
	m111 =strassenItmod2( a23^a33^a24^a34,b42^b43^b44^b45^b46)
	m112 =strassenItmod2( a41^a12^a32^a42^a44^a15^a35^a45^a16^a36^a46,b32^b42^b62^b34^b44^b35^b45)
	m113 =strassenItmod2( a51,b11^b21^b31^b41^b61^b12^b32^b52^b23^b43^b24^b54^b25^b55^b56^b66)
	m114 =strassenItmod2( a36,b23^b63^b25^b65^b26^b66)
	m115 =strassenItmod2( a51^a52^a54^a55^a56,b22^b24^b26)
	m116 =strassenItmod2( a51^a12^a22^a32^a52^a54^a35^a55^a56,b22^b52^b23^b53^b24^b25)
	m117 =strassenItmod2( a15^a35^a16^a26^a36,b54^b65^b56^b66)
	m118 =strassenItmod2( a41^a51^a43^a53^a44^a15^a35^a45^a16^a26^a36^a56,b51^b61^b53^b63^b54^b64^b55^b65)
	m119 =strassenItmod2( a33,b13^b33^b43^b15^b35^b45^b16^b36^b46)
	m120 =strassenItmod2( a32^a35^a36,b21^b22^b23^b25^b26)
	m121 =strassenItmod2( a41^a12^a32^a42^a36,b21^b61^b22^b62)
	m122 =strassenItmod2( a51^a52^a54^a55^a56,b51^b52^b23^b54^b25^b55^b26)
	m123 =strassenItmod2( a21^a31,b12^b14^b15^b16)
	m124 =strassenItmod2( a22^a32,b24^b25)
	m125 =strassenItmod2( a51^a53,b31^b51^b61^b33^b53^b63^b35^b55^b65)
	m126 =strassenItmod2( a12^a22^a32^a52^a25^a55,b51^b61^b55^b65)
	m127 =strassenItmod2( a12^a22^a32^a35,b51^b53^b25^b55^b56)
	m128 =strassenItmod2( a12^a32^a36,b21^b61^b23^b63^b24^b25)
	m129 =strassenItmod2( a12^a32^a42,b11^b21^b41^b61^b12^b22^b32^b13^b23^b43^b63^b14^b24^b44^b64^b15^b25^b35^b45^b55)
	m130 =strassenItmod2( a41^a51^a43^a53^a44^a15^a35^a45^a16^a26^a36^a56,b51^b61^b52^b62^b53^b63^b54^b64^b55^b65^b56^b66)
	m131 =strassenItmod2( a51^a53^a56,b22^b62^b24^b64^b26^b66)
	m132 =strassenItmod2( a41^a13^a43^a14^a44^a15^a35^a45,b32^b34^b35)
	m133 =strassenItmod2( a41^a12^a32^a42^a44,b32^b42^b62)
	m134 =strassenItmod2( a51^a43^a53^a44,b11^b21^b41^b61^b13^b23^b43^b63^b14^b24^b44^b64^b15^b25^b45^b65)
	m135 =strassenItmod2( a41^a42^a44^a45^a46,b61^b62^b66)
	m136 =strassenItmod2( a15^a35,b51^b61^b52^b62^b56^b66)
	m137 =strassenItmod2( a51^a53,b31^b32^b52^b62^b35)
	m138 =strassenItmod2( a15^a35,b51^b61^b52^b62^b55^b65)
	m139 =strassenItmod2( a15^a35^a16^a26^a36,b61^b52^b54^b65)
	m140 =strassenItmod2( a11^a33,b11^b31^b41^b32^b42^b13^b14^b34^b44^b16)
	m141 =strassenItmod2( a51^a54,b22^b52^b24^b44^b45^b65^b16^b36^b66)
	m142 =strassenItmod2( a12^a32,b22^b62)
	m143 =strassenItmod2( a41^a12^a32^a42,b12^b42^b23^b63^b14^b24^b44^b64^b25^b65^b26^b66)
	m144 =strassenItmod2( a26^a36,b61^b63^b66)
	
c11 = m117^m118^m120^m127^m128^m130^m136^m139^m144^m58^m21^m15^m18^m1^m7^m10^m40^m35^m112^m94^m98^m100^m101^m71^m77^m82^m91
	c12 = m127^m132^m136^m57^m58^m19^m21^m15^m16^m17^m18^m3^m4^m6^m10^m35^m36^m112^m94^m100^m101^m104^m69^m70^m28^m30^m77^m80^m82^m83^m85^m86^m92
	c13 = m53^m117^m119^m124^m130^m131^m132^m135^m138^m139^m144^m57^m58^m20^m15^m18^m12^m14^m3^m9^m43^m48^m35^m36^m112^m94^m98^m100^m69^m71^m31^m62^m28^m30^m77^m86^m87
	c14 = m53^m56^m118^m120^m124^m127^m128^m130^m132^m135^m136^m139^m144^m57^m58^m19^m21^m16^m18^m12^m14^m1^m3^m4^m6^m7^m9^m10^m44^m35^m36^m109^m104^m69^m70^m72^m30^m76^m80^m82^m83^m85^m86^m91^m92
	c15 = m117^m118^m120^m128^m130^m132^m135^m138^m139^m144^m58^m19^m21^m1^m7^m10^m44^m35^m109^m69^m71^m72^m30^m76^m91
	c16 = m51^m117^m118^m120^m124^m128^m130^m132^m135^m136^m139^m140^m144^m57^m58^m19^m20^m21^m15^m16^m12^m14^m1^m3^m7^m9^m10^m48^m36^m94^m104^m69^m31^m28^m30^m76^m83^m86^m91
	c21 = m49^m121^m122^m128^m139^m142^m143^m144^m58^m59^m60^m21^m17^m5^m8^m11^m46^m40^m112^m94^m98^m99^m71^m73^m64^m26^m22^m23^m77^m79^m80^m82^m84^m87^m91
	c22 = m49^m122^m127^m139^m142^m58^m59^m60^m21^m16^m12^m3^m4^m6^m46^m36^m112^m94^m95^m97^m70^m64^m28^m23^m77^m78^m79^m80^m81^m82^m83^m84^m86^m87^m92
	c23 = m49^m117^m119^m121^m128^m135^m139^m143^m144^m58^m20^m17^m14^m3^m5^m9^m46^m48^m36^m112^m115^m116^m94^m95^m97^m98^m99^m71^m64^m31^m28^m22^m23^m77^m78^m79^m81^m84^m86^m93
	c24 = m49^m54^m56^m128^m135^m143^m144^m57^m58^m21^m16^m12^m14^m3^m4^m5^m6^m9^m11^m44^m45^m36^m108^m109^m111^m114^m95^m97^m98^m103^m70^m72^m63^m64^m26^m76^m80^m82^m84^m86^m87^m91^m92
	c25 = m49^m127^m135^m142^m144^m57^m58^m21^m8^m11^m44^m45^m38^m109^m114^m95^m97^m98^m99^m71^m72^m63^m26^m76^m78^m80^m81^m84^m87^m91^m93
	c26 = m51^m117^m121^m122^m127^m128^m135^m140^m142^m143^m144^m58^m59^m60^m20^m21^m16^m17^m14^m3^m5^m9^m11^m45^m48^m36^m38^m115^m116^m94^m97^m98^m63^m31^m28^m76^m78^m80^m81^m83^m84^m86^m87^m91
	c31 = m2^m5^m10^m13^m15^m16^m17^m35^m42^m58^m64^m71^m81^m82^m90^m94^m99^m108^m120^m121^m127^m142^m143
	c32 = m127^m142^m58^m15^m16^m17^m13^m3^m6^m10^m48^m35^m36^m39^m108^m94^m95^m97^m69^m70^m64^m28^m82^m86^m92
	c33 = m119^m121^m124^m128^m143^m58^m15^m17^m12^m14^m3^m5^m9^m48^m35^m36^m39^m94^m95^m97^m99^m69^m71^m64^m28^m81^m86^m90^m93
	c34 = m54^m120^m123^m124^m127^m140^m143^m58^m12^m14^m3^m5^m6^m9^m10^m11^m42^m45^m48^m35^m36^m114^m95^m97^m98^m103^m69^m70^m63^m64^m76^m82^m86^m90^m92
	c35 = m120^m123^m128^m140^m142^m58^m16^m10^m11^m42^m45^m48^m35^m38^m108^m114^m95^m97^m98^m99^m69^m71^m63^m76^m81^m93
	c36 = m120^m121^m123^m124^m140^m142^m143^m58^m15^m16^m17^m12^m13^m14^m3^m5^m9^m10^m11^m45^m36^m38^m39^m108^m94^m97^m98^m69^m63^m28^m76^m86^m90
	c41 = m52^m117^m118^m121^m128^m129^m130^m133^m134^m136^m139^m142^m143^m144^m17^m7^m47^m38^m109^m98^m99^m100^m102^m106^m33^m27^m75^m25^m77^m88^m91
	c42 = m19^m27^m33^m34^m38^m52^m75^m77^m99^m100^m102^m129^m133^m134^m136^m142^m143
	c43 = m50^m52^m53^m117^m121^m125^m128^m129^m130^m131^m134^m135^m138^m139^m144^m17^m43^m38^m107^m110^m112^m96^m98^m100^m101^m102^m31^m33^m30^m75^m77^m87^m89^m93
	c44 = m50^m52^m53^m54^m56^m118^m125^m128^m129^m130^m133^m134^m135^m136^m139^m144^m19^m7^m44^m45^m34^m38^m109^m110^m112^m114^m96^m98^m99^m101^m102^m75^m91
	c45 = m117^m118^m129^m130^m135^m138^m139^m142^m143^m144^m19^m7^m44^m45^m38^m107^m109^m114^m98^m106^m27^m30^m88^m91^m93
	c46 = m117^m118^m121^m128^m129^m130^m133^m134^m135^m136^m139^m142^m143^m144^m19^m17^m7^m45^m47^m38^m109^m98^m99^m100^m102^m106^m74^m33^m27^m75^m88^m91
	c51 = m49^m50^m52^m55^m122^m126^m137^m139^m58^m59^m6^m9^m41^m34^m94^m102^m105^m67^m65^m32^m33^m61^m29^m75^m22^m24^m79^m86
	c52 = m49^m50^m52^m55^m122^m127^m141^m58^m12^m3^m6^m7^m9^m41^m34^m37^m110^m113^m116^m94^m102^m105^m66^m67^m68^m70^m65^m32^m33^m61^m27^m29^m75^m79^m86
	c53 = m49^m50^m52^m55^m125^m126^m137^m139^m141^m58^m59^m14^m3^m6^m9^m41^m43^m34^m110^m115^m94^m102^m105^m66^m67^m68^m65^m32^m33^m27^m75^m22^m79^m86
	c54 = m49^m52^m55^m125^m131^m141^m58^m12^m14^m3^m6^m7^m46^m34^m37^m113^m116^m102^m105^m67^m68^m70^m65^m32^m61^m75^m76^m79^m86
	c55 = m6^m24^m27^m29^m32^m37^m46^m49^m55^m58^m65^m66^m76^m79^m86^m110^m113^m127^m141
	c56 = m3^m9^m14^m27^m29^m33^m41^m46^m50^m58^m65^m66^m68^m76^m86^m94^m102^m105^m110^m115^m122^m127^m141)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0), np.concatenate(c14, c24, c34, c44, c54, c64), axis=0), np.concatenate(c15, c25, c35, c45, c55, c65), axis=0)), axis=1)

	return result



def div6x6(a):

	col = len(a)/6
	row = len(a[1])/6

	#row 1

	a11 = a[0:row,0:col]
	a12 = a[row:1*row,0:col]
	a13 = a[2*row:3*row,0:col]
	a14 = a[3*row:4*row,0:col]
	a15 = a[4*row:5*row,0:col]
	a16 = a[5*row:6*row,0:col]
	#row 2

	a21 = a[0:row,col:1*col]
	a22 = a[row:1*row,col:1*col]
	a23 = a[2*row:3*row,col:1*col]
	a24 = a[3*row:4*row,col:1*col]
	a25 = a[4*row:5*row,col:1*col]
	a26 = a[5*row:6*row,col:1*col]
	#row 3

	a31 = a[0:row,2*col:3*col]
	a32 = a[row:1*row,2*col:3*col]
	a33 = a[2*row:3*row,2*col:3*col]
	a34 = a[3*row:4*row,2*col:3*col]
	a35 = a[4*row:5*row,2*col:3*col]
	a36 = a[5*row:6*row,2*col:3*col]
	#row 4

	a41 = a[0:row,3*col:4*col]
	a42 = a[row:1*row,3*col:4*col]
	a43 = a[2*row:3*row,3*col:4*col]
	a44 = a[3*row:4*row,3*col:4*col]
	a45 = a[4*row:5*row,3*col:4*col]
	a46 = a[5*row:6*row,3*col:4*col]
	#row 5

	a51 = a[0:row,4*col:5*col]
	a52 = a[row:1*row,4*col:5*col]
	a53 = a[2*row:3*row,4*col:5*col]
	a54 = a[3*row:4*row,4*col:5*col]
	a55 = a[4*row:5*row,4*col:5*col]
	a56 = a[5*row:6*row,4*col:5*col]
	#row 6

	a61 = a[0:row,5*col:6*col]
	a62 = a[row:1*row,5*col:6*col]
	a63 = a[2*row:3*row,5*col:6*col]
	a64 = a[3*row:4*row,5*col:6*col]
	a65 = a[4*row:5*row,5*col:6*col]
	a66 = a[5*row:6*row,5*col:6*col]

	return (a11, a12, a13, a14, a15, a16, 
	  a21, a22, a23, a24, a25, a26, 
	  a31, a32, a33, a34, a35, a36, 
	  a41, a42, a43, a44, a45, a46, 
	  a51, a52, a53, a54, a55, a56, 
	  a61, a62, a63, a64, a65, a66)def mat666mod2(a,b):

	a11, a12, a13, a14, a15, a16, a21, a22, a23, a24, a25, a26, a31, a32, a33, a34, a35, a36, a41, a42, a43, a44, a45, a46, a51, a52, a53, a54, a55, a56, a61, a62, a63, a64, a65, a66 = div6x6(a)
	b11, b12, b13, b14, b15, b16, b21, b22, b23, b24, b25, b26, b31, b32, b33, b34, b35, b36, b41, b42, b43, b44, b45, b46, b51, b52, b53, b54, b55, b56, b61, b62, b63, b64, b65, b66 = div6x6(b)


	m1 =strassenItmod2( a43^a53^a24^a44^a64^a46^a56,b42^b33^b53^b34^b44^b54^b35^b45^b55^b36^b46^b56)
	m2 =strassenItmod2( a11^a21^a61^a12^a22^a32^a42,b12^b32^b52^b62^b13^b23^b33^b53^b63^b25)
	m3 =strassenItmod2( a31^a41^a61^a24^a34^a44^a64^a25^a35^a45^a65,b11^b13^b33^b53^b63^b15^b35^b55^b65)
	m4 =strassenItmod2( a43^a53^a63^a24^a34^a64^a46^a56^a66,b61^b63^b44^b54^b45^b55^b65)
	m5 =strassenItmod2( a23^a33^a43^a53^a24^a34^a64^a25^a35^a65,b31^b51^b61^b33^b53^b63^b54^b35^b65)
	m6 =strassenItmod2( a32^a42^a62,b11^b21^b31^b51^b61^b14^b24^b34^b54^b64^b16^b26^b36^b56^b66)
	m7 =strassenItmod2( a43^a53^a45^a55^a46^a56,b42^b52^b44^b54^b46^b56)
	m8 =strassenItmod2( a13^a33^a43^a53^a63^a14^a34^a44^a54^a64^a15^a35^a45^a55^a65,b52)
	m9 =strassenItmod2( a61^a12^a42^a52^a23^a43^a63^a44^a25^a45^a65,b11^b23^b14^b24^b25^b16^b26)
	m10 =strassenItmod2( a11^a21^a31^a41^a33^a43^a63^a16^a26^a66,b32^b52^b62^b33^b53)
	m11 =strassenItmod2( a16^a66,b34^b64)
	m12 =strassenItmod2( a24^a34^a44^a54,b41^b51^b43^b53^b44^b54)
	m13 =strassenItmod2( a11^a41^a51^a61^a46^a56,b14^b34^b44^b54)
	m14 =strassenItmod2( a32^a42^a62^a13^a53,b23)
	m15 =strassenItmod2( a41^a51^a61^a44,b43^b53^b63^b45^b55^b65)
	m16 =strassenItmod2( a41^a51^a12^a62^a43^a53,b12^b24^b15^b25^b16)
	m17 =strassenItmod2( a61^a62^a23^a64^a25,b31^b41^b51^b34^b44^b54^b36^b46^b56)
	m18 =strassenItmod2( a12^a32^a42^a52^a62^a23^a63^a24^a64^a26^a66,b21^b61^b23^b64^b25^b66)
	m19 =strassenItmod2( a11^a21^a31^a41^a23^a33^a43^a53^a16^a56,b11^b63^b14)
	m20 =strassenItmod2( a33^a43^a24^a64^a25^a35^a45^a65^a36^a46,b11^b31^b51^b61^b13^b33^b53^b63^b15^b35^b55^b65)
	m21 =strassenItmod2( a23^a33^a63^a34^a25^a65^a46^a56^a66,b61^b42^b52^b64^b46^b56^b66)
	m22 =strassenItmod2( a41^a51^a61^a43^a53,b14^b34^b44^b54^b15^b35^b45^b55)
	m23 =strassenItmod2( a31^a41^a61^a33^a43^a35^a45^a36^a46,b33^b53^b63^b35^b55^b65)
	m24 =strassenItmod2( a33^a43^a63^a36^a46^a66,b62)
	m25 =strassenItmod2( a13^a23^a33^a43^a14^a24^a64^a15^a25^a35^a45,b52^b43)
	m26 =strassenItmod2( a43^a53^a63^a14^a44^a54^a64^a15^a46^a56^a66,b44^b45^b55)
	m27 =strassenItmod2( a12^a22^a62,b11^b21^b31^b51^b61^b14^b24^b34^b54^b64)
	m28 =strassenItmod2( a41^a51^a43^a53,b14^b24^b15^b25)
	m29 =strassenItmod2( a12^a22^a62^a23^a33^a43^a53,b11^b31^b51^b61^b14^b34^b54^b64)
	m30 =strassenItmod2( a22^a52^a62,b21^b23^b24)
	m31 =strassenItmod2( a32^a42^a62^a44^a45,b11^b31^b51^b61^b14^b34^b54^b64^b16^b36^b56^b66)
	m32 =strassenItmod2( a12^a22^a62^a13^a53,b11^b31^b51^b61^b23^b14^b34^b54^b64)
	m33 =strassenItmod2( a32^a42^a62^a24^a64^a25^a65,b11^b31^b51^b61^b23^b14^b24^b34^b54^b64^b25^b16^b26^b36^b56^b66)
	m34 =strassenItmod2( a61^a12^a22^a32^a23^a43^a63^a24^a44^a64^a45,b11^b23^b14^b24^b25^b16^b26)
	m35 =strassenItmod2( a23^a63^a25^a65,b31^b41^b51^b13^b33^b63^b14^b44^b54^b64^b15^b35^b65^b16^b46^b56^b66)
	m36 =strassenItmod2( a14^a44^a54^a64^a15^a45^a55^a65,b55)
	m37 =strassenItmod2( a41^a51^a61^a43^a53^a63^a16^a66,b34^b64^b45^b55^b65)
	m38 =strassenItmod2( a13^a43^a53^a63^a14^a44^a54^a64^a16^a46^a56^a66,b45^b55)
	m39 =strassenItmod2( a13^a23^a63^a14^a24^a64^a15^a25^a65,b52)
	m40 =strassenItmod2( a13^a43^a24^a64^a45^a46^a56,b52^b33^b53^b34^b64^b35^b45^b55^b36^b66)
	m41 =strassenItmod2( a33^a43^a63^a35^a45^a65,b52^b53)
	m42 =strassenItmod2( a43^a53^a63^a64^a45^a55^a46^a56^a66,b42^b52^b44^b46^b56)
	m43 =strassenItmod2( a43^a53,b12^b22^b32^b42^b52^b24^b15^b35^b45^b55^b16^b26^b36^b46^b56)
	m44 =strassenItmod2( a21^a31^a41^a51^a23^a33^a43^a53,b11^b13^b14)
	m45 =strassenItmod2( a41^a51^a61^a16^a46^a56,b45^b55^b65)
	m46 =strassenItmod2( a53^a63^a24^a34^a64^a45^a16^a66,b31^b51^b61^b63^b54^b45^b55^b65)
	m47 =strassenItmod2( a11^a31^a41^a51^a61^a12^a32^a42^a52^a62,b11^b61^b12^b62^b14^b64)
	m48 =strassenItmod2( a13^a63^a64^a15^a16^a66,b52^b44^b45^b56)
	m49 =strassenItmod2( a13^a53^a15^a55,b51^b54)
	m50 =strassenItmod2( a61^a62^a24^a64,b31^b41^b51^b24^b34^b44^b54^b26^b36^b46^b56)
	m51 =strassenItmod2( a23^a33^a63^a44^a25^a35^a65,b31^b41^b51^b43^b53^b63^b45^b55^b65)
	m52 =strassenItmod2( a41^a51^a61^a43^a53^a63^a66,b44^b54^b64^b45^b55^b65)
	m53 =strassenItmod2( a13^a53^a16^a56,b11^b61^b14^b64)
	m54 =strassenItmod2( a11^a61^a12^a42^a52,b11^b14^b24^b16^b26)
	m55 =strassenItmod2( a12,b24)
	m56 =strassenItmod2( a41^a51^a61,b11^b43^b53^b63^b45^b55^b65)
	m57 =strassenItmod2( a11^a61,b14^b24^b16^b26)
	m58 =strassenItmod2( a41^a51^a61^a46^a56,b14^b34^b44^b54^b45^b55^b65)
	m59 =strassenItmod2( a44^a54^a45^a55,b42^b44^b46)
	m60 =strassenItmod2( a43^a44^a45,b11^b31^b41^b51^b14^b34^b44^b54^b16^b36^b46^b56)
	m61 =strassenItmod2( a42^a52^a62,b22^b42^b52^b62^b23^b45^b55^b65^b26^b46^b56^b66)
	m62 =strassenItmod2( a33^a43^a53,b32^b42^b52^b36^b46^b56)
	m63 =strassenItmod2( a42^a52^a62^a16^a46^a56,b42^b52^b62^b45^b55^b65^b46^b56^b66)
	m64 =strassenItmod2( a61^a62^a23^a43^a63^a44^a25^a45^a65,b31^b41^b51^b23^b24^b34^b44^b54^b25^b26^b36^b46^b56)
	m65 =strassenItmod2( a11^a61,b11^b12^b14^b24^b26)
	m66 =strassenItmod2( a23^a14^a34^a44^a54^a64^a25,b41^b42^b52^b44)
	m67 =strassenItmod2( a11^a21^a41^a33^a44^a35^a45^a26^a36^a66,b11^b13^b15)
	m68 =strassenItmod2( a32^a52^a13^a53,b23)
	m69 =strassenItmod2( a12^a22^a32^a42^a23^a63^a24^a64^a26^a66,b21^b23^b25)
	m70 =strassenItmod2( a11^a31^a41^a51^a61^a36^a46^a56,b61^b62^b64)
	m71 =strassenItmod2( a13^a23^a33^a43,b11^b31^b51^b61^b13^b33^b53^b63^b14^b34^b54^b64)
	m72 =strassenItmod2( a13^a23^a33^a43^a15^a25^a35^a45,b43^b53)
	m73 =strassenItmod2( a11^a21^a31^a41^a16^a26^a36^a46,b63)
	m74 =strassenItmod2( a14^a54,b41^b44)
	m75 =strassenItmod2( a13^a23^a63^a16^a26^a66,b32^b52^b33^b53)
	m76 =strassenItmod2( a23^a33^a43^a53^a24^a34^a44^a54^a25^a35^a45^a55,b51^b52^b53^b54)
	m77 =strassenItmod2( a23^a33^a43^a63^a25^a35^a45^a65^a16^a66,b31^b51^b61^b54)
	m78 =strassenItmod2( a34^a44^a64,b42^b43)
	m79 =strassenItmod2( a42^a52^a62,b21^b23^b25)
	m80 =strassenItmod2( a12^a32^a42^a52^a62^a43^a44^a46,b61^b64^b66)
	m81 =strassenItmod2( a11^a41^a51^a61^a13^a43^a53^a63^a16^a66,b34^b44^b54)
	m82 =strassenItmod2( a12^a32^a42^a52^a62,b11^b12^b22^b62^b23^b14^b25^b26^b66)
	m83 =strassenItmod2( a11^a21^a61^a16^a26^a66,b32^b52^b62^b33^b53^b63)
	m84 =strassenItmod2( a41^a51^a61,b11^b43^b53^b63^b15^b35^b45^b55)
	m85 =strassenItmod2( a12^a42^a52^a62^a43^a53^a46^a56,b22^b24^b26)
	m86 =strassenItmod2( a11^a21^a61^a12^a22^a62,b23^b25)
	m87 =strassenItmod2( a23^a33^a43^a63^a25^a35^a45^a65,b31^b61)
	m88 =strassenItmod2( a12^a62,b12^b22^b15^b25^b16^b26)
	m89 =strassenItmod2( a41^a51^a62^a43^a53,b24^b25)
	m90 =strassenItmod2( a11^a21^a31^a41^a12^a22^a32^a42,b12^b32^b52^b62^b13^b33^b53^b63)
	m91 =strassenItmod2( a11^a31^a41^a51^a61,b11^b13^b63^b14^b15^b65^b16)
	m92 =strassenItmod2( a43^a53^a63^a44^a54^a64^a46^a56^a66,b44)
	m93 =strassenItmod2( a23^a33^a63^a24^a64^a35^a26^a36^a66,b11^b13^b63^b64^b15^b65^b66)
	m94 =strassenItmod2( a12^a42^a52,b11^b21^b14^b24^b16^b26)
	m95 =strassenItmod2( a23^a33^a43^a53^a24^a25,b31^b51^b42^b34^b54^b36^b46^b56)
	m96 =strassenItmod2( a11^a31^a41^a51^a61^a13^a53^a16^a56,b11^b61^b62^b14^b64)
	m97 =strassenItmod2( a32^a42^a62,b22^b25)
	m98 =strassenItmod2( a11^a41^a51^a61^a43^a53,b12^b14^b34^b44^b54^b16)
	m99 =strassenItmod2( a41^a51^a61^a13^a43^a53,b12^b15^b35^b45^b55^b16)
	m100 =strassenItmod2( a12^a22^a32^a42,b12^b22^b32^b52^b62^b13^b23^b33^b53^b63)
	m101 =strassenItmod2( a14^a24^a64,b42^b52)
	m102 =strassenItmod2( a11^a21^a61^a22^a32^a42^a52,b11^b23^b14^b25^b16)
	m103 =strassenItmod2( a13^a23^a63^a24^a64^a25^a65,b52^b34^b64^b36^b66)
	m104 =strassenItmod2( a11^a51^a16^a56,b11^b14)
	m105 =strassenItmod2( a61^a24^a64,b31^b41^b51^b13^b33^b63^b24^b34^b44^b54^b15^b35^b65^b26^b36^b46^b56)
	m106 =strassenItmod2( a23^a33^a43^a53^a26^a36^a46^a56,b61^b63^b64)
	m107 =strassenItmod2( a24^a34^a44^a64,b31^b41^b51)
	m108 =strassenItmod2( a23^a25,b41^b51^b42^b52^b44^b54)
	m109 =strassenItmod2( a42^a52^a62,b22^b42^b52^b62^b23^b25^b45^b55^b65^b26^b46^b56^b66)
	m110 =strassenItmod2( a14^a15,b44^b45)
	m111 =strassenItmod2( a42^a52^a62^a46^a56,b22^b42^b52^b62^b24^b45^b55^b65^b26^b46^b56^b66)
	m112 =strassenItmod2( a13^a24^a64^a16,b42^b52^b44^b54^b64^b46^b56^b66)
	m113 =strassenItmod2( a12^a32^a42^a52^a62,b11^b61^b12^b22^b62^b23^b14^b64)
	m114 =strassenItmod2( a31^a41^a61^a13^a53,b32^b52^b62^b13^b33^b53^b63)
	m115 =strassenItmod2( a12^a42^a52^a62,b21^b23^b25)
	m116 =strassenItmod2( a23^a63^a25^a65,b11^b41^b51^b61^b14^b44^b54^b64^b16^b46^b56^b66)
	m117 =strassenItmod2( a33^a43^a34^a44^a36^a46,b11^b31^b51^b13^b63^b15^b65)
	m118 =strassenItmod2( a13^a15^a16,b44^b54^b45^b55)
	m119 =strassenItmod2( a33^a34^a46^a56,b61^b42^b52^b64^b46^b56^b66)
	m120 =strassenItmod2( a21^a51^a61^a23^a33^a63^a44^a25^a35^a45^a65^a26^a36^a66,b11^b13^b15)
	m121 =strassenItmod2( a64^a65,b31^b51^b42^b52^b34^b54^b36^b46)
	m122 =strassenItmod2( a43^a53^a63^a45^a55^a65^a46^a56^a66,b54)
	m123 =strassenItmod2( a11^a41^a51^a12^a42^a52^a23^a43^a63^a44^a25^a45^a65,b11^b14^b16)
	m124 =strassenItmod2( a23^a43^a63^a25^a45^a65^a46^a56,b52^b33^b53^b63^b34^b64^b35^b65^b36^b66)
	m125 =strassenItmod2( a11^a12^a24^a64,b24^b26)
	m126 =strassenItmod2( a24^a34^a44^a54,b41^b51^b42^b52^b43^b53^b44^b54)
	m127 =strassenItmod2( a13^a33^a43^a53^a63,b32^b52^b62)
	m128 =strassenItmod2( a23^a43^a63^a25^a45^a65,b41^b51^b61^b44^b54^b64^b46^b56^b66)
	m129 =strassenItmod2( a11^a31^a41^a51^a61^a23^a33^a63^a24^a34^a64^a26^a36^a66,b11^b13^b63^b15^b65)
	m130 =strassenItmod2( a63^a64^a66,b42^b52^b46^b56)
	m131 =strassenItmod2( a43^a45^a16^a46^a56,b63^b45^b55^b65)
	m132 =strassenItmod2( a24^a64,b31^b41^b51^b13^b33^b63^b15^b35^b65)
	m133 =strassenItmod2( a13^a33^a43^a53^a63^a16^a66,b31^b51^b62^b34^b54)
	m134 =strassenItmod2( a13^a63^a14^a64^a16^a66,b42^b44^b45^b46)
	m135 =strassenItmod2( a61^a23^a63^a25^a65,b31^b41^b51^b13^b33^b63^b14^b34^b44^b54^b15^b35^b65^b16^b36^b46^b56)
	m136 =strassenItmod2( a23^a33^a63^a25^a35^a65,b41^b51^b61^b43^b53^b63^b45^b55^b65)
	m137 =strassenItmod2( a24^a64^a25^a65,b11^b23^b14^b24^b34^b54^b64^b25^b16^b26^b36^b56^b66)
	m138 =strassenItmod2( a13^a23^a33^a43^a24^a34^a44^a54^a15^a25^a35^a45,b51^b43^b53^b54)
	m139 =strassenItmod2( a41^a51^a61^a24^a64,b13^b43^b53^b63^b15^b45^b55^b65)
	m140 =strassenItmod2( a46^a56,b22^b42^b52^b62^b14^b24^b34^b64^b45^b55^b65^b26^b46^b56^b66)
	m141 =strassenItmod2( a11^a31^a41^a51^a61^a43^a44^a46,b63^b65)
	m142 =strassenItmod2( a61^a23^a43^a63^a44^a25^a45^a65,b31^b41^b51^b23^b33^b63^b24^b34^b44^b54^b25^b35^b65^b26^b36^b46^b56)
	m143 =strassenItmod2( a12^a32^a42^a52^a62,b23)
	m144 =strassenItmod2( a23^a63^a24^a64^a26^a66,b21^b61^b23^b25)
	m145 =strassenItmod2( a33^a43^a44^a35^a36^a46,b11^b31^b51^b61^b13^b33^b53^b64^b15^b35^b55^b66)
	m146 =strassenItmod2( a13^a63^a24^a34^a44^a64^a16^a66,b31^b51^b44)
	m147 =strassenItmod2( a13^a43^a53,b12^b32^b42^b52^b15^b35^b45^b55^b16^b36^b46^b56)
	m148 =strassenItmod2( a13^a63^a14^a44^a54^a64^a45^a55^a16^a66,b42^b44^b55^b46)
	m149 =strassenItmod2( a23^a33^a63^a34^a25^a35^a65,b31^b41^b51^b33^b43^b53^b35^b45^b55)
	m150 =strassenItmod2( a13^a53^a44^a45,b33^b53^b35^b45^b55)
	m151 =strassenItmod2( a11^a21^a31^a41^a13^a23^a33^a43,b13^b63)
	m152 =strassenItmod2( a31^a41^a61^a44^a45,b11^b33^b53^b63^b14^b35^b55^b65^b16)
	m153 =strassenItmod2( a13^a53,b13^b23^b33^b53^b63)
	m154 =strassenItmod2( a13^a23^a63^a24^a64^a25^a65^a16^a66,b31^b51^b42^b52^b54^b64^b46^b56^b66)
	m155 =strassenItmod2( a11^a41^a51^a12^a62^a13^a43^a53,b12^b15^b16)
	m156 =strassenItmod2( a12^a32^a42^a52^a62,b21^b61^b24^b64^b25^b26^b66)
	m157 =strassenItmod2( a11^a21^a41^a61^a12^a22^a32^a23^a43^a63^a25^a65,b11^b14^b16)
	m158 =strassenItmod2( a12^a62,b21^b12^b15^b25^b16)
	m159 =strassenItmod2( a34^a35,b11^b31^b51^b61^b52^b13^b63^b64^b15^b65^b56^b66)
	m160 =strassenItmod2( a13^a23^a33^a43^a14^a24^a34^a44^a15^a25^a35^a45,b43)
	m161 =strassenItmod2( a11^a21^a61,b11^b23^b25)
	m162 =strassenItmod2( a33^a43^a34^a44^a36^a46,b11^b31^b51^b13^b33^b53^b63^b15^b35^b55^b65)
	m163 =strassenItmod2( a41^a51^a61^a43^a53^a63,b34^b64^b35^b65)
	m164 =strassenItmod2( a31^a41^a61,b12^b32^b52^b62^b15^b35^b55^b65)
	
c11 = m50^m54^m118^m119^m126^m132^m135^m138^m57^m60^m21^m14^m9^m154^m35^m38^m108^m109^m112^m115^m116^m101^m105^m66^m68^m72^m64^m61^m26^m77^m79^m87^m92
	c12 = m22^m35^m37^m39^m43^m52^m57^m63^m81^m85^m98^m99^m101^m103^m105^m111^m112^m125^m132^m135^m147
	c13 = m50^m54^m55^m56^m120^m124^m131^m135^m139^m57^m58^m60^m16^m13^m14^m9^m155^m41^m45^m40^m39^m109^m98^m99^m103^m105^m67^m68^m72^m64^m61^m22^m25^m89
	c14 = m13^m26^m37^m38^m45^m52^m55^m58^m81^m92^m118
	c15 = m13^m16^m22^m26^m38^m45^m55^m58^m89^m92^m98^m99^m110^m155
	c16 = m13^m35^m37^m39^m45^m48^m52^m55^m57^m58^m81^m101^m103^m105^m110^m112^m125^m130^m132^m134^m135
	c21 = m54^m119^m122^m126^m130^m137^m144^m57^m21^m12^m14^m6^m7^m146^m154^m161^m42^m107^m108^m109^m112^m94^m101^m66^m68^m69^m74^m33^m61^m79^m86
	c22 = m50^m125^m126^m133^m57^m16^m17^m12^m2^m10^m146^m151^m153^m107^m114^m95^m97^m98^m100^m101^m66^m71^m74^m32^m62^m28^m29^m75^m81^m86^m88
	c23 = m51^m56^m120^m127^m132^m135^m139^m142^m57^m60^m5^m9^m10^m11^m149^m150^m151^m153^m155^m158^m160^m163^m41^m46^m37^m39^m107^m114^m94^m99^m67^m71^m65^m32^m29^m25^m77^m79^m83
	c24 = m53^m54^m119^m122^m130^m133^m137^m144^m19^m21^m16^m14^m6^m7^m154^m158^m161^m42^m109^m112^m94^m96^m98^m104^m106^m68^m69^m70^m73^m65^m33^m61^m27^m28^m29^m24^m79^m81^m86
	c25 = m54^m117^m120^m124^m127^m129^m131^m134^m141^m59^m14^m3^m10^m11^m148^m151^m153^m155^m158^m161^m162^m163^m40^m36^m37^m38^m109^m110^m114^m94^m99^m103^m68^m71^m65^m32^m61^m26^m29^m23^m79^m83^m86^m92
	c26 = m50^m53^m54^m119^m121^m125^m126^m130^m133^m143^m57^m19^m21^m16^m17^m18^m12^m14^m6^m9^m146^m156^m158^m34^m107^m109^m94^m96^m98^m101^m102^m104^m106^m66^m68^m69^m70^m73^m74^m65^m33^m61^m27^m28^m29^m24^m79^m81^m86
	c31 = m50^m51^m54^m56^m117^m123^m129^m132^m135^m136^m144^m57^m60^m15^m18^m9^m145^m152^m157^m35^m107^m115^m116^m102^m105^m64^m23^m80^m86^m91^m93
	c32 = m50^m51^m53^m54^m123^m126^m128^m132^m133^m135^m136^m140^m143^m57^m58^m60^m15^m17^m12^m1^m146^m150^m160^m43^m47^m40^m35^m39^m107^m113^m116^m95^m96^m98^m101^m103^m105^m66^m74^m62^m22^m24^m25^m78^m81^m84^m85^m87
	c33 = m50^m51^m54^m55^m120^m124^m127^m132^m135^m143^m57^m58^m60^m19^m15^m16^m13^m5^m9^m10^m11^m149^m151^m155^m163^m44^m46^m40^m37^m107^m109^m114^m98^m99^m103^m104^m105^m67^m73^m64^m61^m22^m77^m83^m84^m89
	c34 = m53^m55^m117^m119^m123^m129^m131^m133^m140^m144^m21^m18^m13^m14^m4^m145^m152^m154^m156^m157^m46^m111^m112^m113^m96^m102^m68^m70^m61^m23^m24^m77^m80^m81^m82^m86^m91^m93
	c35 = m55^m56^m117^m123^m124^m127^m141^m143^m58^m19^m16^m13^m5^m10^m11^m151^m152^m155^m157^m162^m163^m44^m46^m40^m37^m109^m114^m98^m99^m102^m103^m104^m73^m61^m22^m23^m77^m83^m84^m86^m89^m91
	c36 = m50^m51^m53^m54^m55^m56^m117^m119^m126^m128^m132^m133^m135^m136^m140^m143^m57^m60^m15^m17^m12^m13^m14^m1^m145^m146^m150^m152^m157^m159^m160^m40^m35^m39^m107^m111^m113^m116^m95^m96^m101^m102^m103^m105^m66^m68^m70^m74^m61^m23^m24^m25^m78^m80^m81^m82^m86^m87
	c41 = m51^m54^m56^m117^m123^m129^m136^m137^m144^m57^m20^m15^m18^m2^m3^m6^m164^m145^m152^m157^m162^m94^m102^m33^m23^m80^m87^m90^m91^m93
	c42 = m51^m52^m53^m54^m123^m128^m136^m140^m143^m57^m58^m60^m15^m16^m14^m1^m2^m147^m150^m153^m47^m40^m37^m111^m112^m113^m114^m116^m96^m97^m98^m99^m63^m28^m81^m84^m86^m87^m88^m90
	c43 = m120^m131^m135^m142^m143^m57^m60^m19^m15^m9^m150^m151^m153^m155^m158^m44^m45^m94^m99^m104^m67^m68^m65^m79^m84
	c44 = m52^m53^m54^m117^m123^m129^m131^m137^m140^m143^m144^m58^m20^m16^m18^m14^m2^m3^m4^m6^m164^m145^m146^m152^m157^m158^m162^m45^m46^m37^m109^m111^m94^m98^m102^m104^m65^m32^m33^m27^m28^m30^m23^m79^m80^m81^m90^m91^m93
	c45 = m54^m56^m123^m131^m141^m143^m19^m2^m164^m150^m151^m152^m153^m155^m157^m158^m44^m45^m94^m99^m102^m104^m68^m65^m79^m84^m90^m91
	c46 = m51^m52^m53^m56^m128^m131^m136^m140^m57^m58^m60^m15^m16^m14^m4^m6^m146^m156^m157^m158^m45^m46^m37^m109^m111^m116^m94^m98^m102^m104^m65^m31^m32^m27^m28^m30^m79^m80^m81^m86^m87
	c51 = m49^m50^m54^m117^m119^m123^m126^m129^m130^m131^m132^m135^m137^m138^m144^m57^m60^m20^m21^m18^m14^m2^m3^m4^m6^m7^m9^m164^m145^m146^m152^m154^m157^m162^m42^m46^m35^m108^m109^m112^m115^m116^m101^m102^m105^m66^m68^m72^m74^m64^m33^m61^m23^m77^m79^m80^m87^m90^m91^m92^m93
	c52 = m52^m53^m125^m126^m132^m135^m143^m57^m12^m14^m2^m8^m147^m153^m160^m43^m47^m35^m37^m111^m112^m113^m114^m96^m97^m98^m99^m103^m105^m63^m22^m25^m78^m81^m85^m86^m90
	c53 = m49^m50^m54^m55^m56^m120^m124^m131^m135^m138^m139^m143^m57^m58^m60^m19^m16^m13^m8^m9^m151^m153^m155^m160^m41^m44^m45^m40^m109^m98^m99^m103^m104^m105^m67^m68^m72^m64^m61^m76^m22^m25^m89
	c54 = m52^m53^m55^m117^m123^m129^m130^m131^m137^m143^m144^m58^m20^m18^m13^m14^m2^m3^m4^m6^m7^m164^m145^m146^m152^m157^m162^m42^m45^m46^m37^m102^m104^m32^m33^m27^m30^m23^m80^m81^m90^m91^m92^m93
	c55 = m55^m123^m131^m134^m141^m143^m58^m59^m19^m16^m13^m14^m2^m164^m148^m150^m151^m152^m153^m155^m157^m44^m45^m38^m98^m99^m102^m104^m22^m89^m90^m91
	c56 = m52^m53^m55^m123^m125^m126^m130^m131^m132^m135^m57^m58^m59^m12^m13^m14^m1^m4^m6^m8^m146^m150^m156^m157^m160^m42^m45^m46^m40^m35^m37^m102^m103^m104^m105^m31^m32^m27^m30^m25^m78^m80^m81^m86^m92
	c61 = m50^m119^m122^m126^m130^m132^m135^m60^m21^m12^m7^m9^m146^m154^m42^m35^m107^m108^m112^m115^m116^m94^m101^m105^m66^m74^m64
	c62 = m50^m52^m126^m127^m132^m133^m135^m16^m17^m12^m146^m147^m43^m35^m37^m107^m111^m112^m95^m99^m101^m103^m105^m66^m74^m63^m62^m28^m22^m85^m88
	c63 = m50^m51^m54^m55^m124^m131^m132^m142^m58^m16^m13^m14^m5^m11^m149^m150^m158^m160^m163^m41^m45^m46^m40^m37^m39^m107^m109^m94^m98^m103^m105^m68^m64^m65^m61^m22^m25^m77^m79^m89
	c64 = m7^m11^m13^m14^m16^m28^m37^m42^m45^m52^m54^m55^m58^m61^m65^m68^m79^m94^m98^m109^m122^m130^m158
	c65 = m54^m55^m134^m58^m59^m16^m13^m14^m11^m148^m158^m163^m45^m36^m37^m38^m109^m110^m94^m98^m68^m65^m61^m26^m22^m79^m89^m92
	c66 = m50^m52^m54^m55^m121^m126^m130^m132^m135^m58^m16^m17^m12^m13^m14^m11^m146^m154^m158^m45^m35^m37^m107^m109^m112^m94^m98^m101^m105^m66^m68^m74^m65^m61^m28^m79)

	result = np.concatenate((np.concatenate(c11, c21, c31, c41, c51, c61), axis=0), np.concatenate(c12, c22, c32, c42, c52, c62), axis=0), np.concatenate(c13, c23, c33, c43, c53, c63), axis=0), np.concatenate(c14, c24, c34, c44, c54, c64), axis=0), np.concatenate(c15, c25, c35, c45, c55, c65), axis=0), np.concatenate(c16, c26, c36, c46, c56, c66), axis=0)), axis=1)

	return result



